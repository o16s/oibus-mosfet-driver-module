ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.shouldAcceptTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	shouldAcceptTransfer:
  25              	.LFB127:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "adc.h"
  44:Src/main.c    **** #include "can.h"
  45:Src/main.c    **** #include "usart.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** #include <canard.h>
  49:Src/main.c    **** #include <canard_stm32.h>
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PTD */
  58:Src/main.c    **** typedef struct
  59:Src/main.c    **** {
  60:Src/main.c    ****     uint8_t* name;
  61:Src/main.c    ****     int64_t val;
  62:Src/main.c    ****     int64_t min;
  63:Src/main.c    ****     int64_t max;
  64:Src/main.c    ****     int64_t defval;
  65:Src/main.c    **** } param_t;
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PTD */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  70:Src/main.c    **** /* USER CODE BEGIN PD */
  71:Src/main.c    **** 
  72:Src/main.c    **** /*
  73:Src/main.c    ****  * Application constants
  74:Src/main.c    ****  */
  75:Src/main.c    **** #define APP_VERSION_MAJOR                                           1
  76:Src/main.c    **** #define APP_VERSION_MINOR                                           0
  77:Src/main.c    **** #define APP_NODE_NAME                                               "ch.octanis.oibus.mosfet-driver
  78:Src/main.c    **** 
  79:Src/main.c    **** 
  80:Src/main.c    **** /*
  81:Src/main.c    ****  * Some useful constants defined by the UAVCAN specification.
  82:Src/main.c    ****  * Data type signature values can be easily obtained with the script show_data_type_info.py
  83:Src/main.c    ****  */
  84:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_DATA_TYPE_ID                      1
  85:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_DATA_TYPE_SIGNATURE               0x0b2a812620a11d40
  86:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_RANDOM_TIMEOUT_RANGE_USEC         400000UL
  87:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_REQUEST_DELAY_OFFSET_USEC         600000UL
  88:Src/main.c    **** 
  89:Src/main.c    **** #define UAVCAN_NODE_STATUS_MESSAGE_SIZE                             7
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 3


  90:Src/main.c    **** #define UAVCAN_NODE_STATUS_DATA_TYPE_ID                             341
  91:Src/main.c    **** #define UAVCAN_NODE_STATUS_DATA_TYPE_SIGNATURE                      0x0f0868d0c1a7c6f1
  92:Src/main.c    **** 
  93:Src/main.c    **** #define UAVCAN_NODE_HEALTH_OK                                       0
  94:Src/main.c    **** #define UAVCAN_NODE_HEALTH_WARNING                                  1
  95:Src/main.c    **** #define UAVCAN_NODE_HEALTH_ERROR                                    2
  96:Src/main.c    **** #define UAVCAN_NODE_HEALTH_CRITICAL                                 3
  97:Src/main.c    **** 
  98:Src/main.c    **** #define UAVCAN_NODE_MODE_OPERATIONAL                                0
  99:Src/main.c    **** #define UAVCAN_NODE_MODE_INITIALIZATION                             1
 100:Src/main.c    **** 
 101:Src/main.c    **** #define UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE                      ((3015 + 7) / 8)
 102:Src/main.c    **** #define UAVCAN_GET_NODE_INFO_DATA_TYPE_SIGNATURE                    0xee468a8121c46a9e
 103:Src/main.c    **** #define UAVCAN_GET_NODE_INFO_DATA_TYPE_ID                           1
 104:Src/main.c    **** 
 105:Src/main.c    **** #define UAVCAN_PROTOCOL_PARAM_GETSET_MAX_SIZE 			    ((2967+ 7) / 8)
 106:Src/main.c    **** #define UAVCAN_PROTOCOL_PARAM_GETSET_SIGNATURE			    0xa7b622f939d1a4d5
 107:Src/main.c    **** #define UAVCAN_PROTOCOL_PARAM_GETSET_ID				    11
 108:Src/main.c    **** 
 109:Src/main.c    **** 
 110:Src/main.c    **** 
 111:Src/main.c    **** #define UNIQUE_ID_LENGTH_BYTES 16
 112:Src/main.c    **** 
 113:Src/main.c    **** #define CANARD_SPIN_PERIOD   1000
 114:Src/main.c    **** 
 115:Src/main.c    **** #define FIRMWARE_GIT_HASH					    0x875ac4f289834e31f6e09c1886e38172ea73011c
 116:Src/main.c    **** #define UAVCAN_NODE_ID						    111
 117:Src/main.c    **** 
 118:Src/main.c    **** 
 119:Src/main.c    **** 
 120:Src/main.c    **** 
 121:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
 122:Src/main.c    **** /* USER CODE BEGIN PM */
 123:Src/main.c    **** #define ARRAY_SIZE(x) ((sizeof(x)/sizeof(0[x])) / ((size_t)(!(sizeof(x) % sizeof(0[x])))))
 124:Src/main.c    **** 
 125:Src/main.c    **** 
 126:Src/main.c    **** /*USER CODE END PM */
 127:Src/main.c    **** 
 128:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 129:Src/main.c    **** 
 130:Src/main.c    **** /* USER CODE BEGIN PV */
 131:Src/main.c    **** static param_t parameters[] =
 132:Src/main.c    **** {
 133:Src/main.c    **** 	    {"drivers", 0, 0b0000000000, 0b1111111111, 0b0000000000}
 134:Src/main.c    **** };
 135:Src/main.c    **** /* USER CODE END PV */
 136:Src/main.c    **** 
 137:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 138:Src/main.c    **** void SystemClock_Config(void);
 139:Src/main.c    **** 
 140:Src/main.c    **** 
 141:Src/main.c    **** 
 142:Src/main.c    **** 
 143:Src/main.c    **** /*
 144:Src/main.c    ****  * Node status variables
 145:Src/main.c    ****  */
 146:Src/main.c    **** static uint8_t node_health = UAVCAN_NODE_HEALTH_OK;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 4


 147:Src/main.c    **** static uint8_t node_mode   = UAVCAN_NODE_MODE_INITIALIZATION;
 148:Src/main.c    **** 
 149:Src/main.c    **** 
 150:Src/main.c    **** static uint16_t makeNodeInfoMessage(uint8_t buffer[UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE]);
 151:Src/main.c    **** static void makeNodeStatusMessage(uint8_t buffer[UAVCAN_NODE_STATUS_MESSAGE_SIZE]);
 152:Src/main.c    **** 
 153:Src/main.c    **** static bool shouldAcceptTransfer(const CanardInstance* ins,
 154:Src/main.c    ****                                  uint64_t* out_data_type_signature,
 155:Src/main.c    ****                                  uint16_t data_type_id,
 156:Src/main.c    ****                                  CanardTransferType transfer_type,
 157:Src/main.c    ****                                  uint8_t source_node_id);
 158:Src/main.c    **** static void readUniqueID(uint8_t* out_uid);
 159:Src/main.c    **** 
 160:Src/main.c    **** static uint16_t encodeParamCanard(param_t * p, uint8_t * buffer);
 161:Src/main.c    **** 
 162:Src/main.c    **** static void getNodeInfoHandleCanard(CanardRxTransfer* transfer);
 163:Src/main.c    **** void getsetHandleCanard(CanardRxTransfer* transfer);
 164:Src/main.c    **** static inline param_t* getParamByIndex(uint16_t index);
 165:Src/main.c    **** static inline param_t* getParamByName(uint8_t * name);
 166:Src/main.c    **** 
 167:Src/main.c    **** 
 168:Src/main.c    **** 
 169:Src/main.c    **** /////////////////////////////////////////////////////////////////////
 170:Src/main.c    **** 
 171:Src/main.c    **** 
 172:Src/main.c    **** static CanardInstance g_canard;             // The library instance
 173:Src/main.c    **** static uint8_t g_canard_memory_pool[1024];  // Arena for memory allocation, used by the library
 174:Src/main.c    **** static uint32_t g_uptime = 0;
 175:Src/main.c    **** 
 176:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 177:Src/main.c    **** /* USER CODE BEGIN 0 */
 178:Src/main.c    **** bool shouldAcceptTransfer(const CanardInstance* ins,
 179:Src/main.c    ****                           uint64_t* out_data_type_signature,
 180:Src/main.c    ****                           uint16_t data_type_id,
 181:Src/main.c    ****                           CanardTransferType transfer_type,
 182:Src/main.c    ****                           uint8_t source_node_id)
 183:Src/main.c    **** {
  27              		.loc 1 183 0
  28              		.cfi_startproc
  29              		@ args = 4, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 184:Src/main.c    ****     if ((transfer_type == CanardTransferTypeRequest) &&
  33              		.loc 1 184 0
  34 0000 012B     		cmp	r3, #1
  35 0002 03D0     		beq	.L6
  36              	.L2:
 185:Src/main.c    ****         (data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 186:Src/main.c    ****     {
 187:Src/main.c    ****         *out_data_type_signature = UAVCAN_GET_NODE_INFO_DATA_TYPE_SIGNATURE;
 188:Src/main.c    ****         return true;
 189:Src/main.c    ****     }
 190:Src/main.c    **** 
 191:Src/main.c    ****     if ((transfer_type == CanardTransferTypeRequest) &&
  37              		.loc 1 191 0
  38 0004 012B     		cmp	r3, #1
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 5


  39 0006 0AD0     		beq	.L7
 192:Src/main.c    ****         (data_type_id ==  UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 193:Src/main.c    ****     {
 194:Src/main.c    ****         *out_data_type_signature =  UAVCAN_PROTOCOL_PARAM_GETSET_SIGNATURE;
 195:Src/main.c    ****         return true;
 196:Src/main.c    ****     }
 197:Src/main.c    **** 
 198:Src/main.c    **** 
 199:Src/main.c    **** 
 200:Src/main.c    **** 
 201:Src/main.c    ****     return false;
  40              		.loc 1 201 0
  41 0008 0020     		movs	r0, #0
  42              	.LVL1:
  43 000a 7047     		bx	lr
  44              	.LVL2:
  45              	.L6:
 184:Src/main.c    ****         (data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
  46              		.loc 1 184 0 discriminator 1
  47 000c 012A     		cmp	r2, #1
  48 000e F9D1     		bne	.L2
 187:Src/main.c    ****         return true;
  49              		.loc 1 187 0
  50 0010 09A3     		adr	r3, .L9
  51 0012 D3E90023 		ldrd	r2, [r3]
  52              	.LVL3:
  53 0016 C1E90023 		strd	r2, [r1]
 188:Src/main.c    ****     }
  54              		.loc 1 188 0
  55 001a 0120     		movs	r0, #1
  56              	.LVL4:
  57 001c 7047     		bx	lr
  58              	.LVL5:
  59              	.L7:
 191:Src/main.c    ****         (data_type_id ==  UAVCAN_PROTOCOL_PARAM_GETSET_ID))
  60              		.loc 1 191 0 discriminator 1
  61 001e 0B2A     		cmp	r2, #11
  62 0020 01D0     		beq	.L8
  63              		.loc 1 201 0
  64 0022 0020     		movs	r0, #0
  65              	.LVL6:
 202:Src/main.c    **** }
  66              		.loc 1 202 0
  67 0024 7047     		bx	lr
  68              	.LVL7:
  69              	.L8:
 194:Src/main.c    ****         return true;
  70              		.loc 1 194 0
  71 0026 06A3     		adr	r3, .L9+8
  72 0028 D3E90023 		ldrd	r2, [r3]
  73              	.LVL8:
  74 002c C1E90023 		strd	r2, [r1]
 195:Src/main.c    ****     }
  75              		.loc 1 195 0
  76 0030 0120     		movs	r0, #1
  77              	.LVL9:
  78 0032 7047     		bx	lr
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 6


  79              	.L10:
  80 0034 AFF30080 		.align	3
  81              	.L9:
  82 0038 9E6AC421 		.word	566520478
  83 003c 818A46EE 		.word	-297366911
  84 0040 D5A4D139 		.word	970040533
  85 0044 F922B6A7 		.word	-1481235719
  86              		.cfi_endproc
  87              	.LFE127:
  89              		.section	.text.readUniqueID,"ax",%progbits
  90              		.align	1
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	readUniqueID:
  97              	.LFB132:
 203:Src/main.c    **** 
 204:Src/main.c    **** static void onTransferReceived(CanardInstance* ins, CanardRxTransfer* transfer)
 205:Src/main.c    **** {
 206:Src/main.c    ****     if ((transfer->transfer_type == CanardTransferTypeRequest) &&
 207:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 208:Src/main.c    ****     {
 209:Src/main.c    **** 	    getNodeInfoHandleCanard(transfer);
 210:Src/main.c    ****     }
 211:Src/main.c    **** 
 212:Src/main.c    **** 
 213:Src/main.c    **** 
 214:Src/main.c    ****     if ((transfer->transfer_type == CanardTransferTypeRequest) &&
 215:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 216:Src/main.c    ****     {
 217:Src/main.c    ****             getsetHandleCanard(transfer);
 218:Src/main.c    ****     }
 219:Src/main.c    **** 
 220:Src/main.c    **** 
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** static void swInit(void)
 224:Src/main.c    **** {
 225:Src/main.c    ****     CanardSTM32CANTimings timings;
 226:Src/main.c    ****     int result = canardSTM32ComputeCANTimings(HAL_RCC_GetPCLK1Freq(), 1000000, &timings);
 227:Src/main.c    ****     if (result)
 228:Src/main.c    ****     {
 229:Src/main.c    ****         //__ASM volatile("BKPT #01");
 230:Src/main.c    ****     }
 231:Src/main.c    ****     canardSTM32Init(&timings, CanardSTM32IfaceModeNormal);
 232:Src/main.c    ****     result = canardSTM32Init(&timings, CanardSTM32IfaceModeNormal);
 233:Src/main.c    ****     if (result)
 234:Src/main.c    ****     {
 235:Src/main.c    **** 
 236:Src/main.c    **** /*	      for(int i=0;i<10;i++){
 237:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 238:Src/main.c    ****                              HAL_Delay(15);
 239:Src/main.c    ****                      }
 240:Src/main.c    **** */
 241:Src/main.c    **** 
 242:Src/main.c    **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 7


 243:Src/main.c    **** 
 244:Src/main.c    **** 	    //__ASM volatile("BKPT #01");
 245:Src/main.c    ****     }
 246:Src/main.c    **** 
 247:Src/main.c    ****     canardInit(&g_canard,                         // Uninitialized library instance
 248:Src/main.c    ****                g_canard_memory_pool,              // Raw memory chunk used for dynamic allocation
 249:Src/main.c    ****                sizeof(g_canard_memory_pool),      // Size of the above, in bytes
 250:Src/main.c    ****                onTransferReceived,                // Callback, see CanardOnTransferReception
 251:Src/main.c    ****                shouldAcceptTransfer,              // Callback, see CanardShouldAcceptTransfer
 252:Src/main.c    ****                NULL);
 253:Src/main.c    **** 
 254:Src/main.c    ****     canardSetLocalNodeID(&g_canard, UAVCAN_NODE_ID);
 255:Src/main.c    **** }
 256:Src/main.c    **** 
 257:Src/main.c    **** 
 258:Src/main.c    **** 
 259:Src/main.c    **** static void spinCanard(void)
 260:Src/main.c    **** {
 261:Src/main.c    **** 
 262:Src/main.c    **** 
 263:Src/main.c    **** 	static uint32_t spin_time = 0;
 264:Src/main.c    ****     if (HAL_GetTick() < spin_time + CANARD_SPIN_PERIOD) {
 265:Src/main.c    **** 	    return; }  // rate limiting
 266:Src/main.c    ****     spin_time = HAL_GetTick();
 267:Src/main.c    ****          HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 268:Src/main.c    **** 
 269:Src/main.c    **** 
 270:Src/main.c    **** 
 271:Src/main.c    **** 
 272:Src/main.c    ****     uint8_t buffer[UAVCAN_NODE_STATUS_MESSAGE_SIZE];
 273:Src/main.c    ****     static uint8_t transfer_id = 0;                          // This variable MUST BE STATIC; refer
 274:Src/main.c    ****      HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 275:Src/main.c    **** 
 276:Src/main.c    ****      makeNodeStatusMessage(buffer);
 277:Src/main.c    **** 
 278:Src/main.c    ****      canardBroadcast(&g_canard,
 279:Src/main.c    ****                     UAVCAN_NODE_STATUS_DATA_TYPE_SIGNATURE,
 280:Src/main.c    ****                     UAVCAN_NODE_STATUS_DATA_TYPE_ID,
 281:Src/main.c    ****                     &transfer_id,
 282:Src/main.c    ****                     CANARD_TRANSFER_PRIORITY_LOW,
 283:Src/main.c    ****                     buffer,
 284:Src/main.c    ****                     UAVCAN_NODE_STATUS_MESSAGE_SIZE);
 285:Src/main.c    **** 
 286:Src/main.c    ****   /*   if(cb > 0){
 287:Src/main.c    **** 	     for(int i=0;i<10;i++){
 288:Src/main.c    **** 	                     HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 289:Src/main.c    **** 			     HAL_Delay(300);
 290:Src/main.c    **** 	     }
 291:Src/main.c    ****      }
 292:Src/main.c    **** 
 293:Src/main.c    ****      if(cb <= 0){
 294:Src/main.c    ****              for(int i=0;i<10;i++){
 295:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 296:Src/main.c    ****                              HAL_Delay(150);
 297:Src/main.c    ****              }
 298:Src/main.c    ****      }
 299:Src/main.c    **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 8


 300:Src/main.c    **** */
 301:Src/main.c    **** 
 302:Src/main.c    **** 
 303:Src/main.c    **** 
 304:Src/main.c    **** }
 305:Src/main.c    **** 
 306:Src/main.c    **** 
 307:Src/main.c    **** 
 308:Src/main.c    **** static void makeNodeStatusMessage(uint8_t buffer[UAVCAN_NODE_STATUS_MESSAGE_SIZE])
 309:Src/main.c    **** {
 310:Src/main.c    ****     const uint8_t node_health = UAVCAN_NODE_HEALTH_OK;
 311:Src/main.c    ****     const uint8_t node_mode   = UAVCAN_NODE_MODE_OPERATIONAL;
 312:Src/main.c    ****     memset(buffer, 0, UAVCAN_NODE_STATUS_MESSAGE_SIZE);
 313:Src/main.c    ****     const uint32_t uptime_sec = HAL_GetTick() / 1000;
 314:Src/main.c    ****     canardEncodeScalar(buffer,  0, 32, &uptime_sec);
 315:Src/main.c    ****     canardEncodeScalar(buffer, 32,  2, &node_health);
 316:Src/main.c    ****     canardEncodeScalar(buffer, 34,  3, &node_mode);
 317:Src/main.c    **** }
 318:Src/main.c    **** 
 319:Src/main.c    **** 
 320:Src/main.c    **** 
 321:Src/main.c    **** 
 322:Src/main.c    **** static void readUniqueID(uint8_t* out_uid)
 323:Src/main.c    **** {
  98              		.loc 1 323 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.LVL10:
 104              	.LBB12:
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 105              		.loc 1 324 0
 106 0000 0023     		movs	r3, #0
 107 0002 02E0     		b	.L12
 108              	.LVL11:
 109              	.L13:
 325:Src/main.c    ****     {
 326:Src/main.c    ****         out_uid[i] = i;
 110              		.loc 1 326 0 discriminator 3
 111 0004 C354     		strb	r3, [r0, r3]
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 112              		.loc 1 324 0 discriminator 3
 113 0006 0133     		adds	r3, r3, #1
 114              	.LVL12:
 115 0008 DBB2     		uxtb	r3, r3
 116              	.LVL13:
 117              	.L12:
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 118              		.loc 1 324 0 is_stmt 0 discriminator 1
 119 000a 0F2B     		cmp	r3, #15
 120 000c FAD9     		bls	.L13
 121              	.LBE12:
 327:Src/main.c    ****     }
 328:Src/main.c    **** }
 122              		.loc 1 328 0 is_stmt 1
 123 000e 7047     		bx	lr
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 9


 124              		.cfi_endproc
 125              	.LFE132:
 127              		.section	.text.makeNodeStatusMessage,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
 134              	makeNodeStatusMessage:
 135              	.LFB131:
 309:Src/main.c    ****     const uint8_t node_health = UAVCAN_NODE_HEALTH_OK;
 136              		.loc 1 309 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL14:
 141 0000 30B5     		push	{r4, r5, lr}
 142              	.LCFI0:
 143              		.cfi_def_cfa_offset 12
 144              		.cfi_offset 4, -12
 145              		.cfi_offset 5, -8
 146              		.cfi_offset 14, -4
 147 0002 83B0     		sub	sp, sp, #12
 148              	.LCFI1:
 149              		.cfi_def_cfa_offset 24
 150 0004 0446     		mov	r4, r0
 310:Src/main.c    ****     const uint8_t node_mode   = UAVCAN_NODE_MODE_OPERATIONAL;
 151              		.loc 1 310 0
 152 0006 0025     		movs	r5, #0
 153 0008 8DF80750 		strb	r5, [sp, #7]
 311:Src/main.c    ****     memset(buffer, 0, UAVCAN_NODE_STATUS_MESSAGE_SIZE);
 154              		.loc 1 311 0
 155 000c 8DF80650 		strb	r5, [sp, #6]
 312:Src/main.c    ****     const uint32_t uptime_sec = HAL_GetTick() / 1000;
 156              		.loc 1 312 0
 157 0010 0560     		str	r5, [r0]	@ unaligned
 158 0012 C0F80350 		str	r5, [r0, #3]	@ unaligned
 313:Src/main.c    ****     canardEncodeScalar(buffer,  0, 32, &uptime_sec);
 159              		.loc 1 313 0
 160 0016 FFF7FEFF 		bl	HAL_GetTick
 161              	.LVL15:
 162 001a 0E4B     		ldr	r3, .L16
 163 001c A3FB0030 		umull	r3, r0, r3, r0
 164 0020 8009     		lsrs	r0, r0, #6
 165 0022 02AB     		add	r3, sp, #8
 166 0024 43F8080D 		str	r0, [r3, #-8]!
 314:Src/main.c    ****     canardEncodeScalar(buffer, 32,  2, &node_health);
 167              		.loc 1 314 0
 168 0028 2022     		movs	r2, #32
 169 002a 2946     		mov	r1, r5
 170 002c 2046     		mov	r0, r4
 171 002e FFF7FEFF 		bl	canardEncodeScalar
 172              	.LVL16:
 315:Src/main.c    ****     canardEncodeScalar(buffer, 34,  3, &node_mode);
 173              		.loc 1 315 0
 174 0032 0DF10703 		add	r3, sp, #7
 175 0036 0222     		movs	r2, #2
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 10


 176 0038 2021     		movs	r1, #32
 177 003a 2046     		mov	r0, r4
 178 003c FFF7FEFF 		bl	canardEncodeScalar
 179              	.LVL17:
 316:Src/main.c    **** }
 180              		.loc 1 316 0
 181 0040 0DF10603 		add	r3, sp, #6
 182 0044 0322     		movs	r2, #3
 183 0046 2221     		movs	r1, #34
 184 0048 2046     		mov	r0, r4
 185 004a FFF7FEFF 		bl	canardEncodeScalar
 186              	.LVL18:
 317:Src/main.c    **** 
 187              		.loc 1 317 0
 188 004e 03B0     		add	sp, sp, #12
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 12
 191              		@ sp needed
 192 0050 30BD     		pop	{r4, r5, pc}
 193              	.LVL19:
 194              	.L17:
 195 0052 00BF     		.align	2
 196              	.L16:
 197 0054 D34D6210 		.word	274877907
 198              		.cfi_endproc
 199              	.LFE131:
 201              		.section	.text.makeNodeInfoMessage,"ax",%progbits
 202              		.align	1
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	makeNodeInfoMessage:
 209              	.LFB139:
 329:Src/main.c    **** 
 330:Src/main.c    **** static void sendCanard(void)
 331:Src/main.c    **** {
 332:Src/main.c    ****     const CanardCANFrame* txf = canardPeekTxQueue(&g_canard);
 333:Src/main.c    **** while(txf)
 334:Src/main.c    ****     {
 335:Src/main.c    ****         const int tx_res = canardSTM32Transmit(txf);
 336:Src/main.c    **** 
 337:Src/main.c    **** 	/*if(tx_res >= 0){
 338:Src/main.c    **** 	for(int i=0;i<10;i++){
 339:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 340:Src/main.c    ****                              HAL_Delay(70);
 341:Src/main.c    ****                      }
 342:Src/main.c    **** 	}
 343:Src/main.c    **** 
 344:Src/main.c    **** 
 345:Src/main.c    ****         if (tx_res < 0)         // Failure - drop the frame and report
 346:Src/main.c    ****         {
 347:Src/main.c    **** 
 348:Src/main.c    **** 
 349:Src/main.c    **** 	             for(int i=0;i<10;i++){
 350:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 351:Src/main.c    ****                              HAL_Delay(555);
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 11


 352:Src/main.c    ****         	     }
 353:Src/main.c    **** 
 354:Src/main.c    **** 
 355:Src/main.c    **** 
 356:Src/main.c    **** 
 357:Src/main.c    **** 		//__ASM volatile("BKPT #01");   // TODO: handle the error properly
 358:Src/main.c    ****         }
 359:Src/main.c    **** 	*/
 360:Src/main.c    **** 
 361:Src/main.c    ****         if(tx_res > 0)
 362:Src/main.c    ****         {
 363:Src/main.c    ****             canardPopTxQueue(&g_canard);
 364:Src/main.c    ****         }
 365:Src/main.c    ****         txf = canardPeekTxQueue(&g_canard);
 366:Src/main.c    ****     }
 367:Src/main.c    **** }
 368:Src/main.c    **** 
 369:Src/main.c    **** static void receiveCanard(void)
 370:Src/main.c    **** {
 371:Src/main.c    ****     CanardCANFrame rx_frame;
 372:Src/main.c    ****     int res = canardSTM32Receive(&rx_frame);
 373:Src/main.c    ****     if(res)
 374:Src/main.c    **** {
 375:Src/main.c    ****         canardHandleRxFrame(&g_canard, &rx_frame, HAL_GetTick() * 1000);
 376:Src/main.c    ****     }
 377:Src/main.c    **** }
 378:Src/main.c    **** 
 379:Src/main.c    **** 
 380:Src/main.c    **** /* USER CODE END 0 */
 381:Src/main.c    **** 
 382:Src/main.c    **** /**
 383:Src/main.c    ****   * @brief  The application entry point.
 384:Src/main.c    ****   * @retval int
 385:Src/main.c    ****   */
 386:Src/main.c    **** 
 387:Src/main.c    **** /**
 388:Src/main.c    ****   * @brief System Clock Configuration
 389:Src/main.c    ****   * @retval None
 390:Src/main.c    ****   */
 391:Src/main.c    **** void SystemClock_Config(void)
 392:Src/main.c    **** {
 393:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 394:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 395:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 396:Src/main.c    **** 
 397:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 398:Src/main.c    ****   */
 399:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 400:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 401:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 402:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 403:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 404:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 405:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 406:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 407:Src/main.c    ****   {
 408:Src/main.c    ****     Error_Handler();
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 12


 409:Src/main.c    ****   }
 410:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 411:Src/main.c    ****   */
 412:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 413:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 414:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 415:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 416:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 417:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 418:Src/main.c    **** 
 419:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 420:Src/main.c    ****   {
 421:Src/main.c    ****     Error_Handler();
 422:Src/main.c    ****   }
 423:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_ADC12;
 424:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 425:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 426:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 427:Src/main.c    ****   {
 428:Src/main.c    ****     Error_Handler();
 429:Src/main.c    ****   }
 430:Src/main.c    **** }
 431:Src/main.c    **** 
 432:Src/main.c    **** /* USER CODE BEGIN 4 */
 433:Src/main.c    **** void setDriver(GPIO_TypeDef * gpioBank, int pin, int driverBit, int driverState){
 434:Src/main.c    ****       if(driverState & (1<<driverBit)){
 435:Src/main.c    ****          HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_SET);
 436:Src/main.c    ****       }else{
 437:Src/main.c    ****         HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_RESET);
 438:Src/main.c    ****       }
 439:Src/main.c    **** }
 440:Src/main.c    **** 
 441:Src/main.c    **** 
 442:Src/main.c    **** 
 443:Src/main.c    **** int main(void)
 444:Src/main.c    **** {
 445:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 446:Src/main.c    ****   HAL_Init();
 447:Src/main.c    **** 
 448:Src/main.c    ****   /* Configure the system clock */
 449:Src/main.c    ****   SystemClock_Config();
 450:Src/main.c    ****   SysTick_Config(SystemCoreClock / 1000); // To make systick event happen every 1 ms
 451:Src/main.c    **** 
 452:Src/main.c    ****   /* Initialize all configured peripherals */
 453:Src/main.c    ****   MX_GPIO_Init();
 454:Src/main.c    ****   MX_ADC1_Init();
 455:Src/main.c    ****   MX_ADC2_Init();
 456:Src/main.c    ****   MX_CAN_Init();
 457:Src/main.c    ****   MX_USART3_UART_Init();
 458:Src/main.c    **** 
 459:Src/main.c    **** 
 460:Src/main.c    ****   //turn on TCAN330
 461:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, CAN_S_Pin, GPIO_PIN_RESET);
 462:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, CAN_SHTD_Pin, GPIO_PIN_RESET);
 463:Src/main.c    **** 
 464:Src/main.c    ****   for (int i=0; i<6;i++){
 465:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 13


 466:Src/main.c    **** 	  HAL_Delay(50);
 467:Src/main.c    ****   }
 468:Src/main.c    **** 
 469:Src/main.c    ****   swInit();
 470:Src/main.c    ****   /* USER CODE END 2 */
 471:Src/main.c    **** 
 472:Src/main.c    ****   /* Infinite loop */
 473:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 474:Src/main.c    ****   param_t* p = NULL;
 475:Src/main.c    **** 
 476:Src/main.c    ****   while (1)
 477:Src/main.c    ****   {
 478:Src/main.c    ****   //   HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 479:Src/main.c    ****      // HAL_Delay(100);
 480:Src/main.c    ****       sendCanard();
 481:Src/main.c    ****       receiveCanard();
 482:Src/main.c    ****       spinCanard();
 483:Src/main.c    **** 
 484:Src/main.c    ****       //set switches
 485:Src/main.c    ****       p = getParamByName("drivers");
 486:Src/main.c    **** 
 487:Src/main.c    ****       setDriver(GPIOB, In1_Pin, 0, p->val);
 488:Src/main.c    ****       setDriver(GPIOB, In2_Pin, 1, p->val);
 489:Src/main.c    ****       setDriver(GPIOA, In3_Pin, 2, p->val);
 490:Src/main.c    ****       setDriver(GPIOA, In4_Pin, 3, p->val);
 491:Src/main.c    ****       setDriver(GPIOA, In5_Pin, 4, p->val);
 492:Src/main.c    ****       setDriver(GPIOA, In6_Pin, 5, p->val);
 493:Src/main.c    ****       setDriver(GPIOA, In7_Pin, 6, p->val);
 494:Src/main.c    ****       setDriver(GPIOC, In8_Pin, 7, p->val);
 495:Src/main.c    ****       setDriver(GPIOB, In9_Pin, 8, p->val);
 496:Src/main.c    ****       setDriver(GPIOA, In10_Pin, 9, p->val);
 497:Src/main.c    **** 
 498:Src/main.c    ****   }
 499:Src/main.c    **** 
 500:Src/main.c    **** }
 501:Src/main.c    **** 
 502:Src/main.c    **** 
 503:Src/main.c    **** 
 504:Src/main.c    **** void getsetHandleCanard(CanardRxTransfer* transfer){
 505:Src/main.c    **** 
 506:Src/main.c    ****     uint16_t index = 0xFFFF;
 507:Src/main.c    ****     uint8_t tag    = 0;
 508:Src/main.c    ****     int offset     = 0;
 509:Src/main.c    ****     int64_t val    = 0;
 510:Src/main.c    **** 
 511:Src/main.c    ****     canardDecodeScalar(transfer, offset,  13, false, &index);
 512:Src/main.c    ****     offset += 13;
 513:Src/main.c    ****     canardDecodeScalar(transfer, offset, 3, false, &tag);
 514:Src/main.c    ****     offset += 3;
 515:Src/main.c    **** 
 516:Src/main.c    ****     if (tag == 1)
 517:Src/main.c    ****     {
 518:Src/main.c    ****         canardDecodeScalar(transfer, offset, 64, false, &val);
 519:Src/main.c    ****         offset += 64;
 520:Src/main.c    ****     }
 521:Src/main.c    **** 
 522:Src/main.c    ****     uint16_t n = transfer->payload_len - offset / 8 ;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 14


 523:Src/main.c    ****     uint8_t name[16] = "";
 524:Src/main.c    ****     for (int i = 0; i < n; i++)
 525:Src/main.c    ****     {
 526:Src/main.c    ****         canardDecodeScalar(transfer, offset, 8, false, &name[i]);
 527:Src/main.c    ****         offset += 8;
 528:Src/main.c    ****     }
 529:Src/main.c    **** 
 530:Src/main.c    ****     param_t* p = NULL;
 531:Src/main.c    **** 
 532:Src/main.c    ****     if (strlen((char const*)name))
 533:Src/main.c    ****     {
 534:Src/main.c    ****         p = getParamByName(name);
 535:Src/main.c    ****     }
 536:Src/main.c    ****     else
 537:Src/main.c    ****     {
 538:Src/main.c    ****         p = getParamByIndex(index);
 539:Src/main.c    ****     }
 540:Src/main.c    **** 
 541:Src/main.c    ****     if ((p)&&(tag == 1))
 542:Src/main.c    ****     {
 543:Src/main.c    ****         p->val = val;
 544:Src/main.c    ****     }
 545:Src/main.c    **** 
 546:Src/main.c    ****     uint8_t  buffer[64] = "";
 547:Src/main.c    ****     uint16_t len = encodeParamCanard(p, buffer);
 548:Src/main.c    ****     int result = canardRequestOrRespond(&g_canard,
 549:Src/main.c    ****                                         transfer->source_node_id,
 550:Src/main.c    ****                                         UAVCAN_PROTOCOL_PARAM_GETSET_SIGNATURE,
 551:Src/main.c    ****                                         UAVCAN_PROTOCOL_PARAM_GETSET_ID,
 552:Src/main.c    ****                                         &transfer->transfer_id,
 553:Src/main.c    ****                                         transfer->priority,
 554:Src/main.c    ****                                         CanardResponse,
 555:Src/main.c    ****                                         &buffer[0],
 556:Src/main.c    ****                                         (uint16_t)len);
 557:Src/main.c    **** 
 558:Src/main.c    **** 
 559:Src/main.c    **** 
 560:Src/main.c    **** 
 561:Src/main.c    **** 
 562:Src/main.c    **** }
 563:Src/main.c    **** 
 564:Src/main.c    **** static uint16_t makeNodeInfoMessage(uint8_t buffer[UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE])
 565:Src/main.c    **** {
 210              		.loc 1 565 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              	.LVL20:
 215 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 20
 218              		.cfi_offset 4, -20
 219              		.cfi_offset 5, -16
 220              		.cfi_offset 6, -12
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 15


 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 32
 226 0004 0446     		mov	r4, r0
 566:Src/main.c    ****     memset(buffer, 0, UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE);
 227              		.loc 1 566 0
 228 0006 40F27912 		movw	r2, #377
 229 000a 0021     		movs	r1, #0
 230 000c FFF7FEFF 		bl	memset
 231              	.LVL21:
 567:Src/main.c    ****     makeNodeStatusMessage(buffer);
 232              		.loc 1 567 0
 233 0010 2046     		mov	r0, r4
 234 0012 FFF7FEFF 		bl	makeNodeStatusMessage
 235              	.LVL22:
 568:Src/main.c    **** 
 569:Src/main.c    ****     buffer[7] = APP_VERSION_MAJOR;
 236              		.loc 1 569 0
 237 0016 0123     		movs	r3, #1
 238 0018 E371     		strb	r3, [r4, #7]
 570:Src/main.c    ****     buffer[8] = APP_VERSION_MINOR;
 239              		.loc 1 570 0
 240 001a 0022     		movs	r2, #0
 241 001c 2272     		strb	r2, [r4, #8]
 571:Src/main.c    ****     buffer[9] = 1;  // Optional field flags, VCS commit is set
 242              		.loc 1 571 0
 243 001e 6372     		strb	r3, [r4, #9]
 572:Src/main.c    ****     const uint32_t git_hash = FIRMWARE_GIT_HASH;
 244              		.loc 1 572 0
 245 0020 02AB     		add	r3, sp, #8
 246 0022 104A     		ldr	r2, .L21
 247 0024 43F8042D 		str	r2, [r3, #-4]!
 573:Src/main.c    ****     canardEncodeScalar(buffer, 80, 32, &git_hash);
 248              		.loc 1 573 0
 249 0028 2022     		movs	r2, #32
 250 002a 5021     		movs	r1, #80
 251 002c 2046     		mov	r0, r4
 252 002e FFF7FEFF 		bl	canardEncodeScalar
 253              	.LVL23:
 574:Src/main.c    **** 
 575:Src/main.c    ****     readUniqueID(&buffer[24]);
 254              		.loc 1 575 0
 255 0032 04F11800 		add	r0, r4, #24
 256 0036 FFF7FEFF 		bl	readUniqueID
 257              	.LVL24:
 576:Src/main.c    ****     const size_t name_len = strlen(APP_NODE_NAME);
 577:Src/main.c    ****     memcpy(&buffer[41], APP_NODE_NAME, name_len);
 258              		.loc 1 577 0
 259 003a 0B4E     		ldr	r6, .L21+4
 260 003c 2934     		adds	r4, r4, #41
 261              	.LVL25:
 262 003e 06F12007 		add	r7, r6, #32
 263              	.LVL26:
 264              	.L19:
 265 0042 3546     		mov	r5, r6
 266 0044 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 267 0046 2060     		str	r0, [r4]	@ unaligned
 268 0048 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 16


 269 004a A260     		str	r2, [r4, #8]	@ unaligned
 270 004c E360     		str	r3, [r4, #12]	@ unaligned
 271 004e 2E46     		mov	r6, r5
 272 0050 1034     		adds	r4, r4, #16
 273 0052 BD42     		cmp	r5, r7
 274 0054 F5D1     		bne	.L19
 275 0056 2868     		ldr	r0, [r5]
 276 0058 2060     		str	r0, [r4]	@ unaligned
 277 005a 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 278 005c 2371     		strb	r3, [r4, #4]
 578:Src/main.c    ****     return 41 + name_len ;
 579:Src/main.c    **** }
 279              		.loc 1 579 0
 280 005e 4E20     		movs	r0, #78
 281 0060 03B0     		add	sp, sp, #12
 282              	.LCFI5:
 283              		.cfi_def_cfa_offset 20
 284              		@ sp needed
 285 0062 F0BD     		pop	{r4, r5, r6, r7, pc}
 286              	.L22:
 287              		.align	2
 288              	.L21:
 289 0064 1C0173EA 		.word	-361561828
 290 0068 00000000 		.word	.LC0
 291              		.cfi_endproc
 292              	.LFE139:
 294              		.section	.text.getNodeInfoHandleCanard,"ax",%progbits
 295              		.align	1
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	getNodeInfoHandleCanard:
 302              	.LFB140:
 580:Src/main.c    **** 
 581:Src/main.c    **** static void getNodeInfoHandleCanard(CanardRxTransfer* transfer)
 582:Src/main.c    **** {
 303              		.loc 1 582 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 384
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL27:
 308 0000 30B5     		push	{r4, r5, lr}
 309              	.LCFI6:
 310              		.cfi_def_cfa_offset 12
 311              		.cfi_offset 4, -12
 312              		.cfi_offset 5, -8
 313              		.cfi_offset 14, -4
 314 0002 E7B0     		sub	sp, sp, #412
 315              	.LCFI7:
 316              		.cfi_def_cfa_offset 424
 317 0004 0446     		mov	r4, r0
 583:Src/main.c    ****     uint8_t buffer[UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE];
 584:Src/main.c    ****     memset(buffer, 0, UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE);
 318              		.loc 1 584 0
 319 0006 07AD     		add	r5, sp, #28
 320 0008 40F27912 		movw	r2, #377
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 17


 321 000c 0021     		movs	r1, #0
 322 000e 2846     		mov	r0, r5
 323              	.LVL28:
 324 0010 FFF7FEFF 		bl	memset
 325              	.LVL29:
 585:Src/main.c    ****     const uint16_t len = makeNodeInfoMessage(buffer);
 326              		.loc 1 585 0
 327 0014 2846     		mov	r0, r5
 328 0016 FFF7FEFF 		bl	makeNodeInfoMessage
 329              	.LVL30:
 586:Src/main.c    ****     int result = canardRequestOrRespond(&g_canard,
 330              		.loc 1 586 0
 331 001a E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 332 001c 0590     		str	r0, [sp, #20]
 333 001e 0495     		str	r5, [sp, #16]
 334 0020 0023     		movs	r3, #0
 335 0022 0393     		str	r3, [sp, #12]
 336 0024 A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 337 0026 0293     		str	r3, [sp, #8]
 338 0028 1934     		adds	r4, r4, #25
 339              	.LVL31:
 340 002a 0194     		str	r4, [sp, #4]
 341 002c 0123     		movs	r3, #1
 342 002e 0093     		str	r3, [sp]
 343 0030 04A3     		adr	r3, .L25+4
 344 0032 D3E90023 		ldrd	r2, [r3]
 345 0036 0248     		ldr	r0, .L25
 346              	.LVL32:
 347 0038 FFF7FEFF 		bl	canardRequestOrRespond
 348              	.LVL33:
 587:Src/main.c    ****                                         transfer->source_node_id,
 588:Src/main.c    ****                                         UAVCAN_GET_NODE_INFO_DATA_TYPE_SIGNATURE,
 589:Src/main.c    ****                                         UAVCAN_GET_NODE_INFO_DATA_TYPE_ID,
 590:Src/main.c    ****                                         &transfer->transfer_id,
 591:Src/main.c    ****                                         transfer->priority,
 592:Src/main.c    ****                                         CanardResponse,
 593:Src/main.c    ****                                         &buffer[0],
 594:Src/main.c    ****                                         (uint16_t)len);
 595:Src/main.c    ****     if (result < 0)
 596:Src/main.c    ****     {
 597:Src/main.c    ****         // TODO: handle the error
 598:Src/main.c    ****     }
 599:Src/main.c    **** }
 349              		.loc 1 599 0
 350 003c 67B0     		add	sp, sp, #412
 351              	.LCFI8:
 352              		.cfi_def_cfa_offset 12
 353              		@ sp needed
 354 003e 30BD     		pop	{r4, r5, pc}
 355              	.LVL34:
 356              	.L26:
 357              		.align	3
 358              	.L25:
 359 0040 00000000 		.word	.LANCHOR0
 360 0044 9E6AC421 		.word	566520478
 361 0048 818A46EE 		.word	-297366911
 362              		.cfi_endproc
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 18


 363              	.LFE140:
 365              		.section	.text.swInit,"ax",%progbits
 366              		.align	1
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv4-sp-d16
 372              	swInit:
 373              	.LFB129:
 224:Src/main.c    ****     CanardSTM32CANTimings timings;
 374              		.loc 1 224 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 8
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 379              	.LCFI9:
 380              		.cfi_def_cfa_offset 20
 381              		.cfi_offset 4, -20
 382              		.cfi_offset 5, -16
 383              		.cfi_offset 6, -12
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 85B0     		sub	sp, sp, #20
 387              	.LCFI10:
 388              		.cfi_def_cfa_offset 40
 226:Src/main.c    ****     if (result)
 389              		.loc 1 226 0
 390 0004 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 391              	.LVL35:
 392              	.LBB16:
 393              	.LBB17:
 394              		.file 2 "Lib/libcanard/drivers/stm32/canard_stm32.h"
   1:Lib/libcanard/drivers/stm32/canard_stm32.h **** /*
   2:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Copyright (c) 2017 UAVCAN Team
   3:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
   4:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Distributed under the MIT License, available in the file LICENSE.
   5:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
   6:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Author: Pavel Kirienko <pavel.kirienko@zubax.com>
   7:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
   8:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
   9:Lib/libcanard/drivers/stm32/canard_stm32.h **** #ifndef CANARD_STM32_H
  10:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_H
  11:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  12:Lib/libcanard/drivers/stm32/canard_stm32.h **** #include <canard.h>
  13:Lib/libcanard/drivers/stm32/canard_stm32.h **** #include <string.h>     // NOLINT
  14:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  15:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  16:Lib/libcanard/drivers/stm32/canard_stm32.h **** #ifdef __cplusplus
  17:Lib/libcanard/drivers/stm32/canard_stm32.h **** extern "C"
  18:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
  19:Lib/libcanard/drivers/stm32/canard_stm32.h **** #endif
  20:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  21:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  22:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Set this build config macro to 1 to use CAN2 instead of CAN1, if available.
  23:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Setting this parameter when CAN2 is not available may not be detected at compile time!
  24:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  25:Lib/libcanard/drivers/stm32/canard_stm32.h **** #if !defined(CANARD_STM32_USE_CAN2)
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 19


  26:Lib/libcanard/drivers/stm32/canard_stm32.h **** # define CANARD_STM32_USE_CAN2                                  0
  27:Lib/libcanard/drivers/stm32/canard_stm32.h **** #endif
  28:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  29:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  30:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Trigger an assertion failure if inner priority inversion is detected at run time.
  31:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This setting has no effect in release builds, where NDEBUG is defined.
  32:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  33:Lib/libcanard/drivers/stm32/canard_stm32.h **** #if !defined(CANARD_STM32_DEBUG_INNER_PRIORITY_INVERSION)
  34:Lib/libcanard/drivers/stm32/canard_stm32.h **** # define CANARD_STM32_DEBUG_INNER_PRIORITY_INVERSION            1
  35:Lib/libcanard/drivers/stm32/canard_stm32.h **** #endif
  36:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  37:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  38:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Driver error codes.
  39:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * These values are returned negated from API functions that return int.
  40:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  41:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE                         1000
  42:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_MSR_INAK_NOT_SET                             1001
  43:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_MSR_INAK_NOT_CLEARED                         1002
  44:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_UNSUPPORTED_FRAME_FORMAT                     1003
  45:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  46:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  47:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This is defined by the bxCAN hardware.
  48:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Devices with only one CAN interface have 14 filters (e.g. F103).
  49:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Devices with two CAN interfaces have 28 filters, which are shared between two interfaces (e.g. F
  50:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The filters are distributed between CAN1 and CAN2 by means of the CAN2 start filter bank selecti
  51:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * which is a number from 1 to 27 inclusive. Seeing as the start bank cannot be set to 0, CAN2 has 
  52:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * to use.
  53:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  54:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_NUM_ACCEPTANCE_FILTERS                            14U
  55:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  56:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  57:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The interface can be initialized in either of these modes.
  58:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
  59:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The Silent mode is useful for automatic CAN bit rate detection, where the interface is initializ
  60:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * arbitrarily guessed CAN bit rate (typically either 1 Mbps, 500 Kbps, 250 Kbps, or 125 Kbps, thes
  61:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * standard values defined by the UAVCAN specification), and the bus is then listened for 1 second 
  62:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * determine whether the bit rate was guessed correctly. It is paramount to use the silent mode in 
  63:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * as to not interfere with ongoing communications on the bus if the guess was incorrect.
  64:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
  65:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The automatic TX abort on error mode should be used during dynamic node ID allocation. The reaso
  66:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * is well explained in the UAVCAN specification, please read it.
  67:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
  68:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The normal mode should be used for all other use cases, particularly for the normal operation of
  69:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * hence the name.
  70:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  71:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef enum
  72:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
  73:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CanardSTM32IfaceModeNormal,                         //!< Normal mode
  74:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CanardSTM32IfaceModeSilent,                         //!< Do not affect the bus, only listen
  75:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CanardSTM32IfaceModeAutomaticTxAbortOnError         //!< Abort pending TX if a bus error has oc
  76:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32IfaceMode;
  77:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  78:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  79:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Interface statistics; these values can be queried using a dedicated API call.
  80:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  81:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef struct
  82:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 20


  83:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint64_t rx_overflow_count;
  84:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint64_t error_count;
  85:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32Stats;
  86:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  87:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  88:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * ID and Mask of a hardware acceptance filter.
  89:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The ID and Mask fields support flags @ref CANARD_CAN_FRAME_EFF and @ref CANARD_CAN_FRAME_RTR.
  90:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  91:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef struct
  92:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
  93:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint32_t id;
  94:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint32_t mask;
  95:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32AcceptanceFilterConfiguration;
  96:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  97:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  98:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * These parameters define the timings of the CAN controller.
  99:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Please refer to the documentation of the bxCAN macrocell for explanation.
 100:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * These values can be computed by the developed beforehand if ROM size is of a concern,
 101:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * or they can be computed at run time using the function defined below.
 102:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 103:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef struct
 104:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
 105:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint16_t bit_rate_prescaler;                        /// [1, 1024]
 106:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bit_segment_1;                              /// [1, 16]
 107:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bit_segment_2;                              /// [1, 8]
 108:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t max_resynchronization_jump_width;           /// [1, 4] (recommended value is 1)
 109:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32CANTimings;
 110:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 111:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 112:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Initializes the CAN controller at the specified bit rate.
 113:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The mode can be either normal, silent, or auto-abort on error;
 114:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * in silent mode the controller will be only listening, not affecting the state of the bus;
 115:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * in the auto abort mode the controller will cancel the pending transmissions if a bus error is en
 116:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The auto abort mode is needed for dynamic node ID allocation procedure; please refer to the UAVC
 117:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * for more information about this topic.
 118:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 119:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function can be invoked any number of times; every invocation re-initializes everything fro
 120:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 121:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * WARNING: The clock of the CAN module must be enabled before this function is invoked!
 122:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *          If CAN2 is used, CAN1 must be also enabled!
 123:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 124:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * WARNING: The driver is not thread-safe!
 125:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *          It does not use IRQ or critical sections though, so it is safe to invoke its API functi
 126:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *          IRQ context from the application.
 127:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 128:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               Success
 129:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 130:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 131:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32Init(const CanardSTM32CANTimings* const timings,
 132:Lib/libcanard/drivers/stm32/canard_stm32.h ****                         const CanardSTM32IfaceMode iface_mode);
 133:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 134:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 135:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Pushes one frame into the TX buffer, if there is space.
 136:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Note that proper care is taken to ensure that no inner priority inversion is taking place.
 137:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function does never block.
 138:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 139:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      1               Transmitted successfully
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 21


 140:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               No space in the buffer
 141:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 142:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 143:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32Transmit(const CanardCANFrame* const frame);
 144:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 145:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 146:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Reads one frame from the hardware RX FIFO, unless all FIFO are empty.
 147:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function does never block.
 148:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 149:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      1               Read successfully
 150:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               The buffer is empty
 151:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 152:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 153:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32Receive(CanardCANFrame* const out_frame);
 154:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 155:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 156:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Sets up acceptance filters according to the provided list of ID and masks.
 157:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Note that when the interface is reinitialized, hardware acceptance filters are reset.
 158:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Also note that during filter reconfiguration, some RX frames may be lost.
 159:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 160:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Setting zero filters will result in rejection of all frames.
 161:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * In order to accept all frames, set one filter with ID = Mask = 0, which is also the default conf
 162:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 163:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               Success
 164:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 165:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 166:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32ConfigureAcceptanceFilters(const CanardSTM32AcceptanceFilterConfiguration* const
 167:Lib/libcanard/drivers/stm32/canard_stm32.h ****                                               const uint8_t num_filter_configs);
 168:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 169:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 170:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Returns the running interface statistics.
 171:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 172:Lib/libcanard/drivers/stm32/canard_stm32.h **** CanardSTM32Stats canardSTM32GetStats(void);
 173:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 174:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 175:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Given the rate of the clock supplied to the bxCAN macrocell (typically PCLK1) and the desired bi
 176:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * this function iteratively solves for the best possible timing settings. The CAN bus timing param
 177:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * such as the sample point location, the number of time quantas per bit, etc., are optimized accor
 178:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * recommendations provided in the specifications of UAVCAN, DeviceNet, and CANOpen.
 179:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 180:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Unless noted otherwise, all units are SI units; particularly, frequency is specified in hertz.
 181:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 182:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The implementation is adapted from libuavcan.
 183:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 184:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function is defined in the header in order to encourage the linker to discard it if it is n
 185:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 186:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval 0            Success
 187:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval negative     Solution could not be found for the provided inputs.
 188:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 189:Lib/libcanard/drivers/stm32/canard_stm32.h **** static inline
 190:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32ComputeCANTimings(const uint32_t peripheral_clock_rate,
 191:Lib/libcanard/drivers/stm32/canard_stm32.h ****                                      const uint32_t target_bitrate,
 192:Lib/libcanard/drivers/stm32/canard_stm32.h ****                                      CanardSTM32CANTimings* const out_timings)
 193:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
 194:Lib/libcanard/drivers/stm32/canard_stm32.h ****     if (target_bitrate < 1000)
 195:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 196:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 22


 197:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 198:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 199:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CANARD_ASSERT(out_timings != NULL);  // NOLINT
 200:Lib/libcanard/drivers/stm32/canard_stm32.h ****     memset(out_timings, 0, sizeof(*out_timings));
 395              		.loc 2 200 0
 396 0008 0023     		movs	r3, #0
 397 000a 0293     		str	r3, [sp, #8]
 398 000c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 201:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 202:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 203:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Hardware configuration
 204:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 205:Lib/libcanard/drivers/stm32/canard_stm32.h ****     static const uint8_t MaxBS1 = 16;
 206:Lib/libcanard/drivers/stm32/canard_stm32.h ****     static const uint8_t MaxBS2 = 8;
 207:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 208:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 209:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Ref. "Automatic Baudrate Detection in CANopen Networks", U. Koppe, MicroControl GmbH & Co. K
 210:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *      CAN in Automation, 2003
 211:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 212:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * According to the source, optimal quanta per bit are:
 213:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   Bitrate        Optimal Maximum
 214:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   1000 kbps      8       10
 215:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   500  kbps      16      17
 216:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   250  kbps      16      17
 217:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   125  kbps      16      17
 218:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 219:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const uint8_t max_quanta_per_bit = (uint8_t)((target_bitrate >= 1000000) ? 10 : 17);    // NOLI
 220:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CANARD_ASSERT(max_quanta_per_bit <= (MaxBS1 + MaxBS2));
 221:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 222:Lib/libcanard/drivers/stm32/canard_stm32.h ****     static const uint16_t MaxSamplePointLocationPermill = 900;
 223:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 224:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 225:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Computing (prescaler * BS):
 226:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   BITRATE = 1 / (PRESCALER * (1 / PCLK) * (1 + BS1 + BS2))       -- See the Reference Manual
 227:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   BITRATE = PCLK / (PRESCALER * (1 + BS1 + BS2))                 -- Simplified
 228:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * let:
 229:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   BS = 1 + BS1 + BS2                                             -- Number of time quanta pe
 230:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   PRESCALER_BS = PRESCALER * BS
 231:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * ==>
 232:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   PRESCALER_BS = PCLK / BITRATE
 233:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 234:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const uint32_t prescaler_bs = peripheral_clock_rate / target_bitrate;
 399              		.loc 2 234 0
 400 0010 3E4C     		ldr	r4, .L42
 401 0012 A4FB0034 		umull	r3, r4, r4, r0
 402 0016 A40C     		lsrs	r4, r4, #18
 403              	.LVL36:
 235:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 236:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 237:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Searching for such prescaler value so that the number of quanta per bit is highest.
 238:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 239:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bs1_bs2_sum = (uint8_t)(max_quanta_per_bit - 1);    // NOLINT
 404              		.loc 2 239 0
 405 0018 0923     		movs	r3, #9
 406              	.LVL37:
 407              	.L28:
 240:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 23


 241:Lib/libcanard/drivers/stm32/canard_stm32.h ****     while ((prescaler_bs % (1U + bs1_bs2_sum)) != 0)
 408              		.loc 2 241 0
 409 001a 591C     		adds	r1, r3, #1
 410 001c B4FBF1F2 		udiv	r2, r4, r1
 411 0020 01FB1242 		mls	r2, r1, r2, r4
 412 0024 22B1     		cbz	r2, .L40
 242:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 243:Lib/libcanard/drivers/stm32/canard_stm32.h ****         if (bs1_bs2_sum <= 2)
 413              		.loc 2 243 0
 414 0026 022B     		cmp	r3, #2
 415 0028 4BD9     		bls	.L29
 244:Lib/libcanard/drivers/stm32/canard_stm32.h ****         {
 245:Lib/libcanard/drivers/stm32/canard_stm32.h ****             return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;          // No solution
 246:Lib/libcanard/drivers/stm32/canard_stm32.h ****         }
 247:Lib/libcanard/drivers/stm32/canard_stm32.h ****         bs1_bs2_sum--;
 416              		.loc 2 247 0
 417 002a 013B     		subs	r3, r3, #1
 418              	.LVL38:
 419 002c DBB2     		uxtb	r3, r3
 420              	.LVL39:
 421 002e F4E7     		b	.L28
 422              	.L40:
 248:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 249:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 250:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const uint32_t prescaler = prescaler_bs / (1U + bs1_bs2_sum);
 423              		.loc 2 250 0
 424 0030 B4FBF1F1 		udiv	r1, r4, r1
 425              	.LVL40:
 251:Lib/libcanard/drivers/stm32/canard_stm32.h ****     if ((prescaler < 1U) || (prescaler > 1024U))
 426              		.loc 2 251 0
 427 0034 4A1E     		subs	r2, r1, #1
 428 0036 B2F5806F 		cmp	r2, #1024
 429 003a 42D2     		bcs	.L29
 252:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 253:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;              // No solution
 254:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 255:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 256:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 257:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Now we have a constraint: (BS1 + BS2) == bs1_bs2_sum.
 258:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * We need to find such values so that the sample point is as close as possible to the optimal 
 259:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * which is 87.5%, which is 7/8.
 260:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 261:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   Solve[(1 + bs1)/(1 + bs1 + bs2) == 7/8, bs2]  (* Where 7/8 is 0.875, the recommended sampl
 262:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   {{bs2 -> (1 + bs1)/7}}
 263:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 264:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Hence:
 265:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   bs2 = (1 + bs1) / 7
 266:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   bs1 = (7 * bs1_bs2_sum - 1) / 8
 267:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 268:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Sample point location can be computed as follows:
 269:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   Sample point location = (1 + bs1) / (1 + bs1 + bs2)
 270:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 271:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Since the optimal solution is so close to the maximum, we prepare two solutions, and then pi
 272:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   - With rounding to nearest
 273:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   - With rounding to zero
 274:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 275:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bs1 = (uint8_t)(((7 * bs1_bs2_sum - 1) + 4) / 8);       // Trying rounding to nearest f
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 24


 430              		.loc 2 275 0
 431 003c C3EBC306 		rsb	r6, r3, r3, lsl #3
 432 0040 F21C     		adds	r2, r6, #3
 433 0042 0824     		movs	r4, #8
 434              	.LVL41:
 435 0044 92FBF4F2 		sdiv	r2, r2, r4
 436 0048 D5B2     		uxtb	r5, r2
 437              	.LVL42:
 276:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bs2 = (uint8_t)(bs1_bs2_sum - bs1);  // NOLINT
 438              		.loc 2 276 0
 439 004a 5F1B     		subs	r7, r3, r5
 440 004c FFB2     		uxtb	r7, r7
 441              	.LVL43:
 277:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CANARD_ASSERT(bs1_bs2_sum > bs1);
 442              		.loc 2 277 0
 443 004e AB42     		cmp	r3, r5
 444 0050 1DD9     		bls	.L41
 445              	.LBB18:
 278:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 279:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 280:Lib/libcanard/drivers/stm32/canard_stm32.h ****         const uint16_t sample_point_permill = (uint16_t)(1000U * (1U + bs1) / (1U + bs1 + bs2));  /
 446              		.loc 2 280 0
 447 0052 D2B2     		uxtb	r2, r2
 448 0054 4FF47A74 		mov	r4, #1000
 449 0058 02FB0444 		mla	r4, r2, r4, r4
 450 005c 3A44     		add	r2, r2, r7
 451 005e 0132     		adds	r2, r2, #1
 452 0060 B4FBF2F2 		udiv	r2, r4, r2
 453 0064 92B2     		uxth	r2, r2
 454              	.LVL44:
 281:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 282:Lib/libcanard/drivers/stm32/canard_stm32.h ****         if (sample_point_permill > MaxSamplePointLocationPermill)   // Strictly more!
 455              		.loc 2 282 0
 456 0066 B2F5617F 		cmp	r2, #900
 457 006a 06D9     		bls	.L32
 283:Lib/libcanard/drivers/stm32/canard_stm32.h ****         {
 284:Lib/libcanard/drivers/stm32/canard_stm32.h ****             bs1 = (uint8_t)((7 * bs1_bs2_sum - 1) / 8);             // Nope, too far; now rounding 
 458              		.loc 2 284 0
 459 006c 751E     		subs	r5, r6, #1
 460              	.LVL45:
 461 006e 0826     		movs	r6, #8
 462              	.LVL46:
 463 0070 95FBF6F5 		sdiv	r5, r5, r6
 464              	.LVL47:
 465 0074 EDB2     		uxtb	r5, r5
 466              	.LVL48:
 285:Lib/libcanard/drivers/stm32/canard_stm32.h ****             bs2 = (uint8_t)(bs1_bs2_sum - bs1);
 467              		.loc 2 285 0
 468 0076 5B1B     		subs	r3, r3, r5
 469              	.LVL49:
 470 0078 DFB2     		uxtb	r7, r3
 471              	.LVL50:
 472              	.L32:
 473              	.LBE18:
 286:Lib/libcanard/drivers/stm32/canard_stm32.h ****         }
 287:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 288:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 25


 289:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const bool valid = (bs1 >= 1) && (bs1 <= MaxBS1) && (bs2 >= 1) && (bs2 <= MaxBS2);
 474              		.loc 2 289 0
 475 007a 6B1E     		subs	r3, r5, #1
 476 007c DBB2     		uxtb	r3, r3
 477 007e 0F2B     		cmp	r3, #15
 478 0080 0CD8     		bhi	.L36
 479 0082 002F     		cmp	r7, #0
 480 0084 37D0     		beq	.L37
 481 0086 082F     		cmp	r7, #8
 482 0088 37D9     		bls	.L38
 483 008a 0022     		movs	r2, #0
 484              	.LVL51:
 485 008c 07E0     		b	.L33
 486              	.LVL52:
 487              	.L41:
 277:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 488              		.loc 2 277 0
 489 008e 204B     		ldr	r3, .L42+4
 490              	.LVL53:
 491 0090 204A     		ldr	r2, .L42+8
 492 0092 40F21511 		movw	r1, #277
 493              	.LVL54:
 494 0096 2048     		ldr	r0, .L42+12
 495              	.LVL55:
 496 0098 FFF7FEFF 		bl	__assert_func
 497              	.LVL56:
 498              	.L36:
 499              		.loc 2 289 0
 500 009c 0022     		movs	r2, #0
 501              	.LVL57:
 502              	.L33:
 290:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 291:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 292:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Final validation
 293:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Helpful Python:
 294:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * def sample_point_from_btr(x):
 295:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *     assert 0b0011110010000000111111000000000 & x == 0
 296:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *     ts2,ts1,brp = (x>>20)&7, (x>>16)&15, x&511
 297:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *     return (1+ts1+1)/(1+ts1+1+ts2+1)
 298:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 299:Lib/libcanard/drivers/stm32/canard_stm32.h ****     if ((target_bitrate != (peripheral_clock_rate / (prescaler * (1U + bs1 + bs2)))) ||
 503              		.loc 2 299 0
 504 009e EB19     		adds	r3, r5, r7
 505 00a0 03FB0113 		mla	r3, r3, r1, r1
 506 00a4 B0FBF3F0 		udiv	r0, r0, r3
 507              	.LVL58:
 508 00a8 1C4B     		ldr	r3, .L42+16
 509 00aa 9842     		cmp	r0, r3
 510 00ac 27D1     		bne	.L34
 511 00ae 32B3     		cbz	r2, .L34
 300:Lib/libcanard/drivers/stm32/canard_stm32.h ****         !valid)
 301:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 302:Lib/libcanard/drivers/stm32/canard_stm32.h ****         // This actually means that the algorithm has a logic error, hence assert(0).
 303:Lib/libcanard/drivers/stm32/canard_stm32.h ****         CANARD_ASSERT(0);  // NOLINT
 304:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
 305:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 306:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 26


 307:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->bit_rate_prescaler = (uint16_t) prescaler;
 512              		.loc 2 307 0
 513 00b0 ADF80810 		strh	r1, [sp, #8]	@ movhi
 308:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->max_resynchronization_jump_width = 1;      // One is recommended by UAVCAN, CANOpe
 514              		.loc 2 308 0
 515 00b4 0123     		movs	r3, #1
 516 00b6 8DF80C30 		strb	r3, [sp, #12]
 309:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->bit_segment_1 = bs1;
 517              		.loc 2 309 0
 518 00ba 8DF80A50 		strb	r5, [sp, #10]
 310:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->bit_segment_2 = bs2;
 519              		.loc 2 310 0
 520 00be 8DF80B70 		strb	r7, [sp, #11]
 521              	.LVL59:
 522              	.L29:
 523              	.LBE17:
 524              	.LBE16:
 231:Src/main.c    ****     result = canardSTM32Init(&timings, CanardSTM32IfaceModeNormal);
 525              		.loc 1 231 0
 526 00c2 0021     		movs	r1, #0
 527 00c4 02A8     		add	r0, sp, #8
 528 00c6 FFF7FEFF 		bl	canardSTM32Init
 529              	.LVL60:
 232:Src/main.c    ****     if (result)
 530              		.loc 1 232 0
 531 00ca 0021     		movs	r1, #0
 532 00cc 02A8     		add	r0, sp, #8
 533 00ce FFF7FEFF 		bl	canardSTM32Init
 534              	.LVL61:
 247:Src/main.c    ****                g_canard_memory_pool,              // Raw memory chunk used for dynamic allocation
 535              		.loc 1 247 0
 536 00d2 134C     		ldr	r4, .L42+20
 537 00d4 0023     		movs	r3, #0
 538 00d6 0193     		str	r3, [sp, #4]
 539 00d8 124B     		ldr	r3, .L42+24
 540 00da 0093     		str	r3, [sp]
 541 00dc 124B     		ldr	r3, .L42+28
 542 00de 4FF48062 		mov	r2, #1024
 543 00e2 1249     		ldr	r1, .L42+32
 544 00e4 2046     		mov	r0, r4
 545 00e6 FFF7FEFF 		bl	canardInit
 546              	.LVL62:
 254:Src/main.c    **** }
 547              		.loc 1 254 0
 548 00ea 6F21     		movs	r1, #111
 549 00ec 2046     		mov	r0, r4
 550 00ee FFF7FEFF 		bl	canardSetLocalNodeID
 551              	.LVL63:
 255:Src/main.c    **** 
 552              		.loc 1 255 0
 553 00f2 05B0     		add	sp, sp, #20
 554              	.LCFI11:
 555              		.cfi_remember_state
 556              		.cfi_def_cfa_offset 20
 557              		@ sp needed
 558 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 559              	.LVL64:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 27


 560              	.L37:
 561              	.LCFI12:
 562              		.cfi_restore_state
 563              	.LBB20:
 564              	.LBB19:
 289:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 565              		.loc 2 289 0
 566 00f6 0022     		movs	r2, #0
 567              	.LVL65:
 568 00f8 D1E7     		b	.L33
 569              	.LVL66:
 570              	.L38:
 571 00fa 0122     		movs	r2, #1
 572              	.LVL67:
 573 00fc CFE7     		b	.L33
 574              	.LVL68:
 575              	.L34:
 303:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
 576              		.loc 2 303 0
 577 00fe 0C4B     		ldr	r3, .L42+36
 578 0100 044A     		ldr	r2, .L42+8
 579              	.LVL69:
 580 0102 40F22F11 		movw	r1, #303
 581              	.LVL70:
 582 0106 0448     		ldr	r0, .L42+12
 583 0108 FFF7FEFF 		bl	__assert_func
 584              	.LVL71:
 585              	.L43:
 586              		.align	2
 587              	.L42:
 588 010c 83DE1B43 		.word	1125899907
 589 0110 00000000 		.word	.LC1
 590 0114 00000000 		.word	.LANCHOR1
 591 0118 14000000 		.word	.LC2
 592 011c 40420F00 		.word	1000000
 593 0120 00000000 		.word	.LANCHOR0
 594 0124 00000000 		.word	shouldAcceptTransfer
 595 0128 00000000 		.word	onTransferReceived
 596 012c 00000000 		.word	.LANCHOR2
 597 0130 40000000 		.word	.LC3
 598              	.LBE19:
 599              	.LBE20:
 600              		.cfi_endproc
 601              	.LFE129:
 603              		.section	.text.sendCanard,"ax",%progbits
 604              		.align	1
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu fpv4-sp-d16
 610              	sendCanard:
 611              	.LFB133:
 331:Src/main.c    ****     const CanardCANFrame* txf = canardPeekTxQueue(&g_canard);
 612              		.loc 1 331 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 28


 616 0000 08B5     		push	{r3, lr}
 617              	.LCFI13:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 3, -8
 620              		.cfi_offset 14, -4
 332:Src/main.c    **** while(txf)
 621              		.loc 1 332 0
 622 0002 0848     		ldr	r0, .L50
 623 0004 FFF7FEFF 		bl	canardPeekTxQueue
 624              	.LVL72:
 333:Src/main.c    ****     {
 625              		.loc 1 333 0
 626 0008 02E0     		b	.L45
 627              	.LVL73:
 628              	.L46:
 629              	.LBB21:
 365:Src/main.c    ****     }
 630              		.loc 1 365 0
 631 000a 0648     		ldr	r0, .L50
 632 000c FFF7FEFF 		bl	canardPeekTxQueue
 633              	.LVL74:
 634              	.L45:
 635              	.LBE21:
 333:Src/main.c    ****     {
 636              		.loc 1 333 0
 637 0010 38B1     		cbz	r0, .L49
 638              	.LBB22:
 335:Src/main.c    **** 
 639              		.loc 1 335 0
 640 0012 FFF7FEFF 		bl	canardSTM32Transmit
 641              	.LVL75:
 361:Src/main.c    ****         {
 642              		.loc 1 361 0
 643 0016 0028     		cmp	r0, #0
 644 0018 F7DD     		ble	.L46
 363:Src/main.c    ****         }
 645              		.loc 1 363 0
 646 001a 0248     		ldr	r0, .L50
 647              	.LVL76:
 648 001c FFF7FEFF 		bl	canardPopTxQueue
 649              	.LVL77:
 650 0020 F3E7     		b	.L46
 651              	.LVL78:
 652              	.L49:
 653              	.LBE22:
 367:Src/main.c    **** 
 654              		.loc 1 367 0
 655 0022 08BD     		pop	{r3, pc}
 656              	.L51:
 657              		.align	2
 658              	.L50:
 659 0024 00000000 		.word	.LANCHOR0
 660              		.cfi_endproc
 661              	.LFE133:
 663              		.section	.text.receiveCanard,"ax",%progbits
 664              		.align	1
 665              		.syntax unified
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 29


 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv4-sp-d16
 670              	receiveCanard:
 671              	.LFB134:
 370:Src/main.c    ****     CanardCANFrame rx_frame;
 672              		.loc 1 370 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676 0000 00B5     		push	{lr}
 677              	.LCFI14:
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 14, -4
 680 0002 85B0     		sub	sp, sp, #20
 681              	.LCFI15:
 682              		.cfi_def_cfa_offset 24
 372:Src/main.c    ****     if(res)
 683              		.loc 1 372 0
 684 0004 6846     		mov	r0, sp
 685 0006 FFF7FEFF 		bl	canardSTM32Receive
 686              	.LVL79:
 373:Src/main.c    **** {
 687              		.loc 1 373 0
 688 000a 10B9     		cbnz	r0, .L55
 689              	.LVL80:
 690              	.L52:
 377:Src/main.c    **** 
 691              		.loc 1 377 0
 692 000c 05B0     		add	sp, sp, #20
 693              	.LCFI16:
 694              		.cfi_remember_state
 695              		.cfi_def_cfa_offset 4
 696              		@ sp needed
 697 000e 5DF804FB 		ldr	pc, [sp], #4
 698              	.LVL81:
 699              	.L55:
 700              	.LCFI17:
 701              		.cfi_restore_state
 375:Src/main.c    ****     }
 702              		.loc 1 375 0
 703 0012 FFF7FEFF 		bl	HAL_GetTick
 704              	.LVL82:
 705 0016 4FF47A72 		mov	r2, #1000
 706 001a 02FB00F2 		mul	r2, r2, r0
 707 001e 0023     		movs	r3, #0
 708 0020 6946     		mov	r1, sp
 709 0022 0248     		ldr	r0, .L56
 710 0024 FFF7FEFF 		bl	canardHandleRxFrame
 711              	.LVL83:
 377:Src/main.c    **** 
 712              		.loc 1 377 0
 713 0028 F0E7     		b	.L52
 714              	.L57:
 715 002a 00BF     		.align	2
 716              	.L56:
 717 002c 00000000 		.word	.LANCHOR0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 30


 718              		.cfi_endproc
 719              	.LFE134:
 721              		.section	.text.spinCanard,"ax",%progbits
 722              		.align	1
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu fpv4-sp-d16
 728              	spinCanard:
 729              	.LFB130:
 260:Src/main.c    **** 
 730              		.loc 1 260 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 8
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734 0000 10B5     		push	{r4, lr}
 735              	.LCFI18:
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 4, -8
 738              		.cfi_offset 14, -4
 739 0002 88B0     		sub	sp, sp, #32
 740              	.LCFI19:
 741              		.cfi_def_cfa_offset 40
 264:Src/main.c    **** 	    return; }  // rate limiting
 742              		.loc 1 264 0
 743 0004 FFF7FEFF 		bl	HAL_GetTick
 744              	.LVL84:
 745 0008 174B     		ldr	r3, .L63+8
 746 000a 1B68     		ldr	r3, [r3]
 747 000c 03F57A73 		add	r3, r3, #1000
 748 0010 9842     		cmp	r0, r3
 749 0012 01D2     		bcs	.L62
 750              	.L58:
 304:Src/main.c    **** 
 751              		.loc 1 304 0
 752 0014 08B0     		add	sp, sp, #32
 753              	.LCFI20:
 754              		.cfi_remember_state
 755              		.cfi_def_cfa_offset 8
 756              		@ sp needed
 757 0016 10BD     		pop	{r4, pc}
 758              	.L62:
 759              	.LCFI21:
 760              		.cfi_restore_state
 266:Src/main.c    ****          HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 761              		.loc 1 266 0
 762 0018 FFF7FEFF 		bl	HAL_GetTick
 763              	.LVL85:
 764 001c 124B     		ldr	r3, .L63+8
 765 001e 1860     		str	r0, [r3]
 267:Src/main.c    **** 
 766              		.loc 1 267 0
 767 0020 0121     		movs	r1, #1
 768 0022 4FF09040 		mov	r0, #1207959552
 769 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 770              	.LVL86:
 274:Src/main.c    **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 31


 771              		.loc 1 274 0
 772 002a 0121     		movs	r1, #1
 773 002c 4FF09040 		mov	r0, #1207959552
 774 0030 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 775              	.LVL87:
 276:Src/main.c    **** 
 776              		.loc 1 276 0
 777 0034 06AC     		add	r4, sp, #24
 778 0036 2046     		mov	r0, r4
 779 0038 FFF7FEFF 		bl	makeNodeStatusMessage
 780              	.LVL88:
 278:Src/main.c    ****                     UAVCAN_NODE_STATUS_DATA_TYPE_SIGNATURE,
 781              		.loc 1 278 0
 782 003c 0723     		movs	r3, #7
 783 003e 0493     		str	r3, [sp, #16]
 784 0040 0394     		str	r4, [sp, #12]
 785 0042 1823     		movs	r3, #24
 786 0044 0293     		str	r3, [sp, #8]
 787 0046 094B     		ldr	r3, .L63+12
 788 0048 0193     		str	r3, [sp, #4]
 789 004a 40F25513 		movw	r3, #341
 790 004e 0093     		str	r3, [sp]
 791 0050 03A3     		adr	r3, .L63
 792 0052 D3E90023 		ldrd	r2, [r3]
 793 0056 0648     		ldr	r0, .L63+16
 794 0058 FFF7FEFF 		bl	canardBroadcast
 795              	.LVL89:
 796 005c DAE7     		b	.L58
 797              	.L64:
 798 005e 00BF     		.align	3
 799              	.L63:
 800 0060 F1C6A7C1 		.word	-1045969167
 801 0064 D068080F 		.word	252209360
 802 0068 00000000 		.word	.LANCHOR3
 803 006c 00000000 		.word	.LANCHOR4
 804 0070 00000000 		.word	.LANCHOR0
 805              		.cfi_endproc
 806              	.LFE130:
 808              		.section	.text.encodeParamCanard,"ax",%progbits
 809              		.align	1
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv4-sp-d16
 815              	encodeParamCanard:
 816              	.LFB143:
 600:Src/main.c    **** 
 601:Src/main.c    **** 
 602:Src/main.c    **** 
 603:Src/main.c    **** 
 604:Src/main.c    **** //helpers
 605:Src/main.c    **** static inline param_t* getParamByIndex(uint16_t index)
 606:Src/main.c    **** {
 607:Src/main.c    ****     if (index >= ARRAY_SIZE(parameters))
 608:Src/main.c    ****     {
 609:Src/main.c    ****         return NULL;
 610:Src/main.c    ****     }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 32


 611:Src/main.c    ****     return &parameters[index];
 612:Src/main.c    **** }
 613:Src/main.c    **** 
 614:Src/main.c    **** 
 615:Src/main.c    **** static inline param_t* getParamByName(uint8_t * name)
 616:Src/main.c    **** {
 617:Src/main.c    ****     for (uint16_t i = 0; i < ARRAY_SIZE(parameters); i++)
 618:Src/main.c    ****     {
 619:Src/main.c    ****         if (strncmp(name, parameters[i].name, strlen(parameters[i].name)) == 0)
 620:Src/main.c    ****         {
 621:Src/main.c    ****               return &parameters[i];
 622:Src/main.c    ****         }
 623:Src/main.c    ****     }
 624:Src/main.c    ****     return NULL;
 625:Src/main.c    **** }
 626:Src/main.c    **** 
 627:Src/main.c    **** static uint16_t encodeParamCanard(param_t * p, uint8_t * buffer)
 628:Src/main.c    **** {
 817              		.loc 1 628 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 8
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL90:
 822 0000 70B5     		push	{r4, r5, r6, lr}
 823              	.LCFI22:
 824              		.cfi_def_cfa_offset 16
 825              		.cfi_offset 4, -16
 826              		.cfi_offset 5, -12
 827              		.cfi_offset 6, -8
 828              		.cfi_offset 14, -4
 829 0002 82B0     		sub	sp, sp, #8
 830              	.LCFI23:
 831              		.cfi_def_cfa_offset 24
 832 0004 0C46     		mov	r4, r1
 629:Src/main.c    ****     uint8_t n     = 0;
 833              		.loc 1 629 0
 834 0006 0023     		movs	r3, #0
 835 0008 8DF80730 		strb	r3, [sp, #7]
 836              	.LVL91:
 630:Src/main.c    ****     int offset    = 0;
 631:Src/main.c    ****     uint8_t tag   = 1;
 837              		.loc 1 631 0
 838 000c 0123     		movs	r3, #1
 839 000e 8DF80630 		strb	r3, [sp, #6]
 632:Src/main.c    **** 
 633:Src/main.c    ****     if (p == NULL)
 840              		.loc 1 633 0
 841 0012 0028     		cmp	r0, #0
 842 0014 65D0     		beq	.L69
 843 0016 0546     		mov	r5, r0
 634:Src/main.c    ****     {
 635:Src/main.c    ****         tag = 0;
 636:Src/main.c    ****         canardEncodeScalar(buffer, offset, 5, &n);
 637:Src/main.c    ****         offset += 5;
 638:Src/main.c    ****         canardEncodeScalar(buffer, offset,3, &tag);
 639:Src/main.c    ****         offset += 3;
 640:Src/main.c    **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 33


 641:Src/main.c    ****         canardEncodeScalar(buffer, offset, 6, &n);
 642:Src/main.c    ****         offset += 6;
 643:Src/main.c    ****         canardEncodeScalar(buffer, offset,2, &tag);
 644:Src/main.c    ****         offset += 2;
 645:Src/main.c    **** 
 646:Src/main.c    ****         canardEncodeScalar(buffer, offset, 6, &n);
 647:Src/main.c    ****         offset += 6;
 648:Src/main.c    ****         canardEncodeScalar(buffer, offset, 2, &tag);
 649:Src/main.c    ****         offset += 2;
 650:Src/main.c    ****         buffer[offset / 8] = 0;
 651:Src/main.c    ****         return ( offset / 8 + 1 );
 652:Src/main.c    ****     }
 653:Src/main.c    **** 
 654:Src/main.c    ****     canardEncodeScalar(buffer, offset, 5,&n);
 844              		.loc 1 654 0
 845 0018 0DF10703 		add	r3, sp, #7
 846 001c 0522     		movs	r2, #5
 847 001e 0021     		movs	r1, #0
 848              	.LVL92:
 849 0020 2046     		mov	r0, r4
 850              	.LVL93:
 851 0022 FFF7FEFF 		bl	canardEncodeScalar
 852              	.LVL94:
 655:Src/main.c    ****     offset += 5;
 656:Src/main.c    ****     canardEncodeScalar(buffer, offset, 3, &tag);
 853              		.loc 1 656 0
 854 0026 0DF10603 		add	r3, sp, #6
 855 002a 0322     		movs	r2, #3
 856 002c 0521     		movs	r1, #5
 857 002e 2046     		mov	r0, r4
 858 0030 FFF7FEFF 		bl	canardEncodeScalar
 859              	.LVL95:
 657:Src/main.c    ****     offset += 3;
 658:Src/main.c    ****     canardEncodeScalar(buffer, offset, 64, &p->val);
 860              		.loc 1 658 0
 861 0034 05F10803 		add	r3, r5, #8
 862 0038 4022     		movs	r2, #64
 863 003a 0821     		movs	r1, #8
 864 003c 2046     		mov	r0, r4
 865 003e FFF7FEFF 		bl	canardEncodeScalar
 866              	.LVL96:
 659:Src/main.c    ****     offset += 64;
 660:Src/main.c    **** 
 661:Src/main.c    ****     canardEncodeScalar(buffer, offset, 5, &n);
 867              		.loc 1 661 0
 868 0042 0DF10703 		add	r3, sp, #7
 869 0046 0522     		movs	r2, #5
 870 0048 4821     		movs	r1, #72
 871 004a 2046     		mov	r0, r4
 872 004c FFF7FEFF 		bl	canardEncodeScalar
 873              	.LVL97:
 662:Src/main.c    ****     offset += 5;
 663:Src/main.c    ****     canardEncodeScalar(buffer, offset, 3, &tag);
 874              		.loc 1 663 0
 875 0050 0DF10603 		add	r3, sp, #6
 876 0054 0322     		movs	r2, #3
 877 0056 4D21     		movs	r1, #77
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 34


 878 0058 2046     		mov	r0, r4
 879 005a FFF7FEFF 		bl	canardEncodeScalar
 880              	.LVL98:
 664:Src/main.c    ****     offset += 3;
 665:Src/main.c    ****     canardEncodeScalar(buffer, offset, 64, &p->defval);
 881              		.loc 1 665 0
 882 005e 05F12003 		add	r3, r5, #32
 883 0062 4022     		movs	r2, #64
 884 0064 5021     		movs	r1, #80
 885 0066 2046     		mov	r0, r4
 886 0068 FFF7FEFF 		bl	canardEncodeScalar
 887              	.LVL99:
 666:Src/main.c    ****     offset += 64;
 667:Src/main.c    **** 
 668:Src/main.c    ****     canardEncodeScalar(buffer, offset, 6, &n);
 888              		.loc 1 668 0
 889 006c 0DF10703 		add	r3, sp, #7
 890 0070 0622     		movs	r2, #6
 891 0072 9021     		movs	r1, #144
 892 0074 2046     		mov	r0, r4
 893 0076 FFF7FEFF 		bl	canardEncodeScalar
 894              	.LVL100:
 669:Src/main.c    ****     offset += 6;
 670:Src/main.c    ****     canardEncodeScalar(buffer, offset, 2, &tag);
 895              		.loc 1 670 0
 896 007a 0DF10603 		add	r3, sp, #6
 897 007e 0222     		movs	r2, #2
 898 0080 9621     		movs	r1, #150
 899 0082 2046     		mov	r0, r4
 900 0084 FFF7FEFF 		bl	canardEncodeScalar
 901              	.LVL101:
 671:Src/main.c    ****     offset += 2;
 672:Src/main.c    ****     canardEncodeScalar(buffer, offset, 64, &p->max);
 902              		.loc 1 672 0
 903 0088 05F11803 		add	r3, r5, #24
 904 008c 4022     		movs	r2, #64
 905 008e 9821     		movs	r1, #152
 906 0090 2046     		mov	r0, r4
 907 0092 FFF7FEFF 		bl	canardEncodeScalar
 908              	.LVL102:
 673:Src/main.c    ****     offset += 64;
 674:Src/main.c    **** 
 675:Src/main.c    ****     canardEncodeScalar(buffer, offset, 6, &n);
 909              		.loc 1 675 0
 910 0096 0DF10703 		add	r3, sp, #7
 911 009a 0622     		movs	r2, #6
 912 009c D821     		movs	r1, #216
 913 009e 2046     		mov	r0, r4
 914 00a0 FFF7FEFF 		bl	canardEncodeScalar
 915              	.LVL103:
 676:Src/main.c    ****     offset += 6;
 677:Src/main.c    ****     canardEncodeScalar(buffer, offset,2,&tag);
 916              		.loc 1 677 0
 917 00a4 0DF10603 		add	r3, sp, #6
 918 00a8 0222     		movs	r2, #2
 919 00aa DE21     		movs	r1, #222
 920 00ac 2046     		mov	r0, r4
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 35


 921 00ae FFF7FEFF 		bl	canardEncodeScalar
 922              	.LVL104:
 678:Src/main.c    ****     offset += 2;
 679:Src/main.c    ****     canardEncodeScalar(buffer, offset,64,&p->min);
 923              		.loc 1 679 0
 924 00b2 05F11003 		add	r3, r5, #16
 925 00b6 4022     		movs	r2, #64
 926 00b8 E021     		movs	r1, #224
 927 00ba 2046     		mov	r0, r4
 928 00bc FFF7FEFF 		bl	canardEncodeScalar
 929              	.LVL105:
 680:Src/main.c    ****     offset += 64;
 681:Src/main.c    **** 
 682:Src/main.c    ****     memcpy(&buffer[offset / 8], p->name, strlen((char const*)p->name));
 930              		.loc 1 682 0
 931 00c0 2434     		adds	r4, r4, #36
 932              	.LVL106:
 933 00c2 2E68     		ldr	r6, [r5]
 934 00c4 3046     		mov	r0, r6
 935 00c6 FFF7FEFF 		bl	strlen
 936              	.LVL107:
 937 00ca 0246     		mov	r2, r0
 938 00cc 3146     		mov	r1, r6
 939 00ce 2046     		mov	r0, r4
 940 00d0 FFF7FEFF 		bl	memcpy
 941              	.LVL108:
 683:Src/main.c    ****     /* See important note below */
 684:Src/main.c    ****     return  (offset/8 + strlen((char const*)p->name));
 942              		.loc 1 684 0
 943 00d4 2868     		ldr	r0, [r5]
 944 00d6 FFF7FEFF 		bl	strlen
 945              	.LVL109:
 946 00da 2430     		adds	r0, r0, #36
 947 00dc 80B2     		uxth	r0, r0
 948              	.LVL110:
 949              	.L67:
 685:Src/main.c    **** 
 686:Src/main.c    **** }
 950              		.loc 1 686 0
 951 00de 02B0     		add	sp, sp, #8
 952              	.LCFI24:
 953              		.cfi_remember_state
 954              		.cfi_def_cfa_offset 16
 955              		@ sp needed
 956 00e0 70BD     		pop	{r4, r5, r6, pc}
 957              	.LVL111:
 958              	.L69:
 959              	.LCFI25:
 960              		.cfi_restore_state
 635:Src/main.c    ****         canardEncodeScalar(buffer, offset, 5, &n);
 961              		.loc 1 635 0
 962 00e2 0025     		movs	r5, #0
 963 00e4 8DF80650 		strb	r5, [sp, #6]
 636:Src/main.c    ****         offset += 5;
 964              		.loc 1 636 0
 965 00e8 0DF10703 		add	r3, sp, #7
 966 00ec 0522     		movs	r2, #5
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 36


 967 00ee 2946     		mov	r1, r5
 968              	.LVL112:
 969 00f0 2046     		mov	r0, r4
 970              	.LVL113:
 971 00f2 FFF7FEFF 		bl	canardEncodeScalar
 972              	.LVL114:
 638:Src/main.c    ****         offset += 3;
 973              		.loc 1 638 0
 974 00f6 0DF10603 		add	r3, sp, #6
 975 00fa 0322     		movs	r2, #3
 976 00fc 0521     		movs	r1, #5
 977 00fe 2046     		mov	r0, r4
 978 0100 FFF7FEFF 		bl	canardEncodeScalar
 979              	.LVL115:
 641:Src/main.c    ****         offset += 6;
 980              		.loc 1 641 0
 981 0104 0DF10703 		add	r3, sp, #7
 982 0108 0622     		movs	r2, #6
 983 010a 0821     		movs	r1, #8
 984 010c 2046     		mov	r0, r4
 985 010e FFF7FEFF 		bl	canardEncodeScalar
 986              	.LVL116:
 643:Src/main.c    ****         offset += 2;
 987              		.loc 1 643 0
 988 0112 0DF10603 		add	r3, sp, #6
 989 0116 0222     		movs	r2, #2
 990 0118 0E21     		movs	r1, #14
 991 011a 2046     		mov	r0, r4
 992 011c FFF7FEFF 		bl	canardEncodeScalar
 993              	.LVL117:
 646:Src/main.c    ****         offset += 6;
 994              		.loc 1 646 0
 995 0120 0DF10703 		add	r3, sp, #7
 996 0124 0622     		movs	r2, #6
 997 0126 1021     		movs	r1, #16
 998 0128 2046     		mov	r0, r4
 999 012a FFF7FEFF 		bl	canardEncodeScalar
 1000              	.LVL118:
 648:Src/main.c    ****         offset += 2;
 1001              		.loc 1 648 0
 1002 012e 0DF10603 		add	r3, sp, #6
 1003 0132 0222     		movs	r2, #2
 1004 0134 1621     		movs	r1, #22
 1005 0136 2046     		mov	r0, r4
 1006 0138 FFF7FEFF 		bl	canardEncodeScalar
 1007              	.LVL119:
 650:Src/main.c    ****         return ( offset / 8 + 1 );
 1008              		.loc 1 650 0
 1009 013c E570     		strb	r5, [r4, #3]
 651:Src/main.c    ****     }
 1010              		.loc 1 651 0
 1011 013e 0420     		movs	r0, #4
 1012 0140 CDE7     		b	.L67
 1013              		.cfi_endproc
 1014              	.LFE143:
 1016              		.section	.text.SystemClock_Config,"ax",%progbits
 1017              		.align	1
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 37


 1018              		.global	SystemClock_Config
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.fpu fpv4-sp-d16
 1024              	SystemClock_Config:
 1025              	.LFB135:
 392:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1026              		.loc 1 392 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 120
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030 0000 30B5     		push	{r4, r5, lr}
 1031              	.LCFI26:
 1032              		.cfi_def_cfa_offset 12
 1033              		.cfi_offset 4, -12
 1034              		.cfi_offset 5, -8
 1035              		.cfi_offset 14, -4
 1036 0002 9FB0     		sub	sp, sp, #124
 1037              	.LCFI27:
 1038              		.cfi_def_cfa_offset 136
 393:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1039              		.loc 1 393 0
 1040 0004 0024     		movs	r4, #0
 1041 0006 1794     		str	r4, [sp, #92]
 1042 0008 1994     		str	r4, [sp, #100]
 1043 000a 1A94     		str	r4, [sp, #104]
 394:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1044              		.loc 1 394 0
 1045 000c 0F94     		str	r4, [sp, #60]
 1046 000e 1094     		str	r4, [sp, #64]
 1047 0010 1194     		str	r4, [sp, #68]
 1048 0012 1294     		str	r4, [sp, #72]
 1049 0014 1394     		str	r4, [sp, #76]
 395:Src/main.c    **** 
 1050              		.loc 1 395 0
 1051 0016 3C22     		movs	r2, #60
 1052 0018 2146     		mov	r1, r4
 1053 001a 6846     		mov	r0, sp
 1054 001c FFF7FEFF 		bl	memset
 1055              	.LVL120:
 399:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1056              		.loc 1 399 0
 1057 0020 0125     		movs	r5, #1
 1058 0022 1495     		str	r5, [sp, #80]
 400:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 1059              		.loc 1 400 0
 1060 0024 4FF48033 		mov	r3, #65536
 1061 0028 1593     		str	r3, [sp, #84]
 401:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1062              		.loc 1 401 0
 1063 002a 1695     		str	r5, [sp, #88]
 402:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1064              		.loc 1 402 0
 1065 002c 1895     		str	r5, [sp, #96]
 403:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1066              		.loc 1 403 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 38


 1067 002e 0222     		movs	r2, #2
 1068 0030 1B92     		str	r2, [sp, #108]
 404:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1069              		.loc 1 404 0
 1070 0032 1C93     		str	r3, [sp, #112]
 405:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1071              		.loc 1 405 0
 1072 0034 4FF4E013 		mov	r3, #1835008
 1073 0038 1D93     		str	r3, [sp, #116]
 406:Src/main.c    ****   {
 1074              		.loc 1 406 0
 1075 003a 14A8     		add	r0, sp, #80
 1076 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1077              	.LVL121:
 412:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1078              		.loc 1 412 0
 1079 0040 0F23     		movs	r3, #15
 1080 0042 0F93     		str	r3, [sp, #60]
 414:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1081              		.loc 1 414 0
 1082 0044 1095     		str	r5, [sp, #64]
 415:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1083              		.loc 1 415 0
 1084 0046 1194     		str	r4, [sp, #68]
 416:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1085              		.loc 1 416 0
 1086 0048 4FF48063 		mov	r3, #1024
 1087 004c 1293     		str	r3, [sp, #72]
 417:Src/main.c    **** 
 1088              		.loc 1 417 0
 1089 004e 1394     		str	r4, [sp, #76]
 419:Src/main.c    ****   {
 1090              		.loc 1 419 0
 1091 0050 2146     		mov	r1, r4
 1092 0052 0FA8     		add	r0, sp, #60
 1093 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1094              	.LVL122:
 423:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 1095              		.loc 1 423 0
 1096 0058 8423     		movs	r3, #132
 1097 005a 0093     		str	r3, [sp]
 424:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 1098              		.loc 1 424 0
 1099 005c 0494     		str	r4, [sp, #16]
 425:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1100              		.loc 1 425 0
 1101 005e 4FF48073 		mov	r3, #256
 1102 0062 0993     		str	r3, [sp, #36]
 426:Src/main.c    ****   {
 1103              		.loc 1 426 0
 1104 0064 6846     		mov	r0, sp
 1105 0066 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1106              	.LVL123:
 430:Src/main.c    **** 
 1107              		.loc 1 430 0
 1108 006a 1FB0     		add	sp, sp, #124
 1109              	.LCFI28:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 39


 1110              		.cfi_def_cfa_offset 12
 1111              		@ sp needed
 1112 006c 30BD     		pop	{r4, r5, pc}
 1113              		.cfi_endproc
 1114              	.LFE135:
 1116              		.section	.text.setDriver,"ax",%progbits
 1117              		.align	1
 1118              		.global	setDriver
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1122              		.fpu fpv4-sp-d16
 1124              	setDriver:
 1125              	.LFB136:
 433:Src/main.c    ****       if(driverState & (1<<driverBit)){
 1126              		.loc 1 433 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL124:
 1131 0000 08B5     		push	{r3, lr}
 1132              	.LCFI29:
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 3, -8
 1135              		.cfi_offset 14, -4
 434:Src/main.c    ****          HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_SET);
 1136              		.loc 1 434 0
 1137 0002 1341     		asrs	r3, r3, r2
 1138              	.LVL125:
 1139 0004 13F0010F 		tst	r3, #1
 1140 0008 04D1     		bne	.L76
 437:Src/main.c    ****       }
 1141              		.loc 1 437 0
 1142 000a 0022     		movs	r2, #0
 1143              	.LVL126:
 1144 000c 89B2     		uxth	r1, r1
 1145              	.LVL127:
 1146 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1147              	.LVL128:
 1148              	.L72:
 439:Src/main.c    **** 
 1149              		.loc 1 439 0
 1150 0012 08BD     		pop	{r3, pc}
 1151              	.LVL129:
 1152              	.L76:
 435:Src/main.c    ****       }else{
 1153              		.loc 1 435 0
 1154 0014 0122     		movs	r2, #1
 1155              	.LVL130:
 1156 0016 89B2     		uxth	r1, r1
 1157              	.LVL131:
 1158 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1159              	.LVL132:
 1160 001c F9E7     		b	.L72
 1161              		.cfi_endproc
 1162              	.LFE136:
 1164              		.section	.text.main,"ax",%progbits
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 40


 1165              		.align	1
 1166              		.global	main
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu fpv4-sp-d16
 1172              	main:
 1173              	.LFB137:
 444:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 1174              		.loc 1 444 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178 0000 70B5     		push	{r4, r5, r6, lr}
 1179              	.LCFI30:
 1180              		.cfi_def_cfa_offset 16
 1181              		.cfi_offset 4, -16
 1182              		.cfi_offset 5, -12
 1183              		.cfi_offset 6, -8
 1184              		.cfi_offset 14, -4
 446:Src/main.c    **** 
 1185              		.loc 1 446 0
 1186 0002 FFF7FEFF 		bl	HAL_Init
 1187              	.LVL133:
 449:Src/main.c    ****   SysTick_Config(SystemCoreClock / 1000); // To make systick event happen every 1 ms
 1188              		.loc 1 449 0
 1189 0006 FFF7FEFF 		bl	SystemClock_Config
 1190              	.LVL134:
 450:Src/main.c    **** 
 1191              		.loc 1 450 0
 1192 000a 534B     		ldr	r3, .L88
 1193 000c 1B68     		ldr	r3, [r3]
 1194 000e 534A     		ldr	r2, .L88+4
 1195 0010 A2FB0323 		umull	r2, r3, r2, r3
 1196 0014 9B09     		lsrs	r3, r3, #6
 1197              	.LVL135:
 1198              	.LBB31:
 1199              	.LBB32:
 1200              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm4.h **** 
   9:Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 41


  19:Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm4.h ****    *
  21:Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** 
  35:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm4.h **** #endif
  40:Drivers/CMSIS/Include/core_cm4.h **** 
  41:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm4.h **** 
  46:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm4.h **** #endif
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h **** /**
  51:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm4.h **** 
  57:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm4.h **** 
  60:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm4.h ****  */
  63:Drivers/CMSIS/Include/core_cm4.h **** 
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm4.h **** /**
  69:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  70:Drivers/CMSIS/Include/core_cm4.h ****   @{
  71:Drivers/CMSIS/Include/core_cm4.h ****  */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 42


  76:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm4.h **** 
  79:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm4.h **** 
  81:Drivers/CMSIS/Include/core_cm4.h **** 
  82:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm4.h **** 
  87:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm4.h **** 
  92:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm4.h **** 
  97:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm4.h **** 
 102:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm4.h **** 
 106:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm4.h **** 
 111:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm4.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm4.h **** 
 117:Drivers/CMSIS/Include/core_cm4.h **** #else
 118:Drivers/CMSIS/Include/core_cm4.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm4.h **** #endif
 120:Drivers/CMSIS/Include/core_cm4.h **** 
 121:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:Drivers/CMSIS/Include/core_cm4.h **** */
 124:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 43


 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 162:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:Drivers/CMSIS/Include/core_cm4.h ****     #else
 165:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 168:Drivers/CMSIS/Include/core_cm4.h ****   #else
 169:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 171:Drivers/CMSIS/Include/core_cm4.h **** 
 172:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 173:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 176:Drivers/CMSIS/Include/core_cm4.h ****     #else
 177:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 179:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 180:Drivers/CMSIS/Include/core_cm4.h ****   #else
 181:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 182:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 183:Drivers/CMSIS/Include/core_cm4.h **** 
 184:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 185:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 186:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 188:Drivers/CMSIS/Include/core_cm4.h ****     #else
 189:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 44


 190:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 191:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 192:Drivers/CMSIS/Include/core_cm4.h ****   #else
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 194:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 195:Drivers/CMSIS/Include/core_cm4.h **** 
 196:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 197:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 200:Drivers/CMSIS/Include/core_cm4.h ****     #else
 201:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 203:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 204:Drivers/CMSIS/Include/core_cm4.h ****   #else
 205:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 206:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** #endif
 209:Drivers/CMSIS/Include/core_cm4.h **** 
 210:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:Drivers/CMSIS/Include/core_cm4.h **** 
 214:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 215:Drivers/CMSIS/Include/core_cm4.h **** }
 216:Drivers/CMSIS/Include/core_cm4.h **** #endif
 217:Drivers/CMSIS/Include/core_cm4.h **** 
 218:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:Drivers/CMSIS/Include/core_cm4.h **** 
 220:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:Drivers/CMSIS/Include/core_cm4.h **** 
 222:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:Drivers/CMSIS/Include/core_cm4.h **** 
 225:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 226:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 227:Drivers/CMSIS/Include/core_cm4.h **** #endif
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 230:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 232:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 240:Drivers/CMSIS/Include/core_cm4.h **** 
 241:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 245:Drivers/CMSIS/Include/core_cm4.h **** 
 246:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 45


 247:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 250:Drivers/CMSIS/Include/core_cm4.h **** 
 251:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 255:Drivers/CMSIS/Include/core_cm4.h **** #endif
 256:Drivers/CMSIS/Include/core_cm4.h **** 
 257:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:Drivers/CMSIS/Include/core_cm4.h **** /**
 259:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:Drivers/CMSIS/Include/core_cm4.h **** */
 265:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 266:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:Drivers/CMSIS/Include/core_cm4.h **** #else
 268:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:Drivers/CMSIS/Include/core_cm4.h **** #endif
 270:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:Drivers/CMSIS/Include/core_cm4.h **** 
 273:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 274:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:Drivers/CMSIS/Include/core_cm4.h **** 
 278:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** 
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 283:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 284:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 285:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 286:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 287:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 288:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 289:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 290:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 291:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 292:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 293:Drivers/CMSIS/Include/core_cm4.h **** /**
 294:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:Drivers/CMSIS/Include/core_cm4.h **** */
 297:Drivers/CMSIS/Include/core_cm4.h **** 
 298:Drivers/CMSIS/Include/core_cm4.h **** /**
 299:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 302:Drivers/CMSIS/Include/core_cm4.h ****   @{
 303:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 46


 304:Drivers/CMSIS/Include/core_cm4.h **** 
 305:Drivers/CMSIS/Include/core_cm4.h **** /**
 306:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:Drivers/CMSIS/Include/core_cm4.h ****  */
 308:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 309:Drivers/CMSIS/Include/core_cm4.h **** {
 310:Drivers/CMSIS/Include/core_cm4.h ****   struct
 311:Drivers/CMSIS/Include/core_cm4.h ****   {
 312:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 323:Drivers/CMSIS/Include/core_cm4.h **** 
 324:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 325:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:Drivers/CMSIS/Include/core_cm4.h **** 
 328:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:Drivers/CMSIS/Include/core_cm4.h **** 
 331:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:Drivers/CMSIS/Include/core_cm4.h **** 
 334:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:Drivers/CMSIS/Include/core_cm4.h **** 
 337:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** 
 344:Drivers/CMSIS/Include/core_cm4.h **** /**
 345:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:Drivers/CMSIS/Include/core_cm4.h ****  */
 347:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 348:Drivers/CMSIS/Include/core_cm4.h **** {
 349:Drivers/CMSIS/Include/core_cm4.h ****   struct
 350:Drivers/CMSIS/Include/core_cm4.h ****   {
 351:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 358:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 47


 361:Drivers/CMSIS/Include/core_cm4.h **** 
 362:Drivers/CMSIS/Include/core_cm4.h **** /**
 363:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:Drivers/CMSIS/Include/core_cm4.h ****  */
 365:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 366:Drivers/CMSIS/Include/core_cm4.h **** {
 367:Drivers/CMSIS/Include/core_cm4.h ****   struct
 368:Drivers/CMSIS/Include/core_cm4.h ****   {
 369:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 383:Drivers/CMSIS/Include/core_cm4.h **** 
 384:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 385:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:Drivers/CMSIS/Include/core_cm4.h **** 
 391:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:Drivers/CMSIS/Include/core_cm4.h **** 
 394:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:Drivers/CMSIS/Include/core_cm4.h **** 
 397:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:Drivers/CMSIS/Include/core_cm4.h **** 
 406:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:Drivers/CMSIS/Include/core_cm4.h **** 
 409:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:Drivers/CMSIS/Include/core_cm4.h **** 
 412:Drivers/CMSIS/Include/core_cm4.h **** 
 413:Drivers/CMSIS/Include/core_cm4.h **** /**
 414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:Drivers/CMSIS/Include/core_cm4.h ****  */
 416:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 417:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 48


 418:Drivers/CMSIS/Include/core_cm4.h ****   struct
 419:Drivers/CMSIS/Include/core_cm4.h ****   {
 420:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:Drivers/CMSIS/Include/core_cm4.h **** 
 438:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:Drivers/CMSIS/Include/core_cm4.h **** 
 440:Drivers/CMSIS/Include/core_cm4.h **** 
 441:Drivers/CMSIS/Include/core_cm4.h **** /**
 442:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:Drivers/CMSIS/Include/core_cm4.h ****   @{
 446:Drivers/CMSIS/Include/core_cm4.h ****  */
 447:Drivers/CMSIS/Include/core_cm4.h **** 
 448:Drivers/CMSIS/Include/core_cm4.h **** /**
 449:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:Drivers/CMSIS/Include/core_cm4.h ****  */
 451:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 452:Drivers/CMSIS/Include/core_cm4.h **** {
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 467:Drivers/CMSIS/Include/core_cm4.h **** 
 468:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 49


 475:Drivers/CMSIS/Include/core_cm4.h **** /**
 476:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:Drivers/CMSIS/Include/core_cm4.h ****   @{
 480:Drivers/CMSIS/Include/core_cm4.h ****  */
 481:Drivers/CMSIS/Include/core_cm4.h **** 
 482:Drivers/CMSIS/Include/core_cm4.h **** /**
 483:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:Drivers/CMSIS/Include/core_cm4.h ****  */
 485:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 486:Drivers/CMSIS/Include/core_cm4.h **** {
 487:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 509:Drivers/CMSIS/Include/core_cm4.h **** 
 510:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 50


 532:Drivers/CMSIS/Include/core_cm4.h **** 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** 
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** 
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** 
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 51


 589:Drivers/CMSIS/Include/core_cm4.h **** 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** 
 593:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** 
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** 
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 52


 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm4.h **** 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** 
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** 
 675:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** 
 691:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:Drivers/CMSIS/Include/core_cm4.h **** 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** /**
 695:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:Drivers/CMSIS/Include/core_cm4.h ****   @{
 699:Drivers/CMSIS/Include/core_cm4.h ****  */
 700:Drivers/CMSIS/Include/core_cm4.h **** 
 701:Drivers/CMSIS/Include/core_cm4.h **** /**
 702:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 53


 703:Drivers/CMSIS/Include/core_cm4.h ****  */
 704:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 705:Drivers/CMSIS/Include/core_cm4.h **** {
 706:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:Drivers/CMSIS/Include/core_cm4.h **** 
 715:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:Drivers/CMSIS/Include/core_cm4.h **** 
 719:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:Drivers/CMSIS/Include/core_cm4.h **** 
 722:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:Drivers/CMSIS/Include/core_cm4.h **** 
 725:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:Drivers/CMSIS/Include/core_cm4.h **** 
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:Drivers/CMSIS/Include/core_cm4.h **** 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** /**
 735:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:Drivers/CMSIS/Include/core_cm4.h ****   @{
 739:Drivers/CMSIS/Include/core_cm4.h ****  */
 740:Drivers/CMSIS/Include/core_cm4.h **** 
 741:Drivers/CMSIS/Include/core_cm4.h **** /**
 742:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:Drivers/CMSIS/Include/core_cm4.h ****  */
 744:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 745:Drivers/CMSIS/Include/core_cm4.h **** {
 746:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 751:Drivers/CMSIS/Include/core_cm4.h **** 
 752:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:Drivers/CMSIS/Include/core_cm4.h **** 
 759:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 54


 760:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:Drivers/CMSIS/Include/core_cm4.h **** 
 762:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:Drivers/CMSIS/Include/core_cm4.h **** 
 765:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:Drivers/CMSIS/Include/core_cm4.h **** 
 769:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 770:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** 
 773:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** 
 783:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** 
 786:Drivers/CMSIS/Include/core_cm4.h **** /**
 787:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:Drivers/CMSIS/Include/core_cm4.h ****   @{
 791:Drivers/CMSIS/Include/core_cm4.h ****  */
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /**
 794:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:Drivers/CMSIS/Include/core_cm4.h ****  */
 796:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 797:Drivers/CMSIS/Include/core_cm4.h **** {
 798:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 799:Drivers/CMSIS/Include/core_cm4.h ****   {
 800:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 55


 817:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 831:Drivers/CMSIS/Include/core_cm4.h **** 
 832:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm4.h **** 
 836:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:Drivers/CMSIS/Include/core_cm4.h **** 
 840:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:Drivers/CMSIS/Include/core_cm4.h **** 
 843:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:Drivers/CMSIS/Include/core_cm4.h **** 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** 
 868:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 56


 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 57


 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 58


 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 59


1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 60


1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:Drivers/CMSIS/Include/core_cm4.h **** 
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:Drivers/CMSIS/Include/core_cm4.h **** 
1158:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 61


1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** 
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** 
1188:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:Drivers/CMSIS/Include/core_cm4.h **** 
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:Drivers/CMSIS/Include/core_cm4.h **** /**
1193:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:Drivers/CMSIS/Include/core_cm4.h ****   @{
1197:Drivers/CMSIS/Include/core_cm4.h ****  */
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /**
1200:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:Drivers/CMSIS/Include/core_cm4.h ****  */
1202:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1203:Drivers/CMSIS/Include/core_cm4.h **** {
1204:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 62


1216:Drivers/CMSIS/Include/core_cm4.h **** 
1217:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1218:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm4.h **** 
1221:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm4.h **** 
1224:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm4.h **** 
1227:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm4.h **** 
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** 
1241:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:Drivers/CMSIS/Include/core_cm4.h **** 
1251:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** 
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 63


1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** 
1282:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:Drivers/CMSIS/Include/core_cm4.h **** #endif
1284:Drivers/CMSIS/Include/core_cm4.h **** 
1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:Drivers/CMSIS/Include/core_cm4.h **** /**
1288:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:Drivers/CMSIS/Include/core_cm4.h ****   @{
1292:Drivers/CMSIS/Include/core_cm4.h ****  */
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:Drivers/CMSIS/Include/core_cm4.h ****  */
1297:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1298:Drivers/CMSIS/Include/core_cm4.h **** {
1299:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1306:Drivers/CMSIS/Include/core_cm4.h **** 
1307:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:Drivers/CMSIS/Include/core_cm4.h **** 
1311:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:Drivers/CMSIS/Include/core_cm4.h **** 
1314:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:Drivers/CMSIS/Include/core_cm4.h **** 
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** 
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** 
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** 
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 64


1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** 
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** 
1335:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:Drivers/CMSIS/Include/core_cm4.h **** 
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:Drivers/CMSIS/Include/core_cm4.h **** 
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** 
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** 
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** 
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** 
1377:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 65


1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:Drivers/CMSIS/Include/core_cm4.h **** #endif
1392:Drivers/CMSIS/Include/core_cm4.h **** 
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** /**
1395:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:Drivers/CMSIS/Include/core_cm4.h ****   @{
1399:Drivers/CMSIS/Include/core_cm4.h ****  */
1400:Drivers/CMSIS/Include/core_cm4.h **** 
1401:Drivers/CMSIS/Include/core_cm4.h **** /**
1402:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:Drivers/CMSIS/Include/core_cm4.h ****  */
1404:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1405:Drivers/CMSIS/Include/core_cm4.h **** {
1406:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1411:Drivers/CMSIS/Include/core_cm4.h **** 
1412:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:Drivers/CMSIS/Include/core_cm4.h **** 
1416:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:Drivers/CMSIS/Include/core_cm4.h **** 
1419:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:Drivers/CMSIS/Include/core_cm4.h **** 
1422:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:Drivers/CMSIS/Include/core_cm4.h **** 
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 66


1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** 
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** 
1456:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** 
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** /**
1500:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 67


1501:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:Drivers/CMSIS/Include/core_cm4.h ****   @{
1504:Drivers/CMSIS/Include/core_cm4.h ****  */
1505:Drivers/CMSIS/Include/core_cm4.h **** 
1506:Drivers/CMSIS/Include/core_cm4.h **** /**
1507:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1511:Drivers/CMSIS/Include/core_cm4.h **** */
1512:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:Drivers/CMSIS/Include/core_cm4.h **** 
1514:Drivers/CMSIS/Include/core_cm4.h **** /**
1515:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register.
1518:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:Drivers/CMSIS/Include/core_cm4.h **** */
1520:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:Drivers/CMSIS/Include/core_cm4.h **** 
1522:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:Drivers/CMSIS/Include/core_cm4.h **** 
1524:Drivers/CMSIS/Include/core_cm4.h **** 
1525:Drivers/CMSIS/Include/core_cm4.h **** /**
1526:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:Drivers/CMSIS/Include/core_cm4.h ****   @{
1530:Drivers/CMSIS/Include/core_cm4.h ****  */
1531:Drivers/CMSIS/Include/core_cm4.h **** 
1532:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:Drivers/CMSIS/Include/core_cm4.h **** 
1551:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:Drivers/CMSIS/Include/core_cm4.h **** #endif
1555:Drivers/CMSIS/Include/core_cm4.h **** 
1556:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 68


1558:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:Drivers/CMSIS/Include/core_cm4.h **** #endif
1560:Drivers/CMSIS/Include/core_cm4.h **** 
1561:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** 
1564:Drivers/CMSIS/Include/core_cm4.h **** 
1565:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1566:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1567:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1568:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1569:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1570:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1571:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1572:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1573:Drivers/CMSIS/Include/core_cm4.h **** /**
1574:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:Drivers/CMSIS/Include/core_cm4.h **** */
1576:Drivers/CMSIS/Include/core_cm4.h **** 
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:Drivers/CMSIS/Include/core_cm4.h **** /**
1581:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:Drivers/CMSIS/Include/core_cm4.h ****   @{
1585:Drivers/CMSIS/Include/core_cm4.h ****  */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** /**
1588:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1589:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1592:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:Drivers/CMSIS/Include/core_cm4.h **** {
1598:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1599:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:Drivers/CMSIS/Include/core_cm4.h **** 
1601:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:Drivers/CMSIS/Include/core_cm4.h **** }
1608:Drivers/CMSIS/Include/core_cm4.h **** 
1609:Drivers/CMSIS/Include/core_cm4.h **** 
1610:Drivers/CMSIS/Include/core_cm4.h **** /**
1611:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1612:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 69


1615:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:Drivers/CMSIS/Include/core_cm4.h **** {
1617:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:Drivers/CMSIS/Include/core_cm4.h **** }
1619:Drivers/CMSIS/Include/core_cm4.h **** 
1620:Drivers/CMSIS/Include/core_cm4.h **** 
1621:Drivers/CMSIS/Include/core_cm4.h **** /**
1622:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable External Interrupt
1623:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:Drivers/CMSIS/Include/core_cm4.h ****  */
1626:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:Drivers/CMSIS/Include/core_cm4.h **** {
1628:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:Drivers/CMSIS/Include/core_cm4.h **** }
1630:Drivers/CMSIS/Include/core_cm4.h **** 
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** /**
1633:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable External Interrupt
1634:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:Drivers/CMSIS/Include/core_cm4.h ****  */
1637:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:Drivers/CMSIS/Include/core_cm4.h **** {
1639:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:Drivers/CMSIS/Include/core_cm4.h **** }
1641:Drivers/CMSIS/Include/core_cm4.h **** 
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** /**
1644:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1645:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:Drivers/CMSIS/Include/core_cm4.h ****  */
1650:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:Drivers/CMSIS/Include/core_cm4.h **** {
1652:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:Drivers/CMSIS/Include/core_cm4.h **** }
1654:Drivers/CMSIS/Include/core_cm4.h **** 
1655:Drivers/CMSIS/Include/core_cm4.h **** 
1656:Drivers/CMSIS/Include/core_cm4.h **** /**
1657:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1658:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:Drivers/CMSIS/Include/core_cm4.h ****  */
1661:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:Drivers/CMSIS/Include/core_cm4.h **** {
1663:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 70


1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1684:Drivers/CMSIS/Include/core_cm4.h ****  */
1685:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:Drivers/CMSIS/Include/core_cm4.h **** {
1687:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:Drivers/CMSIS/Include/core_cm4.h **** }
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** 
1691:Drivers/CMSIS/Include/core_cm4.h **** /**
1692:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1693:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:Drivers/CMSIS/Include/core_cm4.h **** {
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:Drivers/CMSIS/Include/core_cm4.h ****   }
1708:Drivers/CMSIS/Include/core_cm4.h **** }
1709:Drivers/CMSIS/Include/core_cm4.h **** 
1710:Drivers/CMSIS/Include/core_cm4.h **** 
1711:Drivers/CMSIS/Include/core_cm4.h **** /**
1712:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1713:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1718:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:Drivers/CMSIS/Include/core_cm4.h ****  */
1720:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:Drivers/CMSIS/Include/core_cm4.h **** {
1722:Drivers/CMSIS/Include/core_cm4.h **** 
1723:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:Drivers/CMSIS/Include/core_cm4.h ****   {
1725:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:Drivers/CMSIS/Include/core_cm4.h ****   }
1727:Drivers/CMSIS/Include/core_cm4.h ****   else
1728:Drivers/CMSIS/Include/core_cm4.h ****   {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 71


1729:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:Drivers/CMSIS/Include/core_cm4.h ****   }
1731:Drivers/CMSIS/Include/core_cm4.h **** }
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** 
1734:Drivers/CMSIS/Include/core_cm4.h **** /**
1735:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1736:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:Drivers/CMSIS/Include/core_cm4.h ****  */
1745:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1746:Drivers/CMSIS/Include/core_cm4.h **** {
1747:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1748:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1749:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1750:Drivers/CMSIS/Include/core_cm4.h **** 
1751:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1752:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h ****   return (
1755:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1756:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1757:Drivers/CMSIS/Include/core_cm4.h ****          );
1758:Drivers/CMSIS/Include/core_cm4.h **** }
1759:Drivers/CMSIS/Include/core_cm4.h **** 
1760:Drivers/CMSIS/Include/core_cm4.h **** 
1761:Drivers/CMSIS/Include/core_cm4.h **** /**
1762:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1763:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1764:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1765:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1766:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1767:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1768:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1769:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1770:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1771:Drivers/CMSIS/Include/core_cm4.h ****  */
1772:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1773:Drivers/CMSIS/Include/core_cm4.h **** {
1774:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1775:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1776:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1777:Drivers/CMSIS/Include/core_cm4.h **** 
1778:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1779:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1780:Drivers/CMSIS/Include/core_cm4.h **** 
1781:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1782:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1783:Drivers/CMSIS/Include/core_cm4.h **** }
1784:Drivers/CMSIS/Include/core_cm4.h **** 
1785:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 72


1786:Drivers/CMSIS/Include/core_cm4.h **** /**
1787:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1788:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1789:Drivers/CMSIS/Include/core_cm4.h ****  */
1790:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1791:Drivers/CMSIS/Include/core_cm4.h **** {
1792:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1793:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1794:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1795:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1796:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1797:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1798:Drivers/CMSIS/Include/core_cm4.h **** 
1799:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1800:Drivers/CMSIS/Include/core_cm4.h ****   {
1801:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
1802:Drivers/CMSIS/Include/core_cm4.h ****   }
1803:Drivers/CMSIS/Include/core_cm4.h **** }
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1806:Drivers/CMSIS/Include/core_cm4.h **** 
1807:Drivers/CMSIS/Include/core_cm4.h **** 
1808:Drivers/CMSIS/Include/core_cm4.h **** 
1809:Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1810:Drivers/CMSIS/Include/core_cm4.h **** /**
1811:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1812:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1813:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
1814:Drivers/CMSIS/Include/core_cm4.h ****   @{
1815:Drivers/CMSIS/Include/core_cm4.h ****  */
1816:Drivers/CMSIS/Include/core_cm4.h **** 
1817:Drivers/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0U)
1818:Drivers/CMSIS/Include/core_cm4.h **** 
1819:Drivers/CMSIS/Include/core_cm4.h **** /**
1820:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
1821:Drivers/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1822:Drivers/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
1823:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1824:Drivers/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
1825:Drivers/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
1826:Drivers/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1827:Drivers/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1828:Drivers/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
1829:Drivers/CMSIS/Include/core_cm4.h ****  */
1830:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1831:Drivers/CMSIS/Include/core_cm4.h **** {
1832:Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 1201              		.loc 3 1832 0
 1202 0016 013B     		subs	r3, r3, #1
 1203              	.LVL136:
 1204 0018 B3F1807F 		cmp	r3, #16777216
 1205 001c 09D2     		bcs	.L78
1833:Drivers/CMSIS/Include/core_cm4.h ****   {
1834:Drivers/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
1835:Drivers/CMSIS/Include/core_cm4.h ****   }
1836:Drivers/CMSIS/Include/core_cm4.h **** 
1837:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 73


 1206              		.loc 3 1837 0
 1207 001e 504A     		ldr	r2, .L88+8
 1208 0020 5360     		str	r3, [r2, #4]
 1209              	.LVL137:
 1210              	.LBB33:
 1211              	.LBB34:
1702:Drivers/CMSIS/Include/core_cm4.h ****   }
 1212              		.loc 3 1702 0
 1213 0022 504B     		ldr	r3, .L88+12
 1214              	.LVL138:
 1215 0024 F021     		movs	r1, #240
 1216 0026 83F82310 		strb	r1, [r3, #35]
 1217              	.LVL139:
 1218              	.LBE34:
 1219              	.LBE33:
1838:Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
1839:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 1220              		.loc 3 1839 0
 1221 002a 0023     		movs	r3, #0
 1222 002c 9360     		str	r3, [r2, #8]
1840:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 1223              		.loc 3 1840 0
 1224 002e 0723     		movs	r3, #7
 1225 0030 1360     		str	r3, [r2]
 1226              	.L78:
 1227              	.LBE32:
 1228              	.LBE31:
 453:Src/main.c    ****   MX_ADC1_Init();
 1229              		.loc 1 453 0
 1230 0032 FFF7FEFF 		bl	MX_GPIO_Init
 1231              	.LVL140:
 454:Src/main.c    ****   MX_ADC2_Init();
 1232              		.loc 1 454 0
 1233 0036 FFF7FEFF 		bl	MX_ADC1_Init
 1234              	.LVL141:
 455:Src/main.c    ****   MX_CAN_Init();
 1235              		.loc 1 455 0
 1236 003a FFF7FEFF 		bl	MX_ADC2_Init
 1237              	.LVL142:
 456:Src/main.c    ****   MX_USART3_UART_Init();
 1238              		.loc 1 456 0
 1239 003e FFF7FEFF 		bl	MX_CAN_Init
 1240              	.LVL143:
 457:Src/main.c    **** 
 1241              		.loc 1 457 0
 1242 0042 FFF7FEFF 		bl	MX_USART3_UART_Init
 1243              	.LVL144:
 461:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, CAN_SHTD_Pin, GPIO_PIN_RESET);
 1244              		.loc 1 461 0
 1245 0046 484C     		ldr	r4, .L88+16
 1246 0048 0022     		movs	r2, #0
 1247 004a 4FF48051 		mov	r1, #4096
 1248 004e 2046     		mov	r0, r4
 1249 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1250              	.LVL145:
 462:Src/main.c    **** 
 1251              		.loc 1 462 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 74


 1252 0054 0022     		movs	r2, #0
 1253 0056 4FF40051 		mov	r1, #8192
 1254 005a 2046     		mov	r0, r4
 1255 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1256              	.LVL146:
 1257              	.LBB35:
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1258              		.loc 1 464 0
 1259 0060 0024     		movs	r4, #0
 1260 0062 08E0     		b	.L79
 1261              	.LVL147:
 1262              	.L80:
 465:Src/main.c    **** 	  HAL_Delay(50);
 1263              		.loc 1 465 0 discriminator 3
 1264 0064 0121     		movs	r1, #1
 1265 0066 4FF09040 		mov	r0, #1207959552
 1266 006a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1267              	.LVL148:
 466:Src/main.c    ****   }
 1268              		.loc 1 466 0 discriminator 3
 1269 006e 3220     		movs	r0, #50
 1270 0070 FFF7FEFF 		bl	HAL_Delay
 1271              	.LVL149:
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1272              		.loc 1 464 0 discriminator 3
 1273 0074 0134     		adds	r4, r4, #1
 1274              	.LVL150:
 1275              	.L79:
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1276              		.loc 1 464 0 is_stmt 0 discriminator 1
 1277 0076 052C     		cmp	r4, #5
 1278 0078 F4DD     		ble	.L80
 1279              	.LBE35:
 469:Src/main.c    ****   /* USER CODE END 2 */
 1280              		.loc 1 469 0 is_stmt 1
 1281 007a FFF7FEFF 		bl	swInit
 1282              	.LVL151:
 1283 007e 60E0     		b	.L85
 1284              	.LVL152:
 1285              	.L84:
 1286              	.LBB36:
 1287              	.LBB37:
 1288              	.LBB38:
 619:Src/main.c    ****         {
 1289              		.loc 1 619 0
 1290 0080 04EB8402 		add	r2, r4, r4, lsl #2
 1291 0084 D300     		lsls	r3, r2, #3
 1292 0086 394A     		ldr	r2, .L88+20
 1293 0088 D558     		ldr	r5, [r2, r3]
 1294 008a 2846     		mov	r0, r5
 1295 008c FFF7FEFF 		bl	strlen
 1296              	.LVL153:
 1297 0090 0246     		mov	r2, r0
 1298 0092 2946     		mov	r1, r5
 1299 0094 3648     		ldr	r0, .L88+24
 1300 0096 FFF7FEFF 		bl	strncmp
 1301              	.LVL154:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 75


 1302 009a 10B1     		cbz	r0, .L87
 617:Src/main.c    ****     {
 1303              		.loc 1 617 0
 1304 009c 0134     		adds	r4, r4, #1
 1305              	.LVL155:
 1306 009e A4B2     		uxth	r4, r4
 1307              	.LVL156:
 1308 00a0 56E0     		b	.L81
 1309              	.L87:
 621:Src/main.c    ****         }
 1310              		.loc 1 621 0
 1311 00a2 04EB8406 		add	r6, r4, r4, lsl #2
 1312 00a6 F300     		lsls	r3, r6, #3
 1313 00a8 304C     		ldr	r4, .L88+20
 1314              	.LVL157:
 1315 00aa 1C44     		add	r4, r4, r3
 1316              	.L83:
 1317              	.LVL158:
 1318              	.LBE38:
 1319              	.LBE37:
 1320              	.LBE36:
 487:Src/main.c    ****       setDriver(GPIOB, In2_Pin, 1, p->val);
 1321              		.loc 1 487 0
 1322 00ac 2E4D     		ldr	r5, .L88+16
 1323 00ae A368     		ldr	r3, [r4, #8]
 1324 00b0 0022     		movs	r2, #0
 1325 00b2 4FF48041 		mov	r1, #16384
 1326 00b6 2846     		mov	r0, r5
 1327 00b8 FFF7FEFF 		bl	setDriver
 1328              	.LVL159:
 488:Src/main.c    ****       setDriver(GPIOA, In3_Pin, 2, p->val);
 1329              		.loc 1 488 0
 1330 00bc A368     		ldr	r3, [r4, #8]
 1331 00be 0122     		movs	r2, #1
 1332 00c0 4FF40041 		mov	r1, #32768
 1333 00c4 2846     		mov	r0, r5
 1334 00c6 FFF7FEFF 		bl	setDriver
 1335              	.LVL160:
 489:Src/main.c    ****       setDriver(GPIOA, In4_Pin, 3, p->val);
 1336              		.loc 1 489 0
 1337 00ca A368     		ldr	r3, [r4, #8]
 1338 00cc 0222     		movs	r2, #2
 1339 00ce 4FF48061 		mov	r1, #1024
 1340 00d2 4FF09040 		mov	r0, #1207959552
 1341 00d6 FFF7FEFF 		bl	setDriver
 1342              	.LVL161:
 490:Src/main.c    ****       setDriver(GPIOA, In5_Pin, 4, p->val);
 1343              		.loc 1 490 0
 1344 00da A368     		ldr	r3, [r4, #8]
 1345 00dc 0322     		movs	r2, #3
 1346 00de 4FF40071 		mov	r1, #512
 1347 00e2 4FF09040 		mov	r0, #1207959552
 1348 00e6 FFF7FEFF 		bl	setDriver
 1349              	.LVL162:
 491:Src/main.c    ****       setDriver(GPIOA, In6_Pin, 5, p->val);
 1350              		.loc 1 491 0
 1351 00ea A368     		ldr	r3, [r4, #8]
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 76


 1352 00ec 0422     		movs	r2, #4
 1353 00ee 4FF48071 		mov	r1, #256
 1354 00f2 4FF09040 		mov	r0, #1207959552
 1355 00f6 FFF7FEFF 		bl	setDriver
 1356              	.LVL163:
 492:Src/main.c    ****       setDriver(GPIOA, In7_Pin, 6, p->val);
 1357              		.loc 1 492 0
 1358 00fa A368     		ldr	r3, [r4, #8]
 1359 00fc 0522     		movs	r2, #5
 1360 00fe 4FF48051 		mov	r1, #4096
 1361 0102 4FF09040 		mov	r0, #1207959552
 1362 0106 FFF7FEFF 		bl	setDriver
 1363              	.LVL164:
 493:Src/main.c    ****       setDriver(GPIOC, In8_Pin, 7, p->val);
 1364              		.loc 1 493 0
 1365 010a A368     		ldr	r3, [r4, #8]
 1366 010c 0622     		movs	r2, #6
 1367 010e 4FF40061 		mov	r1, #2048
 1368 0112 4FF09040 		mov	r0, #1207959552
 1369 0116 FFF7FEFF 		bl	setDriver
 1370              	.LVL165:
 494:Src/main.c    ****       setDriver(GPIOB, In9_Pin, 8, p->val);
 1371              		.loc 1 494 0
 1372 011a A368     		ldr	r3, [r4, #8]
 1373 011c 0722     		movs	r2, #7
 1374 011e 4FF40051 		mov	r1, #8192
 1375 0122 1448     		ldr	r0, .L88+28
 1376 0124 FFF7FEFF 		bl	setDriver
 1377              	.LVL166:
 495:Src/main.c    ****       setDriver(GPIOA, In10_Pin, 9, p->val);
 1378              		.loc 1 495 0
 1379 0128 A368     		ldr	r3, [r4, #8]
 1380 012a 0822     		movs	r2, #8
 1381 012c 0121     		movs	r1, #1
 1382 012e 2846     		mov	r0, r5
 1383 0130 FFF7FEFF 		bl	setDriver
 1384              	.LVL167:
 496:Src/main.c    **** 
 1385              		.loc 1 496 0
 1386 0134 A368     		ldr	r3, [r4, #8]
 1387 0136 0922     		movs	r2, #9
 1388 0138 0821     		movs	r1, #8
 1389 013a 4FF09040 		mov	r0, #1207959552
 1390 013e FFF7FEFF 		bl	setDriver
 1391              	.LVL168:
 1392              	.L85:
 480:Src/main.c    ****       receiveCanard();
 1393              		.loc 1 480 0 discriminator 1
 1394 0142 FFF7FEFF 		bl	sendCanard
 1395              	.LVL169:
 481:Src/main.c    ****       spinCanard();
 1396              		.loc 1 481 0 discriminator 1
 1397 0146 FFF7FEFF 		bl	receiveCanard
 1398              	.LVL170:
 482:Src/main.c    **** 
 1399              		.loc 1 482 0 discriminator 1
 1400 014a FFF7FEFF 		bl	spinCanard
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 77


 1401              	.LVL171:
 1402              	.LBB41:
 1403              	.LBB40:
 1404              	.LBB39:
 617:Src/main.c    ****     {
 1405              		.loc 1 617 0 discriminator 1
 1406 014e 0024     		movs	r4, #0
 1407              	.LVL172:
 1408              	.L81:
 617:Src/main.c    ****     {
 1409              		.loc 1 617 0 is_stmt 0
 1410 0150 002C     		cmp	r4, #0
 1411 0152 95D0     		beq	.L84
 1412              	.LBE39:
 624:Src/main.c    **** }
 1413              		.loc 1 624 0 is_stmt 1
 1414 0154 0024     		movs	r4, #0
 1415              	.LVL173:
 1416 0156 A9E7     		b	.L83
 1417              	.L89:
 1418              		.align	2
 1419              	.L88:
 1420 0158 00000000 		.word	SystemCoreClock
 1421 015c D34D6210 		.word	274877907
 1422 0160 10E000E0 		.word	-536813552
 1423 0164 00ED00E0 		.word	-536810240
 1424 0168 00040048 		.word	1207960576
 1425 016c 00000000 		.word	.LANCHOR5
 1426 0170 00000000 		.word	.LC4
 1427 0174 00080048 		.word	1207961600
 1428              	.LBE40:
 1429              	.LBE41:
 1430              		.cfi_endproc
 1431              	.LFE137:
 1433              		.section	.text.getsetHandleCanard,"ax",%progbits
 1434              		.align	1
 1435              		.global	getsetHandleCanard
 1436              		.syntax unified
 1437              		.thumb
 1438              		.thumb_func
 1439              		.fpu fpv4-sp-d16
 1441              	getsetHandleCanard:
 1442              	.LFB138:
 504:Src/main.c    **** 
 1443              		.loc 1 504 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 96
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              	.LVL174:
 1448 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1449              	.LCFI31:
 1450              		.cfi_def_cfa_offset 20
 1451              		.cfi_offset 4, -20
 1452              		.cfi_offset 5, -16
 1453              		.cfi_offset 6, -12
 1454              		.cfi_offset 7, -8
 1455              		.cfi_offset 14, -4
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 78


 1456 0002 9FB0     		sub	sp, sp, #124
 1457              	.LCFI32:
 1458              		.cfi_def_cfa_offset 144
 1459 0004 0746     		mov	r7, r0
 506:Src/main.c    ****     uint8_t tag    = 0;
 1460              		.loc 1 506 0
 1461 0006 4FF6FF73 		movw	r3, #65535
 1462 000a ADF87630 		strh	r3, [sp, #118]	@ movhi
 507:Src/main.c    ****     int offset     = 0;
 1463              		.loc 1 507 0
 1464 000e 0024     		movs	r4, #0
 1465 0010 8DF87540 		strb	r4, [sp, #117]
 1466              	.LVL175:
 509:Src/main.c    **** 
 1467              		.loc 1 509 0
 1468 0014 0022     		movs	r2, #0
 1469 0016 0023     		movs	r3, #0
 1470 0018 CDE91A23 		strd	r2, [sp, #104]
 511:Src/main.c    ****     offset += 13;
 1471              		.loc 1 511 0
 1472 001c 0DF17603 		add	r3, sp, #118
 1473 0020 0093     		str	r3, [sp]
 1474 0022 2346     		mov	r3, r4
 1475 0024 0D22     		movs	r2, #13
 1476 0026 2146     		mov	r1, r4
 1477 0028 FFF7FEFF 		bl	canardDecodeScalar
 1478              	.LVL176:
 513:Src/main.c    ****     offset += 3;
 1479              		.loc 1 513 0
 1480 002c 0DF17503 		add	r3, sp, #117
 1481 0030 0093     		str	r3, [sp]
 1482 0032 2346     		mov	r3, r4
 1483 0034 0322     		movs	r2, #3
 1484 0036 0D21     		movs	r1, #13
 1485 0038 3846     		mov	r0, r7
 1486 003a FFF7FEFF 		bl	canardDecodeScalar
 1487              	.LVL177:
 516:Src/main.c    ****     {
 1488              		.loc 1 516 0
 1489 003e 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 1490 0042 012B     		cmp	r3, #1
 1491 0044 0FD0     		beq	.L107
 514:Src/main.c    **** 
 1492              		.loc 1 514 0
 1493 0046 1025     		movs	r5, #16
 1494              	.LVL178:
 1495              	.L91:
 522:Src/main.c    ****     uint8_t name[16] = "";
 1496              		.loc 1 522 0
 1497 0048 BB8A     		ldrh	r3, [r7, #20]
 1498 004a 2E46     		mov	r6, r5
 1499 004c 002D     		cmp	r5, #0
 1500 004e 14DB     		blt	.L108
 1501              	.L92:
 1502 0050 F610     		asrs	r6, r6, #3
 1503 0052 7642     		negs	r6, r6
 1504 0054 13FA86F6 		uxtah	r6, r3, r6
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 79


 1505 0058 B6B2     		uxth	r6, r6
 1506              	.LVL179:
 523:Src/main.c    ****     for (int i = 0; i < n; i++)
 1507              		.loc 1 523 0
 1508 005a 0024     		movs	r4, #0
 1509 005c 1694     		str	r4, [sp, #88]
 1510 005e 1794     		str	r4, [sp, #92]
 1511 0060 1894     		str	r4, [sp, #96]
 1512 0062 1994     		str	r4, [sp, #100]
 1513              	.LVL180:
 1514              	.LBB48:
 524:Src/main.c    ****     {
 1515              		.loc 1 524 0
 1516 0064 16E0     		b	.L93
 1517              	.LVL181:
 1518              	.L107:
 1519              	.LBE48:
 518:Src/main.c    ****         offset += 64;
 1520              		.loc 1 518 0
 1521 0066 1AAB     		add	r3, sp, #104
 1522 0068 0093     		str	r3, [sp]
 1523 006a 2346     		mov	r3, r4
 1524 006c 4022     		movs	r2, #64
 1525 006e 1021     		movs	r1, #16
 1526 0070 3846     		mov	r0, r7
 1527 0072 FFF7FEFF 		bl	canardDecodeScalar
 1528              	.LVL182:
 519:Src/main.c    ****     }
 1529              		.loc 1 519 0
 1530 0076 5025     		movs	r5, #80
 1531 0078 E6E7     		b	.L91
 1532              	.LVL183:
 1533              	.L108:
 522:Src/main.c    ****     uint8_t name[16] = "";
 1534              		.loc 1 522 0
 1535 007a EE1D     		adds	r6, r5, #7
 1536 007c E8E7     		b	.L92
 1537              	.LVL184:
 1538              	.L94:
 1539              	.LBB49:
 526:Src/main.c    ****         offset += 8;
 1540              		.loc 1 526 0 discriminator 3
 1541 007e 16AB     		add	r3, sp, #88
 1542 0080 2344     		add	r3, r3, r4
 1543 0082 0093     		str	r3, [sp]
 1544 0084 0023     		movs	r3, #0
 1545 0086 0822     		movs	r2, #8
 1546 0088 2946     		mov	r1, r5
 1547 008a 3846     		mov	r0, r7
 1548 008c FFF7FEFF 		bl	canardDecodeScalar
 1549              	.LVL185:
 527:Src/main.c    ****     }
 1550              		.loc 1 527 0 discriminator 3
 1551 0090 0835     		adds	r5, r5, #8
 1552              	.LVL186:
 524:Src/main.c    ****     {
 1553              		.loc 1 524 0 discriminator 3
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 80


 1554 0092 0134     		adds	r4, r4, #1
 1555              	.LVL187:
 1556              	.L93:
 524:Src/main.c    ****     {
 1557              		.loc 1 524 0 is_stmt 0 discriminator 1
 1558 0094 A642     		cmp	r6, r4
 1559 0096 F2DC     		bgt	.L94
 1560              	.LVL188:
 1561              	.LBE49:
 532:Src/main.c    ****     {
 1562              		.loc 1 532 0 is_stmt 1
 1563 0098 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 1564 009c 002B     		cmp	r3, #0
 1565 009e 42D1     		bne	.L109
 538:Src/main.c    ****     }
 1566              		.loc 1 538 0
 1567 00a0 BDF87630 		ldrh	r3, [sp, #118]
 1568              	.LVL189:
 1569              	.LBB50:
 1570              	.LBB51:
 607:Src/main.c    ****     {
 1571              		.loc 1 607 0
 1572 00a4 002B     		cmp	r3, #0
 1573 00a6 48D1     		bne	.L104
 611:Src/main.c    **** }
 1574              		.loc 1 611 0
 1575 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1576              	.LVL190:
 1577 00ac DA00     		lsls	r2, r3, #3
 1578 00ae 264D     		ldr	r5, .L112+8
 1579              	.LVL191:
 1580 00b0 1544     		add	r5, r5, r2
 1581              	.LVL192:
 1582              	.L100:
 1583              	.LBE51:
 1584              	.LBE50:
 541:Src/main.c    ****     {
 1585              		.loc 1 541 0
 1586 00b2 1DB1     		cbz	r5, .L101
 541:Src/main.c    ****     {
 1587              		.loc 1 541 0 is_stmt 0 discriminator 1
 1588 00b4 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 1589 00b8 012B     		cmp	r3, #1
 1590 00ba 39D0     		beq	.L110
 1591              	.LVL193:
 1592              	.L101:
 546:Src/main.c    ****     uint16_t len = encodeParamCanard(p, buffer);
 1593              		.loc 1 546 0 is_stmt 1
 1594 00bc 0024     		movs	r4, #0
 1595 00be 0694     		str	r4, [sp, #24]
 1596 00c0 3C22     		movs	r2, #60
 1597 00c2 2146     		mov	r1, r4
 1598 00c4 07A8     		add	r0, sp, #28
 1599 00c6 FFF7FEFF 		bl	memset
 1600              	.LVL194:
 547:Src/main.c    ****     int result = canardRequestOrRespond(&g_canard,
 1601              		.loc 1 547 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 81


 1602 00ca 06AE     		add	r6, sp, #24
 1603 00cc 3146     		mov	r1, r6
 1604 00ce 2846     		mov	r0, r5
 1605 00d0 FFF7FEFF 		bl	encodeParamCanard
 1606              	.LVL195:
 548:Src/main.c    ****                                         transfer->source_node_id,
 1607              		.loc 1 548 0
 1608 00d4 F97E     		ldrb	r1, [r7, #27]	@ zero_extendqisi2
 1609 00d6 0590     		str	r0, [sp, #20]
 1610 00d8 0496     		str	r6, [sp, #16]
 1611 00da 0394     		str	r4, [sp, #12]
 1612 00dc BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1613 00de 0293     		str	r3, [sp, #8]
 1614 00e0 1937     		adds	r7, r7, #25
 1615              	.LVL196:
 1616 00e2 0197     		str	r7, [sp, #4]
 1617 00e4 0B23     		movs	r3, #11
 1618 00e6 0093     		str	r3, [sp]
 1619 00e8 15A3     		adr	r3, .L112
 1620 00ea D3E90023 		ldrd	r2, [r3]
 1621 00ee 1748     		ldr	r0, .L112+12
 1622              	.LVL197:
 1623 00f0 FFF7FEFF 		bl	canardRequestOrRespond
 1624              	.LVL198:
 562:Src/main.c    **** 
 1625              		.loc 1 562 0
 1626 00f4 1FB0     		add	sp, sp, #124
 1627              	.LCFI33:
 1628              		.cfi_remember_state
 1629              		.cfi_def_cfa_offset 20
 1630              		@ sp needed
 1631 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1632              	.LVL199:
 1633              	.L99:
 1634              	.LCFI34:
 1635              		.cfi_restore_state
 1636              	.LBB53:
 1637              	.LBB54:
 1638              	.LBB55:
 619:Src/main.c    ****         {
 1639              		.loc 1 619 0
 1640 00f8 04EB8402 		add	r2, r4, r4, lsl #2
 1641 00fc D300     		lsls	r3, r2, #3
 1642 00fe 124A     		ldr	r2, .L112+8
 1643 0100 D558     		ldr	r5, [r2, r3]
 1644 0102 2846     		mov	r0, r5
 1645 0104 FFF7FEFF 		bl	strlen
 1646              	.LVL200:
 1647 0108 0246     		mov	r2, r0
 1648 010a 2946     		mov	r1, r5
 1649 010c 16A8     		add	r0, sp, #88
 1650 010e FFF7FEFF 		bl	strncmp
 1651              	.LVL201:
 1652 0112 10B1     		cbz	r0, .L111
 617:Src/main.c    ****     {
 1653              		.loc 1 617 0
 1654 0114 0134     		adds	r4, r4, #1
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 82


 1655              	.LVL202:
 1656 0116 A4B2     		uxth	r4, r4
 1657              	.LVL203:
 1658 0118 06E0     		b	.L95
 1659              	.L111:
 621:Src/main.c    ****         }
 1660              		.loc 1 621 0
 1661 011a 04EB8406 		add	r6, r4, r4, lsl #2
 1662              	.LVL204:
 1663 011e F300     		lsls	r3, r6, #3
 1664 0120 094D     		ldr	r5, .L112+8
 1665 0122 1D44     		add	r5, r5, r3
 1666 0124 C5E7     		b	.L100
 1667              	.LVL205:
 1668              	.L109:
 617:Src/main.c    ****     {
 1669              		.loc 1 617 0
 1670 0126 0024     		movs	r4, #0
 1671              	.LVL206:
 1672              	.L95:
 1673 0128 002C     		cmp	r4, #0
 1674 012a E5D0     		beq	.L99
 1675              	.LBE55:
 624:Src/main.c    **** }
 1676              		.loc 1 624 0
 1677 012c 0025     		movs	r5, #0
 1678              	.LVL207:
 1679 012e C0E7     		b	.L100
 1680              	.LVL208:
 1681              	.L110:
 1682              	.LBE54:
 1683              	.LBE53:
 543:Src/main.c    ****     }
 1684              		.loc 1 543 0
 1685 0130 DDE91A23 		ldrd	r2, [sp, #104]
 1686 0134 C5E90223 		strd	r2, [r5, #8]
 1687 0138 C0E7     		b	.L101
 1688              	.LVL209:
 1689              	.L104:
 1690              	.LBB56:
 1691              	.LBB52:
 609:Src/main.c    ****     }
 1692              		.loc 1 609 0
 1693 013a 0025     		movs	r5, #0
 1694              	.LVL210:
 1695 013c BEE7     		b	.L101
 1696              	.L113:
 1697 013e 00BF     		.align	3
 1698              	.L112:
 1699 0140 D5A4D139 		.word	970040533
 1700 0144 F922B6A7 		.word	-1481235719
 1701 0148 00000000 		.word	.LANCHOR5
 1702 014c 00000000 		.word	.LANCHOR0
 1703              	.LBE52:
 1704              	.LBE56:
 1705              		.cfi_endproc
 1706              	.LFE138:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 83


 1708              		.section	.text.onTransferReceived,"ax",%progbits
 1709              		.align	1
 1710              		.syntax unified
 1711              		.thumb
 1712              		.thumb_func
 1713              		.fpu fpv4-sp-d16
 1715              	onTransferReceived:
 1716              	.LFB128:
 205:Src/main.c    ****     if ((transfer->transfer_type == CanardTransferTypeRequest) &&
 1717              		.loc 1 205 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              	.LVL211:
 1722 0000 10B5     		push	{r4, lr}
 1723              	.LCFI35:
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 4, -8
 1726              		.cfi_offset 14, -4
 1727 0002 0C46     		mov	r4, r1
 206:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 1728              		.loc 1 206 0
 1729 0004 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
 1730 0006 012B     		cmp	r3, #1
 1731 0008 03D0     		beq	.L118
 1732              	.LVL212:
 1733              	.L115:
 214:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 1734              		.loc 1 214 0
 1735 000a 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 1736 000c 012B     		cmp	r3, #1
 1737 000e 07D0     		beq	.L119
 1738              	.L114:
 221:Src/main.c    **** 
 1739              		.loc 1 221 0
 1740 0010 10BD     		pop	{r4, pc}
 1741              	.LVL213:
 1742              	.L118:
 207:Src/main.c    ****     {
 1743              		.loc 1 207 0 discriminator 1
 1744 0012 CB8A     		ldrh	r3, [r1, #22]
 206:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 1745              		.loc 1 206 0 discriminator 1
 1746 0014 012B     		cmp	r3, #1
 1747 0016 F8D1     		bne	.L115
 209:Src/main.c    ****     }
 1748              		.loc 1 209 0
 1749 0018 0846     		mov	r0, r1
 1750              	.LVL214:
 1751 001a FFF7FEFF 		bl	getNodeInfoHandleCanard
 1752              	.LVL215:
 1753 001e F4E7     		b	.L115
 1754              	.L119:
 215:Src/main.c    ****     {
 1755              		.loc 1 215 0 discriminator 1
 1756 0020 E38A     		ldrh	r3, [r4, #22]
 214:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 84


 1757              		.loc 1 214 0 discriminator 1
 1758 0022 0B2B     		cmp	r3, #11
 1759 0024 F4D1     		bne	.L114
 217:Src/main.c    ****     }
 1760              		.loc 1 217 0
 1761 0026 2046     		mov	r0, r4
 1762 0028 FFF7FEFF 		bl	getsetHandleCanard
 1763              	.LVL216:
 221:Src/main.c    **** 
 1764              		.loc 1 221 0
 1765 002c F0E7     		b	.L114
 1766              		.cfi_endproc
 1767              	.LFE128:
 1769              		.section	.text.Error_Handler,"ax",%progbits
 1770              		.align	1
 1771              		.global	Error_Handler
 1772              		.syntax unified
 1773              		.thumb
 1774              		.thumb_func
 1775              		.fpu fpv4-sp-d16
 1777              	Error_Handler:
 1778              	.LFB144:
 687:Src/main.c    **** 
 688:Src/main.c    **** /**
 689:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 690:Src/main.c    ****   * @retval None
 691:Src/main.c    ****   */
 692:Src/main.c    **** void Error_Handler(void)
 693:Src/main.c    **** {
 1779              		.loc 1 693 0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 0
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
 1783              		@ link register save eliminated.
 694:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 695:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 696:Src/main.c    **** 
 697:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 698:Src/main.c    **** }
 1784              		.loc 1 698 0
 1785 0000 7047     		bx	lr
 1786              		.cfi_endproc
 1787              	.LFE144:
 1789              		.section	.bss.g_canard,"aw",%nobits
 1790              		.align	2
 1791              		.set	.LANCHOR0,. + 0
 1794              	g_canard:
 1795 0000 00000000 		.space	36
 1795      00000000 
 1795      00000000 
 1795      00000000 
 1795      00000000 
 1796              		.section	.bss.g_canard_memory_pool,"aw",%nobits
 1797              		.align	2
 1798              		.set	.LANCHOR2,. + 0
 1801              	g_canard_memory_pool:
 1802 0000 00000000 		.space	1024
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 85


 1802      00000000 
 1802      00000000 
 1802      00000000 
 1802      00000000 
 1803              		.section	.bss.spin_time.9316,"aw",%nobits
 1804              		.align	2
 1805              		.set	.LANCHOR3,. + 0
 1808              	spin_time.9316:
 1809 0000 00000000 		.space	4
 1810              		.section	.bss.transfer_id.9318,"aw",%nobits
 1811              		.set	.LANCHOR4,. + 0
 1814              	transfer_id.9318:
 1815 0000 00       		.space	1
 1816              		.section	.data.parameters,"aw",%progbits
 1817              		.align	3
 1818              		.set	.LANCHOR5,. + 0
 1821              	parameters:
 1822 0000 00000000 		.word	.LC4
 1823 0004 00000000 		.space	4
 1824 0008 00000000 		.word	0
 1825 000c 00000000 		.word	0
 1826 0010 00000000 		.word	0
 1827 0014 00000000 		.word	0
 1828 0018 FF030000 		.word	1023
 1829 001c 00000000 		.word	0
 1830 0020 00000000 		.word	0
 1831 0024 00000000 		.word	0
 1832              		.section	.rodata.__func__.9244,"a",%progbits
 1833              		.align	2
 1834              		.set	.LANCHOR1,. + 0
 1837              	__func__.9244:
 1838 0000 63616E61 		.ascii	"canardSTM32ComputeCANTimings\000"
 1838      72645354 
 1838      4D333243 
 1838      6F6D7075 
 1838      74654341 
 1839              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1840              		.align	2
 1841              	.LC4:
 1842 0000 64726976 		.ascii	"drivers\000"
 1842      65727300 
 1843              		.section	.rodata.makeNodeInfoMessage.str1.4,"aMS",%progbits,1
 1844              		.align	2
 1845              	.LC0:
 1846 0000 63682E6F 		.ascii	"ch.octanis.oibus.mosfet-driver-module\000"
 1846      6374616E 
 1846      69732E6F 
 1846      69627573 
 1846      2E6D6F73 
 1847              		.section	.rodata.swInit.str1.4,"aMS",%progbits,1
 1848              		.align	2
 1849              	.LC1:
 1850 0000 6273315F 		.ascii	"bs1_bs2_sum > bs1\000"
 1850      6273325F 
 1850      73756D20 
 1850      3E206273 
 1850      3100
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 86


 1851 0012 0000     		.space	2
 1852              	.LC2:
 1853 0014 4C69622F 		.ascii	"Lib/libcanard/drivers/stm32/canard_stm32.h\000"
 1853      6C696263 
 1853      616E6172 
 1853      642F6472 
 1853      69766572 
 1854 003f 00       		.space	1
 1855              	.LC3:
 1856 0040 3000     		.ascii	"0\000"
 1857              		.text
 1858              	.Letext0:
 1859              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 1860              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/machine/_d
 1861              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_stdin
 1862              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1863              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1864              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/lib/gcc/arm-none-eabi/7.3.1/incl
 1865              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/lock.
 1866              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_type
 1867              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/reent
 1868              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1869              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1870              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1871              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1872              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1873              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1874              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1875              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1876              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1877              		.file 22 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1878              		.file 23 "Inc/adc.h"
 1879              		.file 24 "Inc/can.h"
 1880              		.file 25 "Inc/usart.h"
 1881              		.file 26 "Lib/libcanard/canard.h"
 1882              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/string.h"
 1883              		.file 28 "<built-in>"
 1884              		.file 29 "Inc/gpio.h"
 1885              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/assert.h"
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:18     .text.shouldAcceptTransfer:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:24     .text.shouldAcceptTransfer:0000000000000000 shouldAcceptTransfer
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:82     .text.shouldAcceptTransfer:0000000000000038 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:90     .text.readUniqueID:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:96     .text.readUniqueID:0000000000000000 readUniqueID
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:128    .text.makeNodeStatusMessage:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:134    .text.makeNodeStatusMessage:0000000000000000 makeNodeStatusMessage
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:197    .text.makeNodeStatusMessage:0000000000000054 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:202    .text.makeNodeInfoMessage:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:208    .text.makeNodeInfoMessage:0000000000000000 makeNodeInfoMessage
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:289    .text.makeNodeInfoMessage:0000000000000064 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:295    .text.getNodeInfoHandleCanard:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:301    .text.getNodeInfoHandleCanard:0000000000000000 getNodeInfoHandleCanard
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:359    .text.getNodeInfoHandleCanard:0000000000000040 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:366    .text.swInit:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:372    .text.swInit:0000000000000000 swInit
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:588    .text.swInit:000000000000010c $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1715   .text.onTransferReceived:0000000000000000 onTransferReceived
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:604    .text.sendCanard:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:610    .text.sendCanard:0000000000000000 sendCanard
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:659    .text.sendCanard:0000000000000024 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:664    .text.receiveCanard:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:670    .text.receiveCanard:0000000000000000 receiveCanard
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:717    .text.receiveCanard:000000000000002c $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:722    .text.spinCanard:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:728    .text.spinCanard:0000000000000000 spinCanard
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:800    .text.spinCanard:0000000000000060 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:809    .text.encodeParamCanard:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:815    .text.encodeParamCanard:0000000000000000 encodeParamCanard
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1017   .text.SystemClock_Config:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1024   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1117   .text.setDriver:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1124   .text.setDriver:0000000000000000 setDriver
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1165   .text.main:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1172   .text.main:0000000000000000 main
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1420   .text.main:0000000000000158 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1434   .text.getsetHandleCanard:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1441   .text.getsetHandleCanard:0000000000000000 getsetHandleCanard
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1699   .text.getsetHandleCanard:0000000000000140 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1709   .text.onTransferReceived:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1770   .text.Error_Handler:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1777   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1790   .bss.g_canard:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1794   .bss.g_canard:0000000000000000 g_canard
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1797   .bss.g_canard_memory_pool:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1801   .bss.g_canard_memory_pool:0000000000000000 g_canard_memory_pool
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1804   .bss.spin_time.9316:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1808   .bss.spin_time.9316:0000000000000000 spin_time.9316
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1814   .bss.transfer_id.9318:0000000000000000 transfer_id.9318
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1815   .bss.transfer_id.9318:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1817   .data.parameters:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1821   .data.parameters:0000000000000000 parameters
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1833   .rodata.__func__.9244:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1837   .rodata.__func__.9244:0000000000000000 __func__.9244
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1840   .rodata.main.str1.4:0000000000000000 $d
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s 			page 88


/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1844   .rodata.makeNodeInfoMessage.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccNOIr6j.s:1848   .rodata.swInit.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
canardEncodeScalar
memset
canardRequestOrRespond
HAL_RCC_GetPCLK1Freq
__assert_func
canardSTM32Init
canardInit
canardSetLocalNodeID
canardPeekTxQueue
canardSTM32Transmit
canardPopTxQueue
canardSTM32Receive
canardHandleRxFrame
HAL_GPIO_TogglePin
canardBroadcast
strlen
memcpy
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_WritePin
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_CAN_Init
MX_USART3_UART_Init
HAL_Delay
strncmp
SystemCoreClock
canardDecodeScalar
