ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"canard.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.computeTransferIDForwardDistance,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	computeTransferIDForwardDistance:
  25              	.LFB16:
  26              		.file 1 "Lib/libcanard/canard.c"
   1:Lib/libcanard/canard.c **** /*
   2:Lib/libcanard/canard.c ****  * Copyright (c) 2016-2017 UAVCAN Team
   3:Lib/libcanard/canard.c ****  *
   4:Lib/libcanard/canard.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   5:Lib/libcanard/canard.c ****  * of this software and associated documentation files (the "Software"), to deal
   6:Lib/libcanard/canard.c ****  * in the Software without restriction, including without limitation the rights
   7:Lib/libcanard/canard.c ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   8:Lib/libcanard/canard.c ****  * copies of the Software, and to permit persons to whom the Software is
   9:Lib/libcanard/canard.c ****  * furnished to do so, subject to the following conditions:
  10:Lib/libcanard/canard.c ****  *
  11:Lib/libcanard/canard.c ****  * The above copyright notice and this permission notice shall be included in all
  12:Lib/libcanard/canard.c ****  * copies or substantial portions of the Software.
  13:Lib/libcanard/canard.c ****  *
  14:Lib/libcanard/canard.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  15:Lib/libcanard/canard.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  16:Lib/libcanard/canard.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  17:Lib/libcanard/canard.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  18:Lib/libcanard/canard.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  19:Lib/libcanard/canard.c ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  20:Lib/libcanard/canard.c ****  * SOFTWARE.
  21:Lib/libcanard/canard.c ****  *
  22:Lib/libcanard/canard.c ****  * Contributors: https://github.com/UAVCAN/libcanard/contributors
  23:Lib/libcanard/canard.c ****  *
  24:Lib/libcanard/canard.c ****  * Documentation: http://uavcan.org/Implementations/Libcanard
  25:Lib/libcanard/canard.c ****  */
  26:Lib/libcanard/canard.c **** 
  27:Lib/libcanard/canard.c **** #include "canard_internals.h"
  28:Lib/libcanard/canard.c **** #include <string.h>
  29:Lib/libcanard/canard.c **** 
  30:Lib/libcanard/canard.c **** 
  31:Lib/libcanard/canard.c **** #undef MIN
  32:Lib/libcanard/canard.c **** #undef MAX
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 2


  33:Lib/libcanard/canard.c **** #define MIN(a, b)   (((a) < (b)) ? (a) : (b))
  34:Lib/libcanard/canard.c **** #define MAX(a, b)   (((a) > (b)) ? (a) : (b))
  35:Lib/libcanard/canard.c **** 
  36:Lib/libcanard/canard.c **** 
  37:Lib/libcanard/canard.c **** #define TRANSFER_TIMEOUT_USEC                       2000000
  38:Lib/libcanard/canard.c **** 
  39:Lib/libcanard/canard.c **** #define TRANSFER_ID_BIT_LEN                         5U
  40:Lib/libcanard/canard.c **** #define ANON_MSG_DATA_TYPE_ID_BIT_LEN               2U
  41:Lib/libcanard/canard.c **** 
  42:Lib/libcanard/canard.c **** #define SOURCE_ID_FROM_ID(x)                        ((uint8_t) (((x) >> 0U)  & 0x7FU))
  43:Lib/libcanard/canard.c **** #define SERVICE_NOT_MSG_FROM_ID(x)                  ((bool)    (((x) >> 7U)  & 0x1U))
  44:Lib/libcanard/canard.c **** #define REQUEST_NOT_RESPONSE_FROM_ID(x)             ((bool)    (((x) >> 15U) & 0x1U))
  45:Lib/libcanard/canard.c **** #define DEST_ID_FROM_ID(x)                          ((uint8_t) (((x) >> 8U)  & 0x7FU))
  46:Lib/libcanard/canard.c **** #define PRIORITY_FROM_ID(x)                         ((uint8_t) (((x) >> 24U) & 0x1FU))
  47:Lib/libcanard/canard.c **** #define MSG_TYPE_FROM_ID(x)                         ((uint16_t)(((x) >> 8U)  & 0xFFFFU))
  48:Lib/libcanard/canard.c **** #define SRV_TYPE_FROM_ID(x)                         ((uint8_t) (((x) >> 16U) & 0xFFU))
  49:Lib/libcanard/canard.c **** 
  50:Lib/libcanard/canard.c **** #define MAKE_TRANSFER_DESCRIPTOR(data_type_id, transfer_type, src_node_id, dst_node_id)            
  51:Lib/libcanard/canard.c ****     (((uint32_t)(data_type_id)) | (((uint32_t)(transfer_type)) << 16U) |                           
  52:Lib/libcanard/canard.c ****     (((uint32_t)(src_node_id)) << 18U) | (((uint32_t)(dst_node_id)) << 25U))
  53:Lib/libcanard/canard.c **** 
  54:Lib/libcanard/canard.c **** #define TRANSFER_ID_FROM_TAIL_BYTE(x)               ((uint8_t)((x) & 0x1FU))
  55:Lib/libcanard/canard.c **** 
  56:Lib/libcanard/canard.c **** // The extra cast to unsigned is needed to squelch warnings from clang-tidy
  57:Lib/libcanard/canard.c **** #define IS_START_OF_TRANSFER(x)                     ((bool)(((uint32_t)(x) >> 7U) & 0x1U))
  58:Lib/libcanard/canard.c **** #define IS_END_OF_TRANSFER(x)                       ((bool)(((uint32_t)(x) >> 6U) & 0x1U))
  59:Lib/libcanard/canard.c **** #define TOGGLE_BIT(x)                               ((bool)(((uint32_t)(x) >> 5U) & 0x1U))
  60:Lib/libcanard/canard.c **** 
  61:Lib/libcanard/canard.c **** 
  62:Lib/libcanard/canard.c **** struct CanardTxQueueItem
  63:Lib/libcanard/canard.c **** {
  64:Lib/libcanard/canard.c ****     CanardTxQueueItem* next;
  65:Lib/libcanard/canard.c ****     CanardCANFrame frame;
  66:Lib/libcanard/canard.c **** };
  67:Lib/libcanard/canard.c **** 
  68:Lib/libcanard/canard.c **** 
  69:Lib/libcanard/canard.c **** /*
  70:Lib/libcanard/canard.c ****  * API functions
  71:Lib/libcanard/canard.c ****  */
  72:Lib/libcanard/canard.c **** void canardInit(CanardInstance* out_ins,
  73:Lib/libcanard/canard.c ****                 void* mem_arena,
  74:Lib/libcanard/canard.c ****                 size_t mem_arena_size,
  75:Lib/libcanard/canard.c ****                 CanardOnTransferReception on_reception,
  76:Lib/libcanard/canard.c ****                 CanardShouldAcceptTransfer should_accept,
  77:Lib/libcanard/canard.c ****                 void* user_reference)
  78:Lib/libcanard/canard.c **** {
  79:Lib/libcanard/canard.c ****     CANARD_ASSERT(out_ins != NULL);
  80:Lib/libcanard/canard.c **** 
  81:Lib/libcanard/canard.c ****     /*
  82:Lib/libcanard/canard.c ****      * Checking memory layout.
  83:Lib/libcanard/canard.c ****      * This condition is supposed to be true for all 32-bit and smaller platforms.
  84:Lib/libcanard/canard.c ****      * If your application fails here, make sure it's not built in 64-bit mode.
  85:Lib/libcanard/canard.c ****      * Refer to the design documentation for more info.
  86:Lib/libcanard/canard.c ****      */
  87:Lib/libcanard/canard.c ****     CANARD_ASSERT(CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE >= 6);
  88:Lib/libcanard/canard.c **** 
  89:Lib/libcanard/canard.c ****     memset(out_ins, 0, sizeof(*out_ins));
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 3


  90:Lib/libcanard/canard.c **** 
  91:Lib/libcanard/canard.c ****     out_ins->node_id = CANARD_BROADCAST_NODE_ID;
  92:Lib/libcanard/canard.c ****     out_ins->on_reception = on_reception;
  93:Lib/libcanard/canard.c ****     out_ins->should_accept = should_accept;
  94:Lib/libcanard/canard.c ****     out_ins->rx_states = NULL;
  95:Lib/libcanard/canard.c ****     out_ins->tx_queue = NULL;
  96:Lib/libcanard/canard.c ****     out_ins->user_reference = user_reference;
  97:Lib/libcanard/canard.c **** 
  98:Lib/libcanard/canard.c ****     size_t pool_capacity = mem_arena_size / CANARD_MEM_BLOCK_SIZE;
  99:Lib/libcanard/canard.c ****     if (pool_capacity > 0xFFFFU)
 100:Lib/libcanard/canard.c ****     {
 101:Lib/libcanard/canard.c ****         pool_capacity = 0xFFFFU;
 102:Lib/libcanard/canard.c ****     }
 103:Lib/libcanard/canard.c **** 
 104:Lib/libcanard/canard.c ****     initPoolAllocator(&out_ins->allocator, mem_arena, (uint16_t)pool_capacity);
 105:Lib/libcanard/canard.c **** }
 106:Lib/libcanard/canard.c **** 
 107:Lib/libcanard/canard.c **** void* canardGetUserReference(CanardInstance* ins)
 108:Lib/libcanard/canard.c **** {
 109:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 110:Lib/libcanard/canard.c ****     return ins->user_reference;
 111:Lib/libcanard/canard.c **** }
 112:Lib/libcanard/canard.c **** 
 113:Lib/libcanard/canard.c **** void canardSetLocalNodeID(CanardInstance* ins, uint8_t self_node_id)
 114:Lib/libcanard/canard.c **** {
 115:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 116:Lib/libcanard/canard.c **** 
 117:Lib/libcanard/canard.c ****     if ((ins->node_id == CANARD_BROADCAST_NODE_ID) &&
 118:Lib/libcanard/canard.c ****         (self_node_id >= CANARD_MIN_NODE_ID) &&
 119:Lib/libcanard/canard.c ****         (self_node_id <= CANARD_MAX_NODE_ID))
 120:Lib/libcanard/canard.c ****     {
 121:Lib/libcanard/canard.c ****         ins->node_id = self_node_id;
 122:Lib/libcanard/canard.c ****     }
 123:Lib/libcanard/canard.c ****     else
 124:Lib/libcanard/canard.c ****     {
 125:Lib/libcanard/canard.c ****         CANARD_ASSERT(false);
 126:Lib/libcanard/canard.c ****     }
 127:Lib/libcanard/canard.c **** }
 128:Lib/libcanard/canard.c **** 
 129:Lib/libcanard/canard.c **** uint8_t canardGetLocalNodeID(const CanardInstance* ins)
 130:Lib/libcanard/canard.c **** {
 131:Lib/libcanard/canard.c ****     return ins->node_id;
 132:Lib/libcanard/canard.c **** }
 133:Lib/libcanard/canard.c **** 
 134:Lib/libcanard/canard.c **** int16_t canardBroadcast(CanardInstance* ins,
 135:Lib/libcanard/canard.c ****                         uint64_t data_type_signature,
 136:Lib/libcanard/canard.c ****                         uint16_t data_type_id,
 137:Lib/libcanard/canard.c ****                         uint8_t* inout_transfer_id,
 138:Lib/libcanard/canard.c ****                         uint8_t priority,
 139:Lib/libcanard/canard.c ****                         const void* payload,
 140:Lib/libcanard/canard.c ****                         uint16_t payload_len)
 141:Lib/libcanard/canard.c **** {
 142:Lib/libcanard/canard.c ****     if (payload == NULL && payload_len > 0)
 143:Lib/libcanard/canard.c ****     {
 144:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 145:Lib/libcanard/canard.c ****     }
 146:Lib/libcanard/canard.c ****     if (priority > CANARD_TRANSFER_PRIORITY_LOWEST)
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 4


 147:Lib/libcanard/canard.c ****     {
 148:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 149:Lib/libcanard/canard.c ****     }
 150:Lib/libcanard/canard.c **** 
 151:Lib/libcanard/canard.c ****     uint32_t can_id = 0;
 152:Lib/libcanard/canard.c ****     uint16_t crc = 0xFFFFU;
 153:Lib/libcanard/canard.c **** 
 154:Lib/libcanard/canard.c ****     if (canardGetLocalNodeID(ins) == 0)
 155:Lib/libcanard/canard.c ****     {
 156:Lib/libcanard/canard.c ****         if (payload_len > 7)
 157:Lib/libcanard/canard.c ****         {
 158:Lib/libcanard/canard.c ****             return -CANARD_ERROR_NODE_ID_NOT_SET;
 159:Lib/libcanard/canard.c ****         }
 160:Lib/libcanard/canard.c **** 
 161:Lib/libcanard/canard.c ****         static const uint16_t DTIDMask = (1U << ANON_MSG_DATA_TYPE_ID_BIT_LEN) - 1U;
 162:Lib/libcanard/canard.c **** 
 163:Lib/libcanard/canard.c ****         if ((data_type_id & DTIDMask) != data_type_id)
 164:Lib/libcanard/canard.c ****         {
 165:Lib/libcanard/canard.c ****             return -CANARD_ERROR_INVALID_ARGUMENT;
 166:Lib/libcanard/canard.c ****         }
 167:Lib/libcanard/canard.c **** 
 168:Lib/libcanard/canard.c ****         // anonymous transfer, random discriminator
 169:Lib/libcanard/canard.c ****         const uint16_t discriminator = (uint16_t)((crcAdd(0xFFFFU, payload, payload_len)) & 0x7FFEU
 170:Lib/libcanard/canard.c ****         can_id = ((uint32_t) priority << 24U) | ((uint32_t) discriminator << 9U) |
 171:Lib/libcanard/canard.c ****                  ((uint32_t) (data_type_id & DTIDMask) << 8U) | (uint32_t) canardGetLocalNodeID(ins
 172:Lib/libcanard/canard.c ****     }
 173:Lib/libcanard/canard.c ****     else
 174:Lib/libcanard/canard.c ****     {
 175:Lib/libcanard/canard.c ****         can_id = ((uint32_t) priority << 24U) | ((uint32_t) data_type_id << 8U) | (uint32_t) canard
 176:Lib/libcanard/canard.c **** 
 177:Lib/libcanard/canard.c ****         if (payload_len > 7)
 178:Lib/libcanard/canard.c ****         {
 179:Lib/libcanard/canard.c ****             crc = crcAddSignature(crc, data_type_signature);
 180:Lib/libcanard/canard.c ****             crc = crcAdd(crc, payload, payload_len);
 181:Lib/libcanard/canard.c ****         }
 182:Lib/libcanard/canard.c ****     }
 183:Lib/libcanard/canard.c **** 
 184:Lib/libcanard/canard.c ****     const int16_t result = enqueueTxFrames(ins, can_id, inout_transfer_id, crc, payload, payload_le
 185:Lib/libcanard/canard.c **** 
 186:Lib/libcanard/canard.c ****     incrementTransferID(inout_transfer_id);
 187:Lib/libcanard/canard.c **** 
 188:Lib/libcanard/canard.c ****     return result;
 189:Lib/libcanard/canard.c **** }
 190:Lib/libcanard/canard.c **** 
 191:Lib/libcanard/canard.c **** int16_t canardRequestOrRespond(CanardInstance* ins,
 192:Lib/libcanard/canard.c ****                                uint8_t destination_node_id,
 193:Lib/libcanard/canard.c ****                                uint64_t data_type_signature,
 194:Lib/libcanard/canard.c ****                                uint8_t data_type_id,
 195:Lib/libcanard/canard.c ****                                uint8_t* inout_transfer_id,
 196:Lib/libcanard/canard.c ****                                uint8_t priority,
 197:Lib/libcanard/canard.c ****                                CanardRequestResponse kind,
 198:Lib/libcanard/canard.c ****                                const void* payload,
 199:Lib/libcanard/canard.c ****                                uint16_t payload_len)
 200:Lib/libcanard/canard.c **** {
 201:Lib/libcanard/canard.c ****     if (payload == NULL && payload_len > 0)
 202:Lib/libcanard/canard.c ****     {
 203:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 5


 204:Lib/libcanard/canard.c ****     }
 205:Lib/libcanard/canard.c ****     if (priority > CANARD_TRANSFER_PRIORITY_LOWEST)
 206:Lib/libcanard/canard.c ****     {
 207:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 208:Lib/libcanard/canard.c ****     }
 209:Lib/libcanard/canard.c ****     if (canardGetLocalNodeID(ins) == 0)
 210:Lib/libcanard/canard.c ****     {
 211:Lib/libcanard/canard.c ****         return -CANARD_ERROR_NODE_ID_NOT_SET;
 212:Lib/libcanard/canard.c ****     }
 213:Lib/libcanard/canard.c **** 
 214:Lib/libcanard/canard.c ****     const uint32_t can_id = ((uint32_t) priority << 24U) | ((uint32_t) data_type_id << 16U) |
 215:Lib/libcanard/canard.c ****                             ((uint32_t) kind << 15U) | ((uint32_t) destination_node_id << 8U) |
 216:Lib/libcanard/canard.c ****                             (1U << 7U) | (uint32_t) canardGetLocalNodeID(ins);
 217:Lib/libcanard/canard.c ****     uint16_t crc = 0xFFFFU;
 218:Lib/libcanard/canard.c **** 
 219:Lib/libcanard/canard.c ****     if (payload_len > 7)
 220:Lib/libcanard/canard.c ****     {
 221:Lib/libcanard/canard.c ****         crc = crcAddSignature(crc, data_type_signature);
 222:Lib/libcanard/canard.c ****         crc = crcAdd(crc, payload, payload_len);
 223:Lib/libcanard/canard.c ****     }
 224:Lib/libcanard/canard.c **** 
 225:Lib/libcanard/canard.c ****     const int16_t result = enqueueTxFrames(ins, can_id, inout_transfer_id, crc, payload, payload_le
 226:Lib/libcanard/canard.c **** 
 227:Lib/libcanard/canard.c ****     if (kind == CanardRequest)                      // Response Transfer ID must not be altered
 228:Lib/libcanard/canard.c ****     {
 229:Lib/libcanard/canard.c ****         incrementTransferID(inout_transfer_id);
 230:Lib/libcanard/canard.c ****     }
 231:Lib/libcanard/canard.c **** 
 232:Lib/libcanard/canard.c ****     return result;
 233:Lib/libcanard/canard.c **** }
 234:Lib/libcanard/canard.c **** 
 235:Lib/libcanard/canard.c **** const CanardCANFrame* canardPeekTxQueue(const CanardInstance* ins)
 236:Lib/libcanard/canard.c **** {
 237:Lib/libcanard/canard.c ****     if (ins->tx_queue == NULL)
 238:Lib/libcanard/canard.c ****     {
 239:Lib/libcanard/canard.c ****         return NULL;
 240:Lib/libcanard/canard.c ****     }
 241:Lib/libcanard/canard.c ****     return &ins->tx_queue->frame;
 242:Lib/libcanard/canard.c **** }
 243:Lib/libcanard/canard.c **** 
 244:Lib/libcanard/canard.c **** void canardPopTxQueue(CanardInstance* ins)
 245:Lib/libcanard/canard.c **** {
 246:Lib/libcanard/canard.c ****     CanardTxQueueItem* item = ins->tx_queue;
 247:Lib/libcanard/canard.c ****     ins->tx_queue = item->next;
 248:Lib/libcanard/canard.c ****     freeBlock(&ins->allocator, item);
 249:Lib/libcanard/canard.c **** }
 250:Lib/libcanard/canard.c **** 
 251:Lib/libcanard/canard.c **** void canardHandleRxFrame(CanardInstance* ins, const CanardCANFrame* frame, uint64_t timestamp_usec)
 252:Lib/libcanard/canard.c **** {
 253:Lib/libcanard/canard.c ****     const CanardTransferType transfer_type = extractTransferType(frame->id);
 254:Lib/libcanard/canard.c ****     const uint8_t destination_node_id = (transfer_type == CanardTransferTypeBroadcast) ?
 255:Lib/libcanard/canard.c ****                                         (uint8_t)CANARD_BROADCAST_NODE_ID :
 256:Lib/libcanard/canard.c ****                                         DEST_ID_FROM_ID(frame->id);
 257:Lib/libcanard/canard.c **** 
 258:Lib/libcanard/canard.c ****     // TODO: This function should maintain statistics of transfer errors and such.
 259:Lib/libcanard/canard.c **** 
 260:Lib/libcanard/canard.c ****     if ((frame->id & CANARD_CAN_FRAME_EFF) == 0 ||
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 6


 261:Lib/libcanard/canard.c ****         (frame->id & CANARD_CAN_FRAME_RTR) != 0 ||
 262:Lib/libcanard/canard.c ****         (frame->id & CANARD_CAN_FRAME_ERR) != 0 ||
 263:Lib/libcanard/canard.c ****         (frame->data_len < 1))
 264:Lib/libcanard/canard.c ****     {
 265:Lib/libcanard/canard.c ****         return;     // Unsupported frame, not UAVCAN - ignore
 266:Lib/libcanard/canard.c ****     }
 267:Lib/libcanard/canard.c **** 
 268:Lib/libcanard/canard.c ****     if (transfer_type != CanardTransferTypeBroadcast &&
 269:Lib/libcanard/canard.c ****         destination_node_id != canardGetLocalNodeID(ins))
 270:Lib/libcanard/canard.c ****     {
 271:Lib/libcanard/canard.c ****         return;     // Address mismatch
 272:Lib/libcanard/canard.c ****     }
 273:Lib/libcanard/canard.c **** 
 274:Lib/libcanard/canard.c ****     const uint8_t priority = PRIORITY_FROM_ID(frame->id);
 275:Lib/libcanard/canard.c ****     const uint8_t source_node_id = SOURCE_ID_FROM_ID(frame->id);
 276:Lib/libcanard/canard.c ****     const uint16_t data_type_id = extractDataType(frame->id);
 277:Lib/libcanard/canard.c ****     const uint32_t transfer_descriptor =
 278:Lib/libcanard/canard.c ****             MAKE_TRANSFER_DESCRIPTOR(data_type_id, transfer_type, source_node_id, destination_node_
 279:Lib/libcanard/canard.c **** 
 280:Lib/libcanard/canard.c ****     const uint8_t tail_byte = frame->data[frame->data_len - 1];
 281:Lib/libcanard/canard.c **** 
 282:Lib/libcanard/canard.c ****     CanardRxState* rx_state = NULL;
 283:Lib/libcanard/canard.c **** 
 284:Lib/libcanard/canard.c ****     if (IS_START_OF_TRANSFER(tail_byte))
 285:Lib/libcanard/canard.c ****     {
 286:Lib/libcanard/canard.c ****         uint64_t data_type_signature = 0;
 287:Lib/libcanard/canard.c **** 
 288:Lib/libcanard/canard.c ****         if (ins->should_accept(ins, &data_type_signature, data_type_id, transfer_type, source_node_
 289:Lib/libcanard/canard.c ****         {
 290:Lib/libcanard/canard.c ****             rx_state = traverseRxStates(ins, transfer_descriptor);
 291:Lib/libcanard/canard.c **** 
 292:Lib/libcanard/canard.c ****             if(rx_state == NULL)
 293:Lib/libcanard/canard.c ****             {
 294:Lib/libcanard/canard.c ****                 return; // No allocator room for this frame
 295:Lib/libcanard/canard.c ****             }
 296:Lib/libcanard/canard.c **** 
 297:Lib/libcanard/canard.c ****             rx_state->calculated_crc = crcAddSignature(0xFFFFU, data_type_signature);
 298:Lib/libcanard/canard.c ****         }
 299:Lib/libcanard/canard.c ****         else
 300:Lib/libcanard/canard.c ****         {
 301:Lib/libcanard/canard.c ****             return;     // The application doesn't want this transfer
 302:Lib/libcanard/canard.c ****         }
 303:Lib/libcanard/canard.c ****     }
 304:Lib/libcanard/canard.c ****     else
 305:Lib/libcanard/canard.c ****     {
 306:Lib/libcanard/canard.c ****         rx_state = findRxState(ins->rx_states, transfer_descriptor);
 307:Lib/libcanard/canard.c **** 
 308:Lib/libcanard/canard.c ****         if (rx_state == NULL)
 309:Lib/libcanard/canard.c ****         {
 310:Lib/libcanard/canard.c ****             return;
 311:Lib/libcanard/canard.c ****         }
 312:Lib/libcanard/canard.c ****     }
 313:Lib/libcanard/canard.c **** 
 314:Lib/libcanard/canard.c ****     CANARD_ASSERT(rx_state != NULL);    // All paths that lead to NULL should be terminated with re
 315:Lib/libcanard/canard.c **** 
 316:Lib/libcanard/canard.c ****     // Resolving the state flags:
 317:Lib/libcanard/canard.c ****     const bool not_initialized = rx_state->timestamp_usec == 0;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 7


 318:Lib/libcanard/canard.c ****     const bool tid_timed_out = (timestamp_usec - rx_state->timestamp_usec) > TRANSFER_TIMEOUT_USEC;
 319:Lib/libcanard/canard.c ****     const bool first_frame = IS_START_OF_TRANSFER(tail_byte);
 320:Lib/libcanard/canard.c ****     const bool not_previous_tid =
 321:Lib/libcanard/canard.c ****         computeTransferIDForwardDistance((uint8_t) rx_state->transfer_id, TRANSFER_ID_FROM_TAIL_BYT
 322:Lib/libcanard/canard.c **** 
 323:Lib/libcanard/canard.c ****     const bool need_restart =
 324:Lib/libcanard/canard.c ****             (not_initialized) ||
 325:Lib/libcanard/canard.c ****             (tid_timed_out) ||
 326:Lib/libcanard/canard.c ****             (first_frame && not_previous_tid);
 327:Lib/libcanard/canard.c **** 
 328:Lib/libcanard/canard.c ****     if (need_restart)
 329:Lib/libcanard/canard.c ****     {
 330:Lib/libcanard/canard.c ****         rx_state->transfer_id = TRANSFER_ID_FROM_TAIL_BYTE(tail_byte);
 331:Lib/libcanard/canard.c ****         rx_state->next_toggle = 0;
 332:Lib/libcanard/canard.c ****         releaseStatePayload(ins, rx_state);
 333:Lib/libcanard/canard.c ****         if (!IS_START_OF_TRANSFER(tail_byte)) // missed the first frame
 334:Lib/libcanard/canard.c ****         {
 335:Lib/libcanard/canard.c ****             rx_state->transfer_id++;
 336:Lib/libcanard/canard.c ****             return;
 337:Lib/libcanard/canard.c ****         }
 338:Lib/libcanard/canard.c ****     }
 339:Lib/libcanard/canard.c **** 
 340:Lib/libcanard/canard.c ****     if (IS_START_OF_TRANSFER(tail_byte) && IS_END_OF_TRANSFER(tail_byte)) // single frame transfer
 341:Lib/libcanard/canard.c ****     {
 342:Lib/libcanard/canard.c ****         rx_state->timestamp_usec = timestamp_usec;
 343:Lib/libcanard/canard.c ****         CanardRxTransfer rx_transfer = {
 344:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 345:Lib/libcanard/canard.c ****             .payload_head = frame->data,
 346:Lib/libcanard/canard.c ****             .payload_len = (uint8_t)(frame->data_len - 1U),
 347:Lib/libcanard/canard.c ****             .data_type_id = data_type_id,
 348:Lib/libcanard/canard.c ****             .transfer_type = transfer_type,
 349:Lib/libcanard/canard.c ****             .transfer_id = TRANSFER_ID_FROM_TAIL_BYTE(tail_byte),
 350:Lib/libcanard/canard.c ****             .priority = priority,
 351:Lib/libcanard/canard.c ****             .source_node_id = source_node_id
 352:Lib/libcanard/canard.c ****         };
 353:Lib/libcanard/canard.c **** 
 354:Lib/libcanard/canard.c ****         ins->on_reception(ins, &rx_transfer);
 355:Lib/libcanard/canard.c **** 
 356:Lib/libcanard/canard.c ****         prepareForNextTransfer(rx_state);
 357:Lib/libcanard/canard.c ****         return;
 358:Lib/libcanard/canard.c ****     }
 359:Lib/libcanard/canard.c **** 
 360:Lib/libcanard/canard.c ****     if (TOGGLE_BIT(tail_byte) != rx_state->next_toggle)
 361:Lib/libcanard/canard.c ****     {
 362:Lib/libcanard/canard.c ****         return; // wrong toggle
 363:Lib/libcanard/canard.c ****     }
 364:Lib/libcanard/canard.c **** 
 365:Lib/libcanard/canard.c ****     if (TRANSFER_ID_FROM_TAIL_BYTE(tail_byte) != rx_state->transfer_id)
 366:Lib/libcanard/canard.c ****     {
 367:Lib/libcanard/canard.c ****         return; // unexpected tid
 368:Lib/libcanard/canard.c ****     }
 369:Lib/libcanard/canard.c **** 
 370:Lib/libcanard/canard.c ****     if (IS_START_OF_TRANSFER(tail_byte) && !IS_END_OF_TRANSFER(tail_byte))      // Beginning of mul
 371:Lib/libcanard/canard.c ****     {
 372:Lib/libcanard/canard.c ****         if (frame->data_len <= 3)
 373:Lib/libcanard/canard.c ****         {
 374:Lib/libcanard/canard.c ****             return;     // Not enough data
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 8


 375:Lib/libcanard/canard.c ****         }
 376:Lib/libcanard/canard.c **** 
 377:Lib/libcanard/canard.c ****         // take off the crc and store the payload
 378:Lib/libcanard/canard.c ****         rx_state->timestamp_usec = timestamp_usec;
 379:Lib/libcanard/canard.c ****         const int16_t ret = bufferBlockPushBytes(&ins->allocator, rx_state, frame->data + 2,
 380:Lib/libcanard/canard.c ****                                                  (uint8_t) (frame->data_len - 3));
 381:Lib/libcanard/canard.c ****         if (ret < 0)
 382:Lib/libcanard/canard.c ****         {
 383:Lib/libcanard/canard.c ****             releaseStatePayload(ins, rx_state);
 384:Lib/libcanard/canard.c ****             prepareForNextTransfer(rx_state);
 385:Lib/libcanard/canard.c ****             return;
 386:Lib/libcanard/canard.c ****         }
 387:Lib/libcanard/canard.c ****         rx_state->payload_crc = (uint16_t)(((uint16_t) frame->data[0]) | (uint16_t)((uint16_t) fram
 388:Lib/libcanard/canard.c ****         rx_state->calculated_crc = crcAdd((uint16_t)rx_state->calculated_crc,
 389:Lib/libcanard/canard.c ****                                           frame->data + 2, (uint8_t)(frame->data_len - 3));
 390:Lib/libcanard/canard.c ****     }
 391:Lib/libcanard/canard.c ****     else if (!IS_START_OF_TRANSFER(tail_byte) && !IS_END_OF_TRANSFER(tail_byte))    // Middle of a 
 392:Lib/libcanard/canard.c ****     {
 393:Lib/libcanard/canard.c ****         const int16_t ret = bufferBlockPushBytes(&ins->allocator, rx_state, frame->data,
 394:Lib/libcanard/canard.c ****                                                  (uint8_t) (frame->data_len - 1));
 395:Lib/libcanard/canard.c ****         if (ret < 0)
 396:Lib/libcanard/canard.c ****         {
 397:Lib/libcanard/canard.c ****             releaseStatePayload(ins, rx_state);
 398:Lib/libcanard/canard.c ****             prepareForNextTransfer(rx_state);
 399:Lib/libcanard/canard.c ****             return;
 400:Lib/libcanard/canard.c ****         }
 401:Lib/libcanard/canard.c ****         rx_state->calculated_crc = crcAdd((uint16_t)rx_state->calculated_crc,
 402:Lib/libcanard/canard.c ****                                           frame->data, (uint8_t)(frame->data_len - 1));
 403:Lib/libcanard/canard.c ****     }
 404:Lib/libcanard/canard.c ****     else                                                                            // End of a mul
 405:Lib/libcanard/canard.c ****     {
 406:Lib/libcanard/canard.c ****         const uint8_t frame_payload_size = (uint8_t)(frame->data_len - 1);
 407:Lib/libcanard/canard.c **** 
 408:Lib/libcanard/canard.c ****         uint8_t tail_offset = 0;
 409:Lib/libcanard/canard.c **** 
 410:Lib/libcanard/canard.c ****         if (rx_state->payload_len < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE)
 411:Lib/libcanard/canard.c ****         {
 412:Lib/libcanard/canard.c ****             // Copy the beginning of the frame into the head, point the tail pointer to the remaind
 413:Lib/libcanard/canard.c ****             for (size_t i = rx_state->payload_len;
 414:Lib/libcanard/canard.c ****                  (i < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE) && (tail_offset < frame_payload_size)
 415:Lib/libcanard/canard.c ****                  i++, tail_offset++)
 416:Lib/libcanard/canard.c ****             {
 417:Lib/libcanard/canard.c ****                 rx_state->buffer_head[i] = frame->data[tail_offset];
 418:Lib/libcanard/canard.c ****             }
 419:Lib/libcanard/canard.c ****         }
 420:Lib/libcanard/canard.c ****         else
 421:Lib/libcanard/canard.c ****         {
 422:Lib/libcanard/canard.c ****             // Like above, except that the beginning goes into the last block of the storage
 423:Lib/libcanard/canard.c ****             CanardBufferBlock* block = rx_state->buffer_blocks;
 424:Lib/libcanard/canard.c ****             if (block != NULL)          // If there's no middle, that's fine, we'll use only head a
 425:Lib/libcanard/canard.c ****             {
 426:Lib/libcanard/canard.c ****                 size_t offset = CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE;    // Payload offset of the
 427:Lib/libcanard/canard.c ****                 while (block->next != NULL)
 428:Lib/libcanard/canard.c ****                 {
 429:Lib/libcanard/canard.c ****                     block = block->next;
 430:Lib/libcanard/canard.c ****                     offset += CANARD_BUFFER_BLOCK_DATA_SIZE;
 431:Lib/libcanard/canard.c ****                 }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 9


 432:Lib/libcanard/canard.c ****                 CANARD_ASSERT(block != NULL);
 433:Lib/libcanard/canard.c **** 
 434:Lib/libcanard/canard.c ****                 const size_t offset_within_block = rx_state->payload_len - offset;
 435:Lib/libcanard/canard.c ****                 CANARD_ASSERT(offset_within_block < CANARD_BUFFER_BLOCK_DATA_SIZE);
 436:Lib/libcanard/canard.c **** 
 437:Lib/libcanard/canard.c ****                 for (size_t i = offset_within_block;
 438:Lib/libcanard/canard.c ****                      (i < CANARD_BUFFER_BLOCK_DATA_SIZE) && (tail_offset < frame_payload_size);
 439:Lib/libcanard/canard.c ****                      i++, tail_offset++)
 440:Lib/libcanard/canard.c ****                 {
 441:Lib/libcanard/canard.c ****                     block->data[i] = frame->data[tail_offset];
 442:Lib/libcanard/canard.c ****                 }
 443:Lib/libcanard/canard.c ****             }
 444:Lib/libcanard/canard.c ****         }
 445:Lib/libcanard/canard.c **** 
 446:Lib/libcanard/canard.c ****         CanardRxTransfer rx_transfer = {
 447:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 448:Lib/libcanard/canard.c ****             .payload_head = rx_state->buffer_head,
 449:Lib/libcanard/canard.c ****             .payload_middle = rx_state->buffer_blocks,
 450:Lib/libcanard/canard.c ****             .payload_tail = (tail_offset >= frame_payload_size) ? NULL : (&frame->data[tail_offset]
 451:Lib/libcanard/canard.c ****             .payload_len = (uint16_t)(rx_state->payload_len + frame_payload_size),
 452:Lib/libcanard/canard.c ****             .data_type_id = data_type_id,
 453:Lib/libcanard/canard.c ****             .transfer_type = transfer_type,
 454:Lib/libcanard/canard.c ****             .transfer_id = TRANSFER_ID_FROM_TAIL_BYTE(tail_byte),
 455:Lib/libcanard/canard.c ****             .priority = priority,
 456:Lib/libcanard/canard.c ****             .source_node_id = source_node_id
 457:Lib/libcanard/canard.c ****         };
 458:Lib/libcanard/canard.c **** 
 459:Lib/libcanard/canard.c ****         rx_state->buffer_blocks = NULL;     // Block list ownership has been transferred to rx_tran
 460:Lib/libcanard/canard.c **** 
 461:Lib/libcanard/canard.c ****         // CRC validation
 462:Lib/libcanard/canard.c ****         rx_state->calculated_crc = crcAdd((uint16_t)rx_state->calculated_crc, frame->data, frame->d
 463:Lib/libcanard/canard.c ****         if (rx_state->calculated_crc == rx_state->payload_crc)
 464:Lib/libcanard/canard.c ****         {
 465:Lib/libcanard/canard.c ****             ins->on_reception(ins, &rx_transfer);
 466:Lib/libcanard/canard.c ****         }
 467:Lib/libcanard/canard.c **** 
 468:Lib/libcanard/canard.c ****         // Making sure the payload is released even if the application didn't bother with it
 469:Lib/libcanard/canard.c ****         canardReleaseRxTransferPayload(ins, &rx_transfer);
 470:Lib/libcanard/canard.c ****         prepareForNextTransfer(rx_state);
 471:Lib/libcanard/canard.c ****         return;
 472:Lib/libcanard/canard.c ****     }
 473:Lib/libcanard/canard.c **** 
 474:Lib/libcanard/canard.c ****     rx_state->next_toggle = rx_state->next_toggle ? 0 : 1;
 475:Lib/libcanard/canard.c **** }
 476:Lib/libcanard/canard.c **** 
 477:Lib/libcanard/canard.c **** void canardCleanupStaleTransfers(CanardInstance* ins, uint64_t current_time_usec)
 478:Lib/libcanard/canard.c **** {
 479:Lib/libcanard/canard.c ****     CanardRxState* prev = ins->rx_states, * state = ins->rx_states;
 480:Lib/libcanard/canard.c **** 
 481:Lib/libcanard/canard.c ****     while (state != NULL)
 482:Lib/libcanard/canard.c ****     {
 483:Lib/libcanard/canard.c ****         if ((current_time_usec - state->timestamp_usec) > TRANSFER_TIMEOUT_USEC)
 484:Lib/libcanard/canard.c ****         {
 485:Lib/libcanard/canard.c ****             if (state == ins->rx_states)
 486:Lib/libcanard/canard.c ****             {
 487:Lib/libcanard/canard.c ****                 releaseStatePayload(ins, state);
 488:Lib/libcanard/canard.c ****                 ins->rx_states = ins->rx_states->next;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 10


 489:Lib/libcanard/canard.c ****                 freeBlock(&ins->allocator, state);
 490:Lib/libcanard/canard.c ****                 state = ins->rx_states;
 491:Lib/libcanard/canard.c ****                 prev = state;
 492:Lib/libcanard/canard.c ****             }
 493:Lib/libcanard/canard.c ****             else
 494:Lib/libcanard/canard.c ****             {
 495:Lib/libcanard/canard.c ****                 releaseStatePayload(ins, state);
 496:Lib/libcanard/canard.c ****                 prev->next = state->next;
 497:Lib/libcanard/canard.c ****                 freeBlock(&ins->allocator, state);
 498:Lib/libcanard/canard.c ****                 state = prev->next;
 499:Lib/libcanard/canard.c ****             }
 500:Lib/libcanard/canard.c ****         }
 501:Lib/libcanard/canard.c ****         else
 502:Lib/libcanard/canard.c ****         {
 503:Lib/libcanard/canard.c ****             prev = state;
 504:Lib/libcanard/canard.c ****             state = state->next;
 505:Lib/libcanard/canard.c ****         }
 506:Lib/libcanard/canard.c ****     }
 507:Lib/libcanard/canard.c **** }
 508:Lib/libcanard/canard.c **** 
 509:Lib/libcanard/canard.c **** int16_t canardDecodeScalar(const CanardRxTransfer* transfer,
 510:Lib/libcanard/canard.c ****                            uint32_t bit_offset,
 511:Lib/libcanard/canard.c ****                            uint8_t bit_length,
 512:Lib/libcanard/canard.c ****                            bool value_is_signed,
 513:Lib/libcanard/canard.c ****                            void* out_value)
 514:Lib/libcanard/canard.c **** {
 515:Lib/libcanard/canard.c ****     if (transfer == NULL || out_value == NULL)
 516:Lib/libcanard/canard.c ****     {
 517:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 518:Lib/libcanard/canard.c ****     }
 519:Lib/libcanard/canard.c **** 
 520:Lib/libcanard/canard.c ****     if (bit_length < 1 || bit_length > 64)
 521:Lib/libcanard/canard.c ****     {
 522:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 523:Lib/libcanard/canard.c ****     }
 524:Lib/libcanard/canard.c **** 
 525:Lib/libcanard/canard.c ****     if (bit_length == 1 && value_is_signed)
 526:Lib/libcanard/canard.c ****     {
 527:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 528:Lib/libcanard/canard.c ****     }
 529:Lib/libcanard/canard.c **** 
 530:Lib/libcanard/canard.c ****     /*
 531:Lib/libcanard/canard.c ****      * Reading raw bytes into the temporary storage.
 532:Lib/libcanard/canard.c ****      * Luckily, C guarantees that every element is aligned at the beginning (lower address) of the 
 533:Lib/libcanard/canard.c ****      */
 534:Lib/libcanard/canard.c ****     union
 535:Lib/libcanard/canard.c ****     {
 536:Lib/libcanard/canard.c ****         bool     boolean;       ///< sizeof(bool) is implementation-defined, so it has to be handle
 537:Lib/libcanard/canard.c ****         uint8_t  u8;            ///< Also char
 538:Lib/libcanard/canard.c ****         int8_t   s8;
 539:Lib/libcanard/canard.c ****         uint16_t u16;
 540:Lib/libcanard/canard.c ****         int16_t  s16;
 541:Lib/libcanard/canard.c ****         uint32_t u32;
 542:Lib/libcanard/canard.c ****         int32_t  s32;           ///< Also float, possibly double, possibly long double (depends on 
 543:Lib/libcanard/canard.c ****         uint64_t u64;
 544:Lib/libcanard/canard.c ****         int64_t  s64;           ///< Also double, possibly float, possibly long double (depends on 
 545:Lib/libcanard/canard.c ****         uint8_t bytes[8];
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 11


 546:Lib/libcanard/canard.c ****     } storage;
 547:Lib/libcanard/canard.c **** 
 548:Lib/libcanard/canard.c ****     memset(&storage, 0, sizeof(storage));   // This is important
 549:Lib/libcanard/canard.c **** 
 550:Lib/libcanard/canard.c ****     const int16_t result = descatterTransferPayload(transfer, bit_offset, bit_length, &storage.byte
 551:Lib/libcanard/canard.c ****     if (result <= 0)
 552:Lib/libcanard/canard.c ****     {
 553:Lib/libcanard/canard.c ****         return result;
 554:Lib/libcanard/canard.c ****     }
 555:Lib/libcanard/canard.c **** 
 556:Lib/libcanard/canard.c ****     CANARD_ASSERT((result > 0) && (result <= 64) && (result <= bit_length));
 557:Lib/libcanard/canard.c **** 
 558:Lib/libcanard/canard.c ****     /*
 559:Lib/libcanard/canard.c ****      * The bit copy algorithm assumes that more significant bits have lower index, so we need to sh
 560:Lib/libcanard/canard.c ****      * Extra most significant bits will be filled with zeroes, which is fine.
 561:Lib/libcanard/canard.c ****      * Coverity Scan mistakenly believes that the array may be overrun if bit_length == 64; however
 562:Lib/libcanard/canard.c ****      * not be taken if bit_length == 64, because 64 % 8 == 0.
 563:Lib/libcanard/canard.c ****      */
 564:Lib/libcanard/canard.c ****     if ((bit_length % 8) != 0)
 565:Lib/libcanard/canard.c ****     {
 566:Lib/libcanard/canard.c ****         // coverity[overrun-local]
 567:Lib/libcanard/canard.c ****         storage.bytes[bit_length / 8U] = (uint8_t)(storage.bytes[bit_length / 8U] >> ((8U - (bit_le
 568:Lib/libcanard/canard.c ****     }
 569:Lib/libcanard/canard.c **** 
 570:Lib/libcanard/canard.c ****     /*
 571:Lib/libcanard/canard.c ****      * Determining the closest standard byte length - this will be needed for byte reordering and s
 572:Lib/libcanard/canard.c ****      */
 573:Lib/libcanard/canard.c ****     uint8_t std_byte_length = 0;
 574:Lib/libcanard/canard.c ****     if      (bit_length == 1)   { std_byte_length = sizeof(bool); }
 575:Lib/libcanard/canard.c ****     else if (bit_length <= 8)   { std_byte_length = 1; }
 576:Lib/libcanard/canard.c ****     else if (bit_length <= 16)  { std_byte_length = 2; }
 577:Lib/libcanard/canard.c ****     else if (bit_length <= 32)  { std_byte_length = 4; }
 578:Lib/libcanard/canard.c ****     else if (bit_length <= 64)  { std_byte_length = 8; }
 579:Lib/libcanard/canard.c ****     else
 580:Lib/libcanard/canard.c ****     {
 581:Lib/libcanard/canard.c ****         CANARD_ASSERT(false);
 582:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INTERNAL;
 583:Lib/libcanard/canard.c ****     }
 584:Lib/libcanard/canard.c **** 
 585:Lib/libcanard/canard.c ****     CANARD_ASSERT((std_byte_length > 0) && (std_byte_length <= 8));
 586:Lib/libcanard/canard.c **** 
 587:Lib/libcanard/canard.c ****     /*
 588:Lib/libcanard/canard.c ****      * Flipping the byte order if needed.
 589:Lib/libcanard/canard.c ****      */
 590:Lib/libcanard/canard.c ****     if (isBigEndian())
 591:Lib/libcanard/canard.c ****     {
 592:Lib/libcanard/canard.c ****         swapByteOrder(&storage.bytes[0], std_byte_length);
 593:Lib/libcanard/canard.c ****     }
 594:Lib/libcanard/canard.c **** 
 595:Lib/libcanard/canard.c ****     /*
 596:Lib/libcanard/canard.c ****      * Extending the sign bit if needed. I miss templates.
 597:Lib/libcanard/canard.c ****      * Note that we operate on unsigned values in order to avoid undefined behaviors.
 598:Lib/libcanard/canard.c ****      */
 599:Lib/libcanard/canard.c ****     if (value_is_signed && (std_byte_length * 8 != bit_length))
 600:Lib/libcanard/canard.c ****     {
 601:Lib/libcanard/canard.c ****         if (bit_length <= 8)
 602:Lib/libcanard/canard.c ****         {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 12


 603:Lib/libcanard/canard.c ****             if ((storage.u8 & (1U << (bit_length - 1U))) != 0)                           // If the 
 604:Lib/libcanard/canard.c ****             {
 605:Lib/libcanard/canard.c ****                 storage.u8 |= (uint8_t) 0xFFU & (uint8_t) ~((1U << bit_length) - 1U);   // ...set a
 606:Lib/libcanard/canard.c ****             }
 607:Lib/libcanard/canard.c ****         }
 608:Lib/libcanard/canard.c ****         else if (bit_length <= 16)
 609:Lib/libcanard/canard.c ****         {
 610:Lib/libcanard/canard.c ****             if ((storage.u16 & (1U << (bit_length - 1U))) != 0)
 611:Lib/libcanard/canard.c ****             {
 612:Lib/libcanard/canard.c ****                 storage.u16 |= (uint16_t) 0xFFFFU & (uint16_t) ~((1U << bit_length) - 1U);
 613:Lib/libcanard/canard.c ****             }
 614:Lib/libcanard/canard.c ****         }
 615:Lib/libcanard/canard.c ****         else if (bit_length <= 32)
 616:Lib/libcanard/canard.c ****         {
 617:Lib/libcanard/canard.c ****             if ((storage.u32 & (((uint32_t) 1) << (bit_length - 1U))) != 0)
 618:Lib/libcanard/canard.c ****             {
 619:Lib/libcanard/canard.c ****                 storage.u32 |= (uint32_t) 0xFFFFFFFFUL & (uint32_t) ~((((uint32_t) 1) << bit_length
 620:Lib/libcanard/canard.c ****             }
 621:Lib/libcanard/canard.c ****         }
 622:Lib/libcanard/canard.c ****         else if (bit_length < 64)   // Strictly less, this is not a typo
 623:Lib/libcanard/canard.c ****         {
 624:Lib/libcanard/canard.c ****             if ((storage.u64 & (((uint64_t) 1) << (bit_length - 1U))) != 0)
 625:Lib/libcanard/canard.c ****             {
 626:Lib/libcanard/canard.c ****                 storage.u64 |= (uint64_t) 0xFFFFFFFFFFFFFFFFULL & (uint64_t) ~((((uint64_t) 1) << b
 627:Lib/libcanard/canard.c ****             }
 628:Lib/libcanard/canard.c ****         }
 629:Lib/libcanard/canard.c ****         else
 630:Lib/libcanard/canard.c ****         {
 631:Lib/libcanard/canard.c ****             CANARD_ASSERT(false);
 632:Lib/libcanard/canard.c ****             return -CANARD_ERROR_INTERNAL;
 633:Lib/libcanard/canard.c ****         }
 634:Lib/libcanard/canard.c ****     }
 635:Lib/libcanard/canard.c **** 
 636:Lib/libcanard/canard.c ****     /*
 637:Lib/libcanard/canard.c ****      * Copying the result out.
 638:Lib/libcanard/canard.c ****      */
 639:Lib/libcanard/canard.c ****     if (value_is_signed)
 640:Lib/libcanard/canard.c ****     {
 641:Lib/libcanard/canard.c ****         if      (bit_length <= 8)   { *( (int8_t*) out_value) = storage.s8;  }
 642:Lib/libcanard/canard.c ****         else if (bit_length <= 16)  { *((int16_t*) out_value) = storage.s16; }
 643:Lib/libcanard/canard.c ****         else if (bit_length <= 32)  { *((int32_t*) out_value) = storage.s32; }
 644:Lib/libcanard/canard.c ****         else if (bit_length <= 64)  { *((int64_t*) out_value) = storage.s64; }
 645:Lib/libcanard/canard.c ****         else
 646:Lib/libcanard/canard.c ****         {
 647:Lib/libcanard/canard.c ****             CANARD_ASSERT(false);
 648:Lib/libcanard/canard.c ****             return -CANARD_ERROR_INTERNAL;
 649:Lib/libcanard/canard.c ****         }
 650:Lib/libcanard/canard.c ****     }
 651:Lib/libcanard/canard.c ****     else
 652:Lib/libcanard/canard.c ****     {
 653:Lib/libcanard/canard.c ****         if      (bit_length == 1)   { *(    (bool*) out_value) = storage.boolean; }
 654:Lib/libcanard/canard.c ****         else if (bit_length <= 8)   { *( (uint8_t*) out_value) = storage.u8;  }
 655:Lib/libcanard/canard.c ****         else if (bit_length <= 16)  { *((uint16_t*) out_value) = storage.u16; }
 656:Lib/libcanard/canard.c ****         else if (bit_length <= 32)  { *((uint32_t*) out_value) = storage.u32; }
 657:Lib/libcanard/canard.c ****         else if (bit_length <= 64)  { *((uint64_t*) out_value) = storage.u64; }
 658:Lib/libcanard/canard.c ****         else
 659:Lib/libcanard/canard.c ****         {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 13


 660:Lib/libcanard/canard.c ****             CANARD_ASSERT(false);
 661:Lib/libcanard/canard.c ****             return -CANARD_ERROR_INTERNAL;
 662:Lib/libcanard/canard.c ****         }
 663:Lib/libcanard/canard.c ****     }
 664:Lib/libcanard/canard.c **** 
 665:Lib/libcanard/canard.c ****     CANARD_ASSERT(result <= bit_length);
 666:Lib/libcanard/canard.c ****     CANARD_ASSERT(result > 0);
 667:Lib/libcanard/canard.c ****     return result;
 668:Lib/libcanard/canard.c **** }
 669:Lib/libcanard/canard.c **** 
 670:Lib/libcanard/canard.c **** void canardEncodeScalar(void* destination,
 671:Lib/libcanard/canard.c ****                         uint32_t bit_offset,
 672:Lib/libcanard/canard.c ****                         uint8_t bit_length,
 673:Lib/libcanard/canard.c ****                         const void* value)
 674:Lib/libcanard/canard.c **** {
 675:Lib/libcanard/canard.c ****     /*
 676:Lib/libcanard/canard.c ****      * This function can only fail due to invalid arguments, so it was decided to make it return vo
 677:Lib/libcanard/canard.c ****      * and in the case of bad arguments try the best effort or just trigger an CANARD_ASSERTion fai
 678:Lib/libcanard/canard.c ****      * Maybe not the best solution, but it simplifies the API.
 679:Lib/libcanard/canard.c ****      */
 680:Lib/libcanard/canard.c ****     CANARD_ASSERT(destination != NULL);
 681:Lib/libcanard/canard.c ****     CANARD_ASSERT(value != NULL);
 682:Lib/libcanard/canard.c **** 
 683:Lib/libcanard/canard.c ****     if (bit_length > 64)
 684:Lib/libcanard/canard.c ****     {
 685:Lib/libcanard/canard.c ****         CANARD_ASSERT(false);
 686:Lib/libcanard/canard.c ****         bit_length = 64;
 687:Lib/libcanard/canard.c ****     }
 688:Lib/libcanard/canard.c **** 
 689:Lib/libcanard/canard.c ****     if (bit_length < 1)
 690:Lib/libcanard/canard.c ****     {
 691:Lib/libcanard/canard.c ****         CANARD_ASSERT(false);
 692:Lib/libcanard/canard.c ****         bit_length = 1;
 693:Lib/libcanard/canard.c ****     }
 694:Lib/libcanard/canard.c **** 
 695:Lib/libcanard/canard.c ****     /*
 696:Lib/libcanard/canard.c ****      * Preparing the data in the temporary storage.
 697:Lib/libcanard/canard.c ****      */
 698:Lib/libcanard/canard.c ****     union
 699:Lib/libcanard/canard.c ****     {
 700:Lib/libcanard/canard.c ****         bool     boolean;
 701:Lib/libcanard/canard.c ****         uint8_t  u8;
 702:Lib/libcanard/canard.c ****         uint16_t u16;
 703:Lib/libcanard/canard.c ****         uint32_t u32;
 704:Lib/libcanard/canard.c ****         uint64_t u64;
 705:Lib/libcanard/canard.c ****         uint8_t bytes[8];
 706:Lib/libcanard/canard.c ****     } storage;
 707:Lib/libcanard/canard.c **** 
 708:Lib/libcanard/canard.c ****     memset(&storage, 0, sizeof(storage));
 709:Lib/libcanard/canard.c **** 
 710:Lib/libcanard/canard.c ****     uint8_t std_byte_length = 0;
 711:Lib/libcanard/canard.c **** 
 712:Lib/libcanard/canard.c ****     // Extra most significant bits can be safely ignored here.
 713:Lib/libcanard/canard.c ****     if      (bit_length == 1)   { std_byte_length = sizeof(bool);   storage.boolean = (*((bool*) va
 714:Lib/libcanard/canard.c ****     else if (bit_length <= 8)   { std_byte_length = 1;              storage.u8  = *((uint8_t*) valu
 715:Lib/libcanard/canard.c ****     else if (bit_length <= 16)  { std_byte_length = 2;              storage.u16 = *((uint16_t*) val
 716:Lib/libcanard/canard.c ****     else if (bit_length <= 32)  { std_byte_length = 4;              storage.u32 = *((uint32_t*) val
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 14


 717:Lib/libcanard/canard.c ****     else if (bit_length <= 64)  { std_byte_length = 8;              storage.u64 = *((uint64_t*) val
 718:Lib/libcanard/canard.c ****     else
 719:Lib/libcanard/canard.c ****     {
 720:Lib/libcanard/canard.c ****         CANARD_ASSERT(false);
 721:Lib/libcanard/canard.c ****     }
 722:Lib/libcanard/canard.c **** 
 723:Lib/libcanard/canard.c ****     CANARD_ASSERT(std_byte_length > 0);
 724:Lib/libcanard/canard.c **** 
 725:Lib/libcanard/canard.c ****     if (isBigEndian())
 726:Lib/libcanard/canard.c ****     {
 727:Lib/libcanard/canard.c ****         swapByteOrder(&storage.bytes[0], std_byte_length);
 728:Lib/libcanard/canard.c ****     }
 729:Lib/libcanard/canard.c **** 
 730:Lib/libcanard/canard.c ****     /*
 731:Lib/libcanard/canard.c ****      * The bit copy algorithm assumes that more significant bits have lower index, so we need to sh
 732:Lib/libcanard/canard.c ****      * Extra least significant bits will be filled with zeroes, which is fine.
 733:Lib/libcanard/canard.c ****      * Extra most significant bits will be discarded here.
 734:Lib/libcanard/canard.c ****      * Coverity Scan mistakenly believes that the array may be overrun if bit_length == 64; however
 735:Lib/libcanard/canard.c ****      * not be taken if bit_length == 64, because 64 % 8 == 0.
 736:Lib/libcanard/canard.c ****      */
 737:Lib/libcanard/canard.c ****     if ((bit_length % 8) != 0)
 738:Lib/libcanard/canard.c ****     {
 739:Lib/libcanard/canard.c ****         // coverity[overrun-local]
 740:Lib/libcanard/canard.c ****         storage.bytes[bit_length / 8U] = (uint8_t)(storage.bytes[bit_length / 8U] << ((8U - (bit_le
 741:Lib/libcanard/canard.c ****     }
 742:Lib/libcanard/canard.c **** 
 743:Lib/libcanard/canard.c ****     /*
 744:Lib/libcanard/canard.c ****      * Now, the storage contains properly serialized scalar. Copying it out.
 745:Lib/libcanard/canard.c ****      */
 746:Lib/libcanard/canard.c ****     copyBitArray(&storage.bytes[0], 0, bit_length, (uint8_t*) destination, bit_offset);
 747:Lib/libcanard/canard.c **** }
 748:Lib/libcanard/canard.c **** 
 749:Lib/libcanard/canard.c **** void canardReleaseRxTransferPayload(CanardInstance* ins, CanardRxTransfer* transfer)
 750:Lib/libcanard/canard.c **** {
 751:Lib/libcanard/canard.c ****     while (transfer->payload_middle != NULL)
 752:Lib/libcanard/canard.c ****     {
 753:Lib/libcanard/canard.c ****         CanardBufferBlock* const temp = transfer->payload_middle->next;
 754:Lib/libcanard/canard.c ****         freeBlock(&ins->allocator, transfer->payload_middle);
 755:Lib/libcanard/canard.c ****         transfer->payload_middle = temp;
 756:Lib/libcanard/canard.c ****     }
 757:Lib/libcanard/canard.c **** 
 758:Lib/libcanard/canard.c ****     transfer->payload_middle = NULL;
 759:Lib/libcanard/canard.c ****     transfer->payload_head = NULL;
 760:Lib/libcanard/canard.c ****     transfer->payload_tail = NULL;
 761:Lib/libcanard/canard.c ****     transfer->payload_len = 0;
 762:Lib/libcanard/canard.c **** }
 763:Lib/libcanard/canard.c **** 
 764:Lib/libcanard/canard.c **** CanardPoolAllocatorStatistics canardGetPoolAllocatorStatistics(CanardInstance* ins)
 765:Lib/libcanard/canard.c **** {
 766:Lib/libcanard/canard.c ****     return ins->allocator.statistics;
 767:Lib/libcanard/canard.c **** }
 768:Lib/libcanard/canard.c **** 
 769:Lib/libcanard/canard.c **** uint16_t canardConvertNativeFloatToFloat16(float value)
 770:Lib/libcanard/canard.c **** {
 771:Lib/libcanard/canard.c ****     CANARD_ASSERT(sizeof(float) == 4);
 772:Lib/libcanard/canard.c **** 
 773:Lib/libcanard/canard.c ****     union FP32
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 15


 774:Lib/libcanard/canard.c ****     {
 775:Lib/libcanard/canard.c ****         uint32_t u;
 776:Lib/libcanard/canard.c ****         float f;
 777:Lib/libcanard/canard.c ****     };
 778:Lib/libcanard/canard.c **** 
 779:Lib/libcanard/canard.c ****     const union FP32 f32inf = { 255UL << 23U };
 780:Lib/libcanard/canard.c ****     const union FP32 f16inf = { 31UL << 23U };
 781:Lib/libcanard/canard.c ****     const union FP32 magic = { 15UL << 23U };
 782:Lib/libcanard/canard.c ****     const uint32_t sign_mask = 0x80000000UL;
 783:Lib/libcanard/canard.c ****     const uint32_t round_mask = ~0xFFFUL;
 784:Lib/libcanard/canard.c **** 
 785:Lib/libcanard/canard.c ****     union FP32 in;
 786:Lib/libcanard/canard.c ****     in.f = value;
 787:Lib/libcanard/canard.c ****     uint32_t sign = in.u & sign_mask;
 788:Lib/libcanard/canard.c ****     in.u ^= sign;
 789:Lib/libcanard/canard.c **** 
 790:Lib/libcanard/canard.c ****     uint16_t out = 0;
 791:Lib/libcanard/canard.c **** 
 792:Lib/libcanard/canard.c ****     if (in.u >= f32inf.u)
 793:Lib/libcanard/canard.c ****     {
 794:Lib/libcanard/canard.c ****         out = (in.u > f32inf.u) ? (uint16_t)0x7FFFU : (uint16_t)0x7C00U;
 795:Lib/libcanard/canard.c ****     }
 796:Lib/libcanard/canard.c ****     else
 797:Lib/libcanard/canard.c ****     {
 798:Lib/libcanard/canard.c ****         in.u &= round_mask;
 799:Lib/libcanard/canard.c ****         in.f *= magic.f;
 800:Lib/libcanard/canard.c ****         in.u -= round_mask;
 801:Lib/libcanard/canard.c ****         if (in.u > f16inf.u)
 802:Lib/libcanard/canard.c ****         {
 803:Lib/libcanard/canard.c ****             in.u = f16inf.u;
 804:Lib/libcanard/canard.c ****         }
 805:Lib/libcanard/canard.c ****         out = (uint16_t)(in.u >> 13U);
 806:Lib/libcanard/canard.c ****     }
 807:Lib/libcanard/canard.c **** 
 808:Lib/libcanard/canard.c ****     out |= (uint16_t)(sign >> 16U);
 809:Lib/libcanard/canard.c **** 
 810:Lib/libcanard/canard.c ****     return out;
 811:Lib/libcanard/canard.c **** }
 812:Lib/libcanard/canard.c **** 
 813:Lib/libcanard/canard.c **** float canardConvertFloat16ToNativeFloat(uint16_t value)
 814:Lib/libcanard/canard.c **** {
 815:Lib/libcanard/canard.c ****     CANARD_ASSERT(sizeof(float) == 4);
 816:Lib/libcanard/canard.c **** 
 817:Lib/libcanard/canard.c ****     union FP32
 818:Lib/libcanard/canard.c ****     {
 819:Lib/libcanard/canard.c ****         uint32_t u;
 820:Lib/libcanard/canard.c ****         float f;
 821:Lib/libcanard/canard.c ****     };
 822:Lib/libcanard/canard.c **** 
 823:Lib/libcanard/canard.c ****     const union FP32 magic = { (254UL - 15UL) << 23U };
 824:Lib/libcanard/canard.c ****     const union FP32 was_inf_nan = { (127UL + 16UL) << 23U };
 825:Lib/libcanard/canard.c ****     union FP32 out;
 826:Lib/libcanard/canard.c **** 
 827:Lib/libcanard/canard.c ****     out.u = (value & 0x7FFFU) << 13U;
 828:Lib/libcanard/canard.c ****     out.f *= magic.f;
 829:Lib/libcanard/canard.c ****     if (out.f >= was_inf_nan.f)
 830:Lib/libcanard/canard.c ****     {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 16


 831:Lib/libcanard/canard.c ****         out.u |= 255UL << 23U;
 832:Lib/libcanard/canard.c ****     }
 833:Lib/libcanard/canard.c ****     out.u |= (value & 0x8000UL) << 16U;
 834:Lib/libcanard/canard.c **** 
 835:Lib/libcanard/canard.c ****     return out.f;
 836:Lib/libcanard/canard.c **** }
 837:Lib/libcanard/canard.c **** 
 838:Lib/libcanard/canard.c **** /*
 839:Lib/libcanard/canard.c ****  * Internal (static functions)
 840:Lib/libcanard/canard.c ****  */
 841:Lib/libcanard/canard.c **** CANARD_INTERNAL int16_t computeTransferIDForwardDistance(uint8_t a, uint8_t b)
 842:Lib/libcanard/canard.c **** {
  27              		.loc 1 842 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 843:Lib/libcanard/canard.c ****     int16_t d = (int16_t)(b - a);
  33              		.loc 1 843 0
  34 0000 091A     		subs	r1, r1, r0
  35              	.LVL1:
  36 0002 89B2     		uxth	r1, r1
  37 0004 08B2     		sxth	r0, r1
  38              	.LVL2:
 844:Lib/libcanard/canard.c ****     if (d < 0)
  39              		.loc 1 844 0
  40 0006 0028     		cmp	r0, #0
  41 0008 00DB     		blt	.L3
  42              	.L2:
 845:Lib/libcanard/canard.c ****     {
 846:Lib/libcanard/canard.c ****         d = (int16_t)(d + (int16_t)(1U << TRANSFER_ID_BIT_LEN));
 847:Lib/libcanard/canard.c ****     }
 848:Lib/libcanard/canard.c ****     return d;
 849:Lib/libcanard/canard.c **** }
  43              		.loc 1 849 0
  44 000a 7047     		bx	lr
  45              	.L3:
 846:Lib/libcanard/canard.c ****     }
  46              		.loc 1 846 0
  47 000c 2031     		adds	r1, r1, #32
  48 000e 08B2     		sxth	r0, r1
  49              	.LVL3:
  50 0010 FBE7     		b	.L2
  51              		.cfi_endproc
  52              	.LFE16:
  54              		.section	.text.isPriorityHigher,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	isPriorityHigher:
  62              	.LFB21:
 850:Lib/libcanard/canard.c **** 
 851:Lib/libcanard/canard.c **** CANARD_INTERNAL void incrementTransferID(uint8_t* transfer_id)
 852:Lib/libcanard/canard.c **** {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 17


 853:Lib/libcanard/canard.c ****     CANARD_ASSERT(transfer_id != NULL);
 854:Lib/libcanard/canard.c **** 
 855:Lib/libcanard/canard.c ****     (*transfer_id)++;
 856:Lib/libcanard/canard.c ****     if (*transfer_id >= 32)
 857:Lib/libcanard/canard.c ****     {
 858:Lib/libcanard/canard.c ****         *transfer_id = 0;
 859:Lib/libcanard/canard.c ****     }
 860:Lib/libcanard/canard.c **** }
 861:Lib/libcanard/canard.c **** 
 862:Lib/libcanard/canard.c **** CANARD_INTERNAL int16_t enqueueTxFrames(CanardInstance* ins,
 863:Lib/libcanard/canard.c ****                                         uint32_t can_id,
 864:Lib/libcanard/canard.c ****                                         uint8_t* transfer_id,
 865:Lib/libcanard/canard.c ****                                         uint16_t crc,
 866:Lib/libcanard/canard.c ****                                         const uint8_t* payload,
 867:Lib/libcanard/canard.c ****                                         uint16_t payload_len)
 868:Lib/libcanard/canard.c **** {
 869:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 870:Lib/libcanard/canard.c ****     CANARD_ASSERT((can_id & CANARD_CAN_EXT_ID_MASK) == can_id);            // Flags must be cleared
 871:Lib/libcanard/canard.c **** 
 872:Lib/libcanard/canard.c ****     if (transfer_id == NULL)
 873:Lib/libcanard/canard.c ****     {
 874:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 875:Lib/libcanard/canard.c ****     }
 876:Lib/libcanard/canard.c **** 
 877:Lib/libcanard/canard.c ****     if ((payload_len > 0) && (payload == NULL))
 878:Lib/libcanard/canard.c ****     {
 879:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INVALID_ARGUMENT;
 880:Lib/libcanard/canard.c ****     }
 881:Lib/libcanard/canard.c **** 
 882:Lib/libcanard/canard.c ****     int16_t result = 0;
 883:Lib/libcanard/canard.c **** 
 884:Lib/libcanard/canard.c ****     if (payload_len < CANARD_CAN_FRAME_MAX_DATA_LEN)                        // Single frame transfe
 885:Lib/libcanard/canard.c ****     {
 886:Lib/libcanard/canard.c ****         CanardTxQueueItem* queue_item = createTxItem(&ins->allocator);
 887:Lib/libcanard/canard.c ****         if (queue_item == NULL)
 888:Lib/libcanard/canard.c ****         {
 889:Lib/libcanard/canard.c ****             return -CANARD_ERROR_OUT_OF_MEMORY;
 890:Lib/libcanard/canard.c ****         }
 891:Lib/libcanard/canard.c **** 
 892:Lib/libcanard/canard.c ****         memcpy(queue_item->frame.data, payload, payload_len);
 893:Lib/libcanard/canard.c **** 
 894:Lib/libcanard/canard.c ****         queue_item->frame.data_len = (uint8_t)(payload_len + 1);
 895:Lib/libcanard/canard.c ****         queue_item->frame.data[payload_len] = (uint8_t)(0xC0U | (*transfer_id & 31U));
 896:Lib/libcanard/canard.c ****         queue_item->frame.id = can_id | CANARD_CAN_FRAME_EFF;
 897:Lib/libcanard/canard.c **** 
 898:Lib/libcanard/canard.c ****         pushTxQueue(ins, queue_item);
 899:Lib/libcanard/canard.c ****         result++;
 900:Lib/libcanard/canard.c ****     }
 901:Lib/libcanard/canard.c ****     else                                                                    // Multi frame transfer
 902:Lib/libcanard/canard.c ****     {
 903:Lib/libcanard/canard.c ****         uint16_t data_index = 0;
 904:Lib/libcanard/canard.c ****         uint8_t toggle = 0;
 905:Lib/libcanard/canard.c ****         uint8_t sot_eot = 0x80;
 906:Lib/libcanard/canard.c **** 
 907:Lib/libcanard/canard.c ****         CanardTxQueueItem* queue_item = NULL;
 908:Lib/libcanard/canard.c **** 
 909:Lib/libcanard/canard.c ****         while (payload_len - data_index != 0)
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 18


 910:Lib/libcanard/canard.c ****         {
 911:Lib/libcanard/canard.c ****             queue_item = createTxItem(&ins->allocator);
 912:Lib/libcanard/canard.c ****             if (queue_item == NULL)
 913:Lib/libcanard/canard.c ****             {
 914:Lib/libcanard/canard.c ****                 return -CANARD_ERROR_OUT_OF_MEMORY;          // TODO: Purge all frames enqueued so 
 915:Lib/libcanard/canard.c ****             }
 916:Lib/libcanard/canard.c **** 
 917:Lib/libcanard/canard.c ****             uint8_t i = 0;
 918:Lib/libcanard/canard.c ****             if (data_index == 0)
 919:Lib/libcanard/canard.c ****             {
 920:Lib/libcanard/canard.c ****                 // add crc
 921:Lib/libcanard/canard.c ****                 queue_item->frame.data[0] = (uint8_t) (crc);
 922:Lib/libcanard/canard.c ****                 queue_item->frame.data[1] = (uint8_t) (crc >> 8U);
 923:Lib/libcanard/canard.c ****                 i = 2;
 924:Lib/libcanard/canard.c ****             }
 925:Lib/libcanard/canard.c ****             else
 926:Lib/libcanard/canard.c ****             {
 927:Lib/libcanard/canard.c ****                 i = 0;
 928:Lib/libcanard/canard.c ****             }
 929:Lib/libcanard/canard.c **** 
 930:Lib/libcanard/canard.c ****             for (; i < (CANARD_CAN_FRAME_MAX_DATA_LEN - 1) && data_index < payload_len; i++, data_i
 931:Lib/libcanard/canard.c ****             {
 932:Lib/libcanard/canard.c ****                 queue_item->frame.data[i] = payload[data_index];
 933:Lib/libcanard/canard.c ****             }
 934:Lib/libcanard/canard.c ****             // tail byte
 935:Lib/libcanard/canard.c ****             sot_eot = (data_index == payload_len) ? (uint8_t)0x40 : sot_eot;
 936:Lib/libcanard/canard.c **** 
 937:Lib/libcanard/canard.c ****             queue_item->frame.data[i] = (uint8_t)(sot_eot | ((uint32_t)toggle << 5U) | ((uint32_t)*
 938:Lib/libcanard/canard.c ****             queue_item->frame.id = can_id | CANARD_CAN_FRAME_EFF;
 939:Lib/libcanard/canard.c ****             queue_item->frame.data_len = (uint8_t)(i + 1);
 940:Lib/libcanard/canard.c ****             pushTxQueue(ins, queue_item);
 941:Lib/libcanard/canard.c **** 
 942:Lib/libcanard/canard.c ****             result++;
 943:Lib/libcanard/canard.c ****             toggle ^= 1;
 944:Lib/libcanard/canard.c ****             sot_eot = 0;
 945:Lib/libcanard/canard.c ****         }
 946:Lib/libcanard/canard.c ****     }
 947:Lib/libcanard/canard.c **** 
 948:Lib/libcanard/canard.c ****     return result;
 949:Lib/libcanard/canard.c **** }
 950:Lib/libcanard/canard.c **** 
 951:Lib/libcanard/canard.c **** /**
 952:Lib/libcanard/canard.c ****  * Puts frame on on the TX queue. Higher priority placed first
 953:Lib/libcanard/canard.c ****  */
 954:Lib/libcanard/canard.c **** CANARD_INTERNAL void pushTxQueue(CanardInstance* ins, CanardTxQueueItem* item)
 955:Lib/libcanard/canard.c **** {
 956:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 957:Lib/libcanard/canard.c ****     CANARD_ASSERT(item->frame.data_len > 0);       // UAVCAN doesn't allow zero-payload frames
 958:Lib/libcanard/canard.c **** 
 959:Lib/libcanard/canard.c ****     if (ins->tx_queue == NULL)
 960:Lib/libcanard/canard.c ****     {
 961:Lib/libcanard/canard.c ****         ins->tx_queue = item;
 962:Lib/libcanard/canard.c ****         return;
 963:Lib/libcanard/canard.c ****     }
 964:Lib/libcanard/canard.c **** 
 965:Lib/libcanard/canard.c ****     CanardTxQueueItem* queue = ins->tx_queue;
 966:Lib/libcanard/canard.c ****     CanardTxQueueItem* previous = ins->tx_queue;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 19


 967:Lib/libcanard/canard.c **** 
 968:Lib/libcanard/canard.c ****     while (queue != NULL)
 969:Lib/libcanard/canard.c ****     {
 970:Lib/libcanard/canard.c ****         if (isPriorityHigher(queue->frame.id, item->frame.id)) // lower number wins
 971:Lib/libcanard/canard.c ****         {
 972:Lib/libcanard/canard.c ****             if (queue == ins->tx_queue)
 973:Lib/libcanard/canard.c ****             {
 974:Lib/libcanard/canard.c ****                 item->next = queue;
 975:Lib/libcanard/canard.c ****                 ins->tx_queue = item;
 976:Lib/libcanard/canard.c ****             }
 977:Lib/libcanard/canard.c ****             else
 978:Lib/libcanard/canard.c ****             {
 979:Lib/libcanard/canard.c ****                 previous->next = item;
 980:Lib/libcanard/canard.c ****                 item->next = queue;
 981:Lib/libcanard/canard.c ****             }
 982:Lib/libcanard/canard.c ****             return;
 983:Lib/libcanard/canard.c ****         }
 984:Lib/libcanard/canard.c ****         else
 985:Lib/libcanard/canard.c ****         {
 986:Lib/libcanard/canard.c ****             if (queue->next == NULL)
 987:Lib/libcanard/canard.c ****             {
 988:Lib/libcanard/canard.c ****                 queue->next = item;
 989:Lib/libcanard/canard.c ****                 return;
 990:Lib/libcanard/canard.c ****             }
 991:Lib/libcanard/canard.c ****             else
 992:Lib/libcanard/canard.c ****             {
 993:Lib/libcanard/canard.c ****                 previous = queue;
 994:Lib/libcanard/canard.c ****                 queue = queue->next;
 995:Lib/libcanard/canard.c ****             }
 996:Lib/libcanard/canard.c ****         }
 997:Lib/libcanard/canard.c ****     }
 998:Lib/libcanard/canard.c **** }
 999:Lib/libcanard/canard.c **** 
1000:Lib/libcanard/canard.c **** /**
1001:Lib/libcanard/canard.c ****  * Creates new tx queue item from allocator
1002:Lib/libcanard/canard.c ****  */
1003:Lib/libcanard/canard.c **** CANARD_INTERNAL CanardTxQueueItem* createTxItem(CanardPoolAllocator* allocator)
1004:Lib/libcanard/canard.c **** {
1005:Lib/libcanard/canard.c ****     CanardTxQueueItem* item = (CanardTxQueueItem*) allocateBlock(allocator);
1006:Lib/libcanard/canard.c ****     if (item == NULL)
1007:Lib/libcanard/canard.c ****     {
1008:Lib/libcanard/canard.c ****         return NULL;
1009:Lib/libcanard/canard.c ****     }
1010:Lib/libcanard/canard.c ****     memset(item, 0, sizeof(*item));
1011:Lib/libcanard/canard.c ****     return item;
1012:Lib/libcanard/canard.c **** }
1013:Lib/libcanard/canard.c **** 
1014:Lib/libcanard/canard.c **** /**
1015:Lib/libcanard/canard.c ****  * Returns true if priority of rhs is higher than id
1016:Lib/libcanard/canard.c ****  */
1017:Lib/libcanard/canard.c **** CANARD_INTERNAL bool isPriorityHigher(uint32_t rhs, uint32_t id)
1018:Lib/libcanard/canard.c **** {
  63              		.loc 1 1018 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 20


  68              	.LVL4:
  69 0000 10B4     		push	{r4}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 4, -4
1019:Lib/libcanard/canard.c ****     const uint32_t clean_id = id & CANARD_CAN_EXT_ID_MASK;
  73              		.loc 1 1019 0
  74 0002 21F06044 		bic	r4, r1, #-536870912
  75              	.LVL5:
1020:Lib/libcanard/canard.c ****     const uint32_t rhs_clean_id = rhs & CANARD_CAN_EXT_ID_MASK;
  76              		.loc 1 1020 0
  77 0006 20F06042 		bic	r2, r0, #-536870912
  78              	.LVL6:
1021:Lib/libcanard/canard.c **** 
1022:Lib/libcanard/canard.c ****     /*
1023:Lib/libcanard/canard.c ****      * STD vs EXT - if 11 most significant bits are the same, EXT loses.
1024:Lib/libcanard/canard.c ****      */
1025:Lib/libcanard/canard.c ****     const bool ext = (id & CANARD_CAN_FRAME_EFF) != 0;
1026:Lib/libcanard/canard.c ****     const bool rhs_ext = (rhs & CANARD_CAN_FRAME_EFF) != 0;
  79              		.loc 1 1026 0
  80 000a C30F     		lsrs	r3, r0, #31
  81              	.LVL7:
1027:Lib/libcanard/canard.c ****     if (ext != rhs_ext)
  82              		.loc 1 1027 0
  83 000c B3EBD17F 		cmp	r3, r1, lsr #31
  84 0010 11D0     		beq	.L5
  85              	.LBB2:
1028:Lib/libcanard/canard.c ****     {
1029:Lib/libcanard/canard.c ****         uint32_t arb11 = ext ? (clean_id >> 18U) : clean_id;
  86              		.loc 1 1029 0
  87 0012 0029     		cmp	r1, #0
  88 0014 0BDB     		blt	.L11
  89              	.LVL8:
  90              	.L6:
1030:Lib/libcanard/canard.c ****         uint32_t rhs_arb11 = rhs_ext ? (rhs_clean_id >> 18U) : rhs_clean_id;
  91              		.loc 1 1030 0 discriminator 4
  92 0016 0028     		cmp	r0, #0
  93 0018 0BDB     		blt	.L12
  94              	.LVL9:
  95              	.L7:
1031:Lib/libcanard/canard.c ****         if (arb11 != rhs_arb11)
  96              		.loc 1 1031 0 discriminator 4
  97 001a 9442     		cmp	r4, r2
  98 001c 03D0     		beq	.L8
1032:Lib/libcanard/canard.c ****         {
1033:Lib/libcanard/canard.c ****             return arb11 < rhs_arb11;
  99              		.loc 1 1033 0
 100 001e 9442     		cmp	r4, r2
 101 0020 2CBF     		ite	cs
 102 0022 0023     		movcs	r3, #0
 103              	.LVL10:
 104 0024 0123     		movcc	r3, #1
 105              	.LVL11:
 106              	.L8:
 107              	.LBE2:
1034:Lib/libcanard/canard.c ****         }
1035:Lib/libcanard/canard.c ****         else
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 21


1036:Lib/libcanard/canard.c ****         {
1037:Lib/libcanard/canard.c ****             return rhs_ext;
1038:Lib/libcanard/canard.c ****         }
1039:Lib/libcanard/canard.c ****     }
1040:Lib/libcanard/canard.c **** 
1041:Lib/libcanard/canard.c ****     /*
1042:Lib/libcanard/canard.c ****      * RTR vs Data frame - if frame identifiers and frame types are the same, RTR loses.
1043:Lib/libcanard/canard.c ****      */
1044:Lib/libcanard/canard.c ****     const bool rtr = (id & CANARD_CAN_FRAME_RTR) != 0;
1045:Lib/libcanard/canard.c ****     const bool rhs_rtr = (rhs & CANARD_CAN_FRAME_RTR) != 0;
1046:Lib/libcanard/canard.c ****     if (clean_id == rhs_clean_id && rtr != rhs_rtr)
1047:Lib/libcanard/canard.c ****     {
1048:Lib/libcanard/canard.c ****         return rhs_rtr;
1049:Lib/libcanard/canard.c ****     }
1050:Lib/libcanard/canard.c **** 
1051:Lib/libcanard/canard.c ****     /*
1052:Lib/libcanard/canard.c ****      * Plain ID arbitration - greater value loses.
1053:Lib/libcanard/canard.c ****      */
1054:Lib/libcanard/canard.c ****     return clean_id < rhs_clean_id;
1055:Lib/libcanard/canard.c **** }
 108              		.loc 1 1055 0
 109 0026 1846     		mov	r0, r3
 110              	.LVL12:
 111 0028 5DF8044B 		ldr	r4, [sp], #4
 112              	.LCFI1:
 113              		.cfi_remember_state
 114              		.cfi_restore 4
 115              		.cfi_def_cfa_offset 0
 116 002c 7047     		bx	lr
 117              	.LVL13:
 118              	.L11:
 119              	.LCFI2:
 120              		.cfi_restore_state
 121              	.LBB3:
1029:Lib/libcanard/canard.c ****         uint32_t rhs_arb11 = rhs_ext ? (rhs_clean_id >> 18U) : rhs_clean_id;
 122              		.loc 1 1029 0 discriminator 1
 123 002e A40C     		lsrs	r4, r4, #18
 124              	.LVL14:
 125 0030 F1E7     		b	.L6
 126              	.LVL15:
 127              	.L12:
1030:Lib/libcanard/canard.c ****         if (arb11 != rhs_arb11)
 128              		.loc 1 1030 0 discriminator 1
 129 0032 920C     		lsrs	r2, r2, #18
 130              	.LVL16:
 131 0034 F1E7     		b	.L7
 132              	.LVL17:
 133              	.L5:
 134              	.LBE3:
1044:Lib/libcanard/canard.c ****     const bool rhs_rtr = (rhs & CANARD_CAN_FRAME_RTR) != 0;
 135              		.loc 1 1044 0
 136 0036 C1F38071 		ubfx	r1, r1, #30, #1
 137              	.LVL18:
1045:Lib/libcanard/canard.c ****     if (clean_id == rhs_clean_id && rtr != rhs_rtr)
 138              		.loc 1 1045 0
 139 003a C0F38073 		ubfx	r3, r0, #30, #1
 140              	.LVL19:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 22


1046:Lib/libcanard/canard.c ****     {
 141              		.loc 1 1046 0
 142 003e 9442     		cmp	r4, r2
 143 0040 04D0     		beq	.L13
 144              	.L9:
1054:Lib/libcanard/canard.c **** }
 145              		.loc 1 1054 0
 146 0042 9442     		cmp	r4, r2
 147 0044 2CBF     		ite	cs
 148 0046 0023     		movcs	r3, #0
 149              	.LVL20:
 150 0048 0123     		movcc	r3, #1
 151 004a ECE7     		b	.L8
 152              	.LVL21:
 153              	.L13:
1046:Lib/libcanard/canard.c ****     {
 154              		.loc 1 1046 0 discriminator 1
 155 004c 9942     		cmp	r1, r3
 156 004e EAD1     		bne	.L8
 157 0050 F7E7     		b	.L9
 158              		.cfi_endproc
 159              	.LFE21:
 161              		.section	.text.extractTransferType,"ax",%progbits
 162              		.align	1
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	extractTransferType:
 169              	.LFB24:
1056:Lib/libcanard/canard.c **** 
1057:Lib/libcanard/canard.c **** /**
1058:Lib/libcanard/canard.c ****  * preps the rx state for the next transfer. does not delete the state
1059:Lib/libcanard/canard.c ****  */
1060:Lib/libcanard/canard.c **** CANARD_INTERNAL void prepareForNextTransfer(CanardRxState* state)
1061:Lib/libcanard/canard.c **** {
1062:Lib/libcanard/canard.c ****     CANARD_ASSERT(state->buffer_blocks == NULL);
1063:Lib/libcanard/canard.c ****     state->transfer_id++;
1064:Lib/libcanard/canard.c ****     state->payload_len = 0;
1065:Lib/libcanard/canard.c ****     state->next_toggle = 0;
1066:Lib/libcanard/canard.c **** }
1067:Lib/libcanard/canard.c **** 
1068:Lib/libcanard/canard.c **** /**
1069:Lib/libcanard/canard.c ****  * returns data type from id
1070:Lib/libcanard/canard.c ****  */
1071:Lib/libcanard/canard.c **** CANARD_INTERNAL uint16_t extractDataType(uint32_t id)
1072:Lib/libcanard/canard.c **** {
1073:Lib/libcanard/canard.c ****     if (extractTransferType(id) == CanardTransferTypeBroadcast)
1074:Lib/libcanard/canard.c ****     {
1075:Lib/libcanard/canard.c ****         uint16_t dtid = MSG_TYPE_FROM_ID(id);
1076:Lib/libcanard/canard.c ****         if (SOURCE_ID_FROM_ID(id) == CANARD_BROADCAST_NODE_ID)
1077:Lib/libcanard/canard.c ****         {
1078:Lib/libcanard/canard.c ****             dtid &= (1U << ANON_MSG_DATA_TYPE_ID_BIT_LEN) - 1U;
1079:Lib/libcanard/canard.c ****         }
1080:Lib/libcanard/canard.c ****         return dtid;
1081:Lib/libcanard/canard.c ****     }
1082:Lib/libcanard/canard.c ****     else
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 23


1083:Lib/libcanard/canard.c ****     {
1084:Lib/libcanard/canard.c ****         return (uint16_t) SRV_TYPE_FROM_ID(id);
1085:Lib/libcanard/canard.c ****     }
1086:Lib/libcanard/canard.c **** }
1087:Lib/libcanard/canard.c **** 
1088:Lib/libcanard/canard.c **** /**
1089:Lib/libcanard/canard.c ****  * returns transfer type from id
1090:Lib/libcanard/canard.c ****  */
1091:Lib/libcanard/canard.c **** CANARD_INTERNAL CanardTransferType extractTransferType(uint32_t id)
1092:Lib/libcanard/canard.c **** {
 170              		.loc 1 1092 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL22:
1093:Lib/libcanard/canard.c ****     const bool is_service = SERVICE_NOT_MSG_FROM_ID(id);
1094:Lib/libcanard/canard.c ****     if (!is_service)
 176              		.loc 1 1094 0
 177 0000 10F0800F 		tst	r0, #128
 178 0004 06D0     		beq	.L16
1095:Lib/libcanard/canard.c ****     {
1096:Lib/libcanard/canard.c ****         return CanardTransferTypeBroadcast;
1097:Lib/libcanard/canard.c ****     }
1098:Lib/libcanard/canard.c ****     else if (REQUEST_NOT_RESPONSE_FROM_ID(id) == 1)
 179              		.loc 1 1098 0
 180 0006 10F4004F 		tst	r0, #32768
 181 000a 01D1     		bne	.L18
1099:Lib/libcanard/canard.c ****     {
1100:Lib/libcanard/canard.c ****         return CanardTransferTypeRequest;
1101:Lib/libcanard/canard.c ****     }
1102:Lib/libcanard/canard.c ****     else
1103:Lib/libcanard/canard.c ****     {
1104:Lib/libcanard/canard.c ****         return CanardTransferTypeResponse;
 182              		.loc 1 1104 0
 183 000c 0020     		movs	r0, #0
 184              	.LVL23:
1105:Lib/libcanard/canard.c ****     }
1106:Lib/libcanard/canard.c **** }
 185              		.loc 1 1106 0
 186 000e 7047     		bx	lr
 187              	.LVL24:
 188              	.L18:
1100:Lib/libcanard/canard.c ****     }
 189              		.loc 1 1100 0
 190 0010 0120     		movs	r0, #1
 191              	.LVL25:
 192 0012 7047     		bx	lr
 193              	.LVL26:
 194              	.L16:
1096:Lib/libcanard/canard.c ****     }
 195              		.loc 1 1096 0
 196 0014 0220     		movs	r0, #2
 197              	.LVL27:
 198 0016 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE24:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 24


 202              		.section	.text.extractDataType,"ax",%progbits
 203              		.align	1
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	extractDataType:
 210              	.LFB23:
1072:Lib/libcanard/canard.c ****     if (extractTransferType(id) == CanardTransferTypeBroadcast)
 211              		.loc 1 1072 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL28:
 216 0000 10B5     		push	{r4, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
 221 0002 0446     		mov	r4, r0
1073:Lib/libcanard/canard.c ****     {
 222              		.loc 1 1073 0
 223 0004 FFF7FEFF 		bl	extractTransferType
 224              	.LVL29:
 225 0008 0228     		cmp	r0, #2
 226 000a 02D0     		beq	.L23
1084:Lib/libcanard/canard.c ****     }
 227              		.loc 1 1084 0
 228 000c C4F30740 		ubfx	r0, r4, #16, #8
 229              	.L21:
1086:Lib/libcanard/canard.c **** 
 230              		.loc 1 1086 0
 231 0010 10BD     		pop	{r4, pc}
 232              	.LVL30:
 233              	.L23:
 234              	.LBB4:
1075:Lib/libcanard/canard.c ****         if (SOURCE_ID_FROM_ID(id) == CANARD_BROADCAST_NODE_ID)
 235              		.loc 1 1075 0
 236 0012 C4F30F20 		ubfx	r0, r4, #8, #16
 237              	.LVL31:
1076:Lib/libcanard/canard.c ****         {
 238              		.loc 1 1076 0
 239 0016 14F07F0F 		tst	r4, #127
 240 001a F9D1     		bne	.L21
1078:Lib/libcanard/canard.c ****         }
 241              		.loc 1 1078 0
 242 001c 00F00300 		and	r0, r0, #3
 243              	.LVL32:
 244 0020 F6E7     		b	.L21
 245              	.LBE4:
 246              		.cfi_endproc
 247              	.LFE23:
 249              		.section	.text.findRxState,"ax",%progbits
 250              		.align	1
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 25


 254              		.fpu fpv4-sp-d16
 256              	findRxState:
 257              	.LFB26:
1107:Lib/libcanard/canard.c **** 
1108:Lib/libcanard/canard.c **** /*
1109:Lib/libcanard/canard.c ****  *  CanardRxState functions
1110:Lib/libcanard/canard.c ****  */
1111:Lib/libcanard/canard.c **** 
1112:Lib/libcanard/canard.c **** /**
1113:Lib/libcanard/canard.c ****  * Traverses the list of CanardRxState's and returns a pointer to the CanardRxState
1114:Lib/libcanard/canard.c ****  * with either the Id or a new one at the end
1115:Lib/libcanard/canard.c ****  */
1116:Lib/libcanard/canard.c **** CANARD_INTERNAL CanardRxState* traverseRxStates(CanardInstance* ins, uint32_t transfer_descriptor)
1117:Lib/libcanard/canard.c **** {
1118:Lib/libcanard/canard.c ****     CanardRxState* states = ins->rx_states;
1119:Lib/libcanard/canard.c **** 
1120:Lib/libcanard/canard.c ****     if (states == NULL) // initialize CanardRxStates
1121:Lib/libcanard/canard.c ****     {
1122:Lib/libcanard/canard.c ****         states = createRxState(&ins->allocator, transfer_descriptor);
1123:Lib/libcanard/canard.c ****         
1124:Lib/libcanard/canard.c ****         if(states == NULL)
1125:Lib/libcanard/canard.c ****         {
1126:Lib/libcanard/canard.c ****             return NULL;
1127:Lib/libcanard/canard.c ****         }
1128:Lib/libcanard/canard.c **** 
1129:Lib/libcanard/canard.c ****         ins->rx_states = states;
1130:Lib/libcanard/canard.c ****         return states;
1131:Lib/libcanard/canard.c ****     }
1132:Lib/libcanard/canard.c **** 
1133:Lib/libcanard/canard.c ****     states = findRxState(states, transfer_descriptor);
1134:Lib/libcanard/canard.c ****     if (states != NULL)
1135:Lib/libcanard/canard.c ****     {
1136:Lib/libcanard/canard.c ****         return states;
1137:Lib/libcanard/canard.c ****     }
1138:Lib/libcanard/canard.c ****     else
1139:Lib/libcanard/canard.c ****     {
1140:Lib/libcanard/canard.c ****         return prependRxState(ins, transfer_descriptor);
1141:Lib/libcanard/canard.c ****     }
1142:Lib/libcanard/canard.c **** }
1143:Lib/libcanard/canard.c **** 
1144:Lib/libcanard/canard.c **** /**
1145:Lib/libcanard/canard.c ****  * returns pointer to the rx state of transfer descriptor or null if not found
1146:Lib/libcanard/canard.c ****  */
1147:Lib/libcanard/canard.c **** CANARD_INTERNAL CanardRxState* findRxState(CanardRxState* state, uint32_t transfer_descriptor)
1148:Lib/libcanard/canard.c **** {
 258              		.loc 1 1148 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              	.LVL33:
 264              	.L25:
1149:Lib/libcanard/canard.c ****     while (state != NULL)
 265              		.loc 1 1149 0
 266 0000 20B1     		cbz	r0, .L26
1150:Lib/libcanard/canard.c ****     {
1151:Lib/libcanard/canard.c ****         if (state->dtid_tt_snid_dnid == transfer_descriptor)
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 26


 267              		.loc 1 1151 0
 268 0002 0369     		ldr	r3, [r0, #16]
 269 0004 8B42     		cmp	r3, r1
 270 0006 01D0     		beq	.L26
1152:Lib/libcanard/canard.c ****         {
1153:Lib/libcanard/canard.c ****             return state;
1154:Lib/libcanard/canard.c ****         }
1155:Lib/libcanard/canard.c ****         state = state->next;
 271              		.loc 1 1155 0
 272 0008 0068     		ldr	r0, [r0]
 273              	.LVL34:
 274 000a F9E7     		b	.L25
 275              	.L26:
1156:Lib/libcanard/canard.c ****     }
1157:Lib/libcanard/canard.c ****     return NULL;
1158:Lib/libcanard/canard.c **** }
 276              		.loc 1 1158 0
 277 000c 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE26:
 281              		.section	.text.isBigEndian,"ax",%progbits
 282              		.align	1
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	isBigEndian:
 289              	.LFB34:
1159:Lib/libcanard/canard.c **** 
1160:Lib/libcanard/canard.c **** /**
1161:Lib/libcanard/canard.c ****  * prepends rx state to the canard instance rx_states
1162:Lib/libcanard/canard.c ****  */
1163:Lib/libcanard/canard.c **** CANARD_INTERNAL CanardRxState* prependRxState(CanardInstance* ins, uint32_t transfer_descriptor)
1164:Lib/libcanard/canard.c **** {
1165:Lib/libcanard/canard.c ****     CanardRxState* state = createRxState(&ins->allocator, transfer_descriptor);
1166:Lib/libcanard/canard.c **** 
1167:Lib/libcanard/canard.c ****     if(state == NULL)
1168:Lib/libcanard/canard.c ****     {
1169:Lib/libcanard/canard.c ****         return NULL;
1170:Lib/libcanard/canard.c ****     }
1171:Lib/libcanard/canard.c **** 
1172:Lib/libcanard/canard.c ****     state->next = ins->rx_states;
1173:Lib/libcanard/canard.c ****     ins->rx_states = state;
1174:Lib/libcanard/canard.c ****     return state;
1175:Lib/libcanard/canard.c **** }
1176:Lib/libcanard/canard.c **** 
1177:Lib/libcanard/canard.c **** CANARD_INTERNAL CanardRxState* createRxState(CanardPoolAllocator* allocator, uint32_t transfer_desc
1178:Lib/libcanard/canard.c **** {
1179:Lib/libcanard/canard.c ****     CanardRxState init = {
1180:Lib/libcanard/canard.c ****         .next = NULL,
1181:Lib/libcanard/canard.c ****         .buffer_blocks = NULL,
1182:Lib/libcanard/canard.c ****         .dtid_tt_snid_dnid = transfer_descriptor
1183:Lib/libcanard/canard.c ****     };
1184:Lib/libcanard/canard.c **** 
1185:Lib/libcanard/canard.c ****     CanardRxState* state = (CanardRxState*) allocateBlock(allocator);
1186:Lib/libcanard/canard.c ****     if (state == NULL)
1187:Lib/libcanard/canard.c ****     {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 27


1188:Lib/libcanard/canard.c ****         return NULL;
1189:Lib/libcanard/canard.c ****     }
1190:Lib/libcanard/canard.c ****     memcpy(state, &init, sizeof(*state));
1191:Lib/libcanard/canard.c **** 
1192:Lib/libcanard/canard.c ****     return state;
1193:Lib/libcanard/canard.c **** }
1194:Lib/libcanard/canard.c **** 
1195:Lib/libcanard/canard.c **** CANARD_INTERNAL uint64_t releaseStatePayload(CanardInstance* ins, CanardRxState* rxstate)
1196:Lib/libcanard/canard.c **** {
1197:Lib/libcanard/canard.c ****     while (rxstate->buffer_blocks != NULL)
1198:Lib/libcanard/canard.c ****     {
1199:Lib/libcanard/canard.c ****         CanardBufferBlock* const temp = rxstate->buffer_blocks->next;
1200:Lib/libcanard/canard.c ****         freeBlock(&ins->allocator, rxstate->buffer_blocks);
1201:Lib/libcanard/canard.c ****         rxstate->buffer_blocks = temp;
1202:Lib/libcanard/canard.c ****     }
1203:Lib/libcanard/canard.c ****     rxstate->payload_len = 0;
1204:Lib/libcanard/canard.c ****     return CANARD_OK;
1205:Lib/libcanard/canard.c **** }
1206:Lib/libcanard/canard.c **** 
1207:Lib/libcanard/canard.c **** /*
1208:Lib/libcanard/canard.c ****  *  CanardBufferBlock functions
1209:Lib/libcanard/canard.c ****  */
1210:Lib/libcanard/canard.c **** 
1211:Lib/libcanard/canard.c **** /**
1212:Lib/libcanard/canard.c ****  * pushes data into the rx state. Fills the buffer head, then appends data to buffer blocks
1213:Lib/libcanard/canard.c ****  */
1214:Lib/libcanard/canard.c **** CANARD_INTERNAL int16_t bufferBlockPushBytes(CanardPoolAllocator* allocator,
1215:Lib/libcanard/canard.c ****                                              CanardRxState* state,
1216:Lib/libcanard/canard.c ****                                              const uint8_t* data,
1217:Lib/libcanard/canard.c ****                                              uint8_t data_len)
1218:Lib/libcanard/canard.c **** {
1219:Lib/libcanard/canard.c ****     uint16_t data_index = 0;
1220:Lib/libcanard/canard.c **** 
1221:Lib/libcanard/canard.c ****     // if head is not full, add data to head
1222:Lib/libcanard/canard.c ****     if ((CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE - state->payload_len) > 0)
1223:Lib/libcanard/canard.c ****     {
1224:Lib/libcanard/canard.c ****         for (uint16_t i = (uint16_t)state->payload_len;
1225:Lib/libcanard/canard.c ****              i < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE && data_index < data_len;
1226:Lib/libcanard/canard.c ****              i++, data_index++)
1227:Lib/libcanard/canard.c ****         {
1228:Lib/libcanard/canard.c ****             state->buffer_head[i] = data[data_index];
1229:Lib/libcanard/canard.c ****         }
1230:Lib/libcanard/canard.c ****         if (data_index >= data_len)
1231:Lib/libcanard/canard.c ****         {
1232:Lib/libcanard/canard.c ****             state->payload_len =
1233:Lib/libcanard/canard.c ****                 (uint16_t)(state->payload_len + data_len) & ((1U << CANARD_TRANSFER_PAYLOAD_LEN_BIT
1234:Lib/libcanard/canard.c ****             return 1;
1235:Lib/libcanard/canard.c ****         }
1236:Lib/libcanard/canard.c ****     } // head is full.
1237:Lib/libcanard/canard.c **** 
1238:Lib/libcanard/canard.c ****     uint16_t index_at_nth_block =
1239:Lib/libcanard/canard.c ****         (uint16_t)(((state->payload_len) - CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE) % CANARD_BUFFER_
1240:Lib/libcanard/canard.c **** 
1241:Lib/libcanard/canard.c ****     // get to current block
1242:Lib/libcanard/canard.c ****     CanardBufferBlock* block = NULL;
1243:Lib/libcanard/canard.c **** 
1244:Lib/libcanard/canard.c ****     // buffer blocks uninitialized
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 28


1245:Lib/libcanard/canard.c ****     if (state->buffer_blocks == NULL)
1246:Lib/libcanard/canard.c ****     {
1247:Lib/libcanard/canard.c ****         state->buffer_blocks = createBufferBlock(allocator);
1248:Lib/libcanard/canard.c **** 
1249:Lib/libcanard/canard.c ****         if (state->buffer_blocks == NULL)
1250:Lib/libcanard/canard.c ****         {
1251:Lib/libcanard/canard.c ****             return -CANARD_ERROR_OUT_OF_MEMORY;
1252:Lib/libcanard/canard.c ****         }
1253:Lib/libcanard/canard.c **** 
1254:Lib/libcanard/canard.c ****         block = state->buffer_blocks;
1255:Lib/libcanard/canard.c ****         index_at_nth_block = 0;
1256:Lib/libcanard/canard.c ****     }
1257:Lib/libcanard/canard.c ****     else
1258:Lib/libcanard/canard.c ****     {
1259:Lib/libcanard/canard.c ****         uint16_t nth_block = 1;
1260:Lib/libcanard/canard.c **** 
1261:Lib/libcanard/canard.c ****         // get to block
1262:Lib/libcanard/canard.c ****         block = state->buffer_blocks;
1263:Lib/libcanard/canard.c ****         while (block->next != NULL)
1264:Lib/libcanard/canard.c ****         {
1265:Lib/libcanard/canard.c ****             nth_block++;
1266:Lib/libcanard/canard.c ****             block = block->next;
1267:Lib/libcanard/canard.c ****         }
1268:Lib/libcanard/canard.c **** 
1269:Lib/libcanard/canard.c ****         const uint16_t num_buffer_blocks =
1270:Lib/libcanard/canard.c ****             (uint16_t) (((((uint32_t)state->payload_len + data_len) - CANARD_MULTIFRAME_RX_PAYLOAD_
1271:Lib/libcanard/canard.c ****                          CANARD_BUFFER_BLOCK_DATA_SIZE) + 1U);
1272:Lib/libcanard/canard.c **** 
1273:Lib/libcanard/canard.c ****         if (num_buffer_blocks > nth_block && index_at_nth_block == 0)
1274:Lib/libcanard/canard.c ****         {
1275:Lib/libcanard/canard.c ****             block->next = createBufferBlock(allocator);
1276:Lib/libcanard/canard.c ****             if (block->next == NULL)
1277:Lib/libcanard/canard.c ****             {
1278:Lib/libcanard/canard.c ****                 return -CANARD_ERROR_OUT_OF_MEMORY;
1279:Lib/libcanard/canard.c ****             }
1280:Lib/libcanard/canard.c ****             block = block->next;
1281:Lib/libcanard/canard.c ****         }
1282:Lib/libcanard/canard.c ****     }
1283:Lib/libcanard/canard.c **** 
1284:Lib/libcanard/canard.c ****     // add data to current block until it becomes full, add new block if necessary
1285:Lib/libcanard/canard.c ****     while (data_index < data_len)
1286:Lib/libcanard/canard.c ****     {
1287:Lib/libcanard/canard.c ****         for (uint16_t i = index_at_nth_block;
1288:Lib/libcanard/canard.c ****              i < CANARD_BUFFER_BLOCK_DATA_SIZE && data_index < data_len;
1289:Lib/libcanard/canard.c ****              i++, data_index++)
1290:Lib/libcanard/canard.c ****         {
1291:Lib/libcanard/canard.c ****             block->data[i] = data[data_index];
1292:Lib/libcanard/canard.c ****         }
1293:Lib/libcanard/canard.c **** 
1294:Lib/libcanard/canard.c ****         if (data_index < data_len)
1295:Lib/libcanard/canard.c ****         {
1296:Lib/libcanard/canard.c ****             block->next = createBufferBlock(allocator);
1297:Lib/libcanard/canard.c ****             if (block->next == NULL)
1298:Lib/libcanard/canard.c ****             {
1299:Lib/libcanard/canard.c ****                 return -CANARD_ERROR_OUT_OF_MEMORY;
1300:Lib/libcanard/canard.c ****             }
1301:Lib/libcanard/canard.c ****             block = block->next;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 29


1302:Lib/libcanard/canard.c ****             index_at_nth_block = 0;
1303:Lib/libcanard/canard.c ****         }
1304:Lib/libcanard/canard.c ****     }
1305:Lib/libcanard/canard.c **** 
1306:Lib/libcanard/canard.c ****     state->payload_len = (uint16_t)(state->payload_len + data_len) & ((1U << CANARD_TRANSFER_PAYLOA
1307:Lib/libcanard/canard.c **** 
1308:Lib/libcanard/canard.c ****     return 1;
1309:Lib/libcanard/canard.c **** }
1310:Lib/libcanard/canard.c **** 
1311:Lib/libcanard/canard.c **** CANARD_INTERNAL CanardBufferBlock* createBufferBlock(CanardPoolAllocator* allocator)
1312:Lib/libcanard/canard.c **** {
1313:Lib/libcanard/canard.c ****     CanardBufferBlock* block = (CanardBufferBlock*) allocateBlock(allocator);
1314:Lib/libcanard/canard.c ****     if (block == NULL)
1315:Lib/libcanard/canard.c ****     {
1316:Lib/libcanard/canard.c ****         return NULL;
1317:Lib/libcanard/canard.c ****     }
1318:Lib/libcanard/canard.c ****     block->next = NULL;
1319:Lib/libcanard/canard.c ****     return block;
1320:Lib/libcanard/canard.c **** }
1321:Lib/libcanard/canard.c **** 
1322:Lib/libcanard/canard.c **** /**
1323:Lib/libcanard/canard.c ****  * Bit array copy routine, originally developed by Ben Dyer for Libuavcan. Thanks Ben.
1324:Lib/libcanard/canard.c ****  */
1325:Lib/libcanard/canard.c **** void copyBitArray(const uint8_t* src, uint32_t src_offset, uint32_t src_len,
1326:Lib/libcanard/canard.c ****                         uint8_t* dst, uint32_t dst_offset)
1327:Lib/libcanard/canard.c **** {
1328:Lib/libcanard/canard.c ****     CANARD_ASSERT(src_len > 0U);
1329:Lib/libcanard/canard.c **** 
1330:Lib/libcanard/canard.c ****     // Normalizing inputs
1331:Lib/libcanard/canard.c ****     src += src_offset / 8U;
1332:Lib/libcanard/canard.c ****     dst += dst_offset / 8U;
1333:Lib/libcanard/canard.c **** 
1334:Lib/libcanard/canard.c ****     src_offset %= 8U;
1335:Lib/libcanard/canard.c ****     dst_offset %= 8U;
1336:Lib/libcanard/canard.c **** 
1337:Lib/libcanard/canard.c ****     const size_t last_bit = src_offset + src_len;
1338:Lib/libcanard/canard.c ****     while (last_bit - src_offset)
1339:Lib/libcanard/canard.c ****     {
1340:Lib/libcanard/canard.c ****         const uint8_t src_bit_offset = (uint8_t)(src_offset % 8U);
1341:Lib/libcanard/canard.c ****         const uint8_t dst_bit_offset = (uint8_t)(dst_offset % 8U);
1342:Lib/libcanard/canard.c **** 
1343:Lib/libcanard/canard.c ****         const uint8_t max_offset = MAX(src_bit_offset, dst_bit_offset);
1344:Lib/libcanard/canard.c ****         const uint32_t copy_bits = MIN(last_bit - src_offset, 8U - max_offset);
1345:Lib/libcanard/canard.c **** 
1346:Lib/libcanard/canard.c ****         const uint8_t write_mask = (uint8_t)((uint8_t)(0xFF00U >> copy_bits) >> dst_bit_offset);
1347:Lib/libcanard/canard.c ****         const uint8_t src_data = (uint8_t)(((uint32_t)src[src_offset / 8U] << src_bit_offset) >> ds
1348:Lib/libcanard/canard.c **** 
1349:Lib/libcanard/canard.c ****         dst[dst_offset / 8U] =
1350:Lib/libcanard/canard.c ****             (uint8_t)(((uint32_t)dst[dst_offset / 8U] & (uint32_t)~write_mask) | (uint32_t)(src_dat
1351:Lib/libcanard/canard.c **** 
1352:Lib/libcanard/canard.c ****         src_offset += copy_bits;
1353:Lib/libcanard/canard.c ****         dst_offset += copy_bits;
1354:Lib/libcanard/canard.c ****     }
1355:Lib/libcanard/canard.c **** }
1356:Lib/libcanard/canard.c **** 
1357:Lib/libcanard/canard.c **** CANARD_INTERNAL int16_t descatterTransferPayload(const CanardRxTransfer* transfer,
1358:Lib/libcanard/canard.c ****                                                  uint32_t bit_offset,
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 30


1359:Lib/libcanard/canard.c ****                                                  uint8_t bit_length,
1360:Lib/libcanard/canard.c ****                                                  void* output)
1361:Lib/libcanard/canard.c **** {
1362:Lib/libcanard/canard.c ****     CANARD_ASSERT(transfer != 0);
1363:Lib/libcanard/canard.c **** 
1364:Lib/libcanard/canard.c ****     if (bit_offset >= transfer->payload_len * 8)
1365:Lib/libcanard/canard.c ****     {
1366:Lib/libcanard/canard.c ****         return 0;       // Out of range, reading zero bits
1367:Lib/libcanard/canard.c ****     }
1368:Lib/libcanard/canard.c **** 
1369:Lib/libcanard/canard.c ****     if (bit_offset + bit_length > transfer->payload_len * 8)
1370:Lib/libcanard/canard.c ****     {
1371:Lib/libcanard/canard.c ****         bit_length = (uint8_t)(transfer->payload_len * 8U - bit_offset);
1372:Lib/libcanard/canard.c ****     }
1373:Lib/libcanard/canard.c **** 
1374:Lib/libcanard/canard.c ****     CANARD_ASSERT(bit_length > 0);
1375:Lib/libcanard/canard.c **** 
1376:Lib/libcanard/canard.c ****     if ((transfer->payload_middle != NULL) || (transfer->payload_tail != NULL)) // Multi frame
1377:Lib/libcanard/canard.c ****     {
1378:Lib/libcanard/canard.c ****         /*
1379:Lib/libcanard/canard.c ****          * This part is hideously complicated and probably should be redesigned.
1380:Lib/libcanard/canard.c ****          * The objective here is to copy the requested number of bits from scattered storage into t
1381:Lib/libcanard/canard.c ****          * local storage. We go through great pains to ensure that all corner cases are handled cor
1382:Lib/libcanard/canard.c ****          */
1383:Lib/libcanard/canard.c ****         uint32_t input_bit_offset = bit_offset;
1384:Lib/libcanard/canard.c ****         uint8_t output_bit_offset = 0;
1385:Lib/libcanard/canard.c ****         uint8_t remaining_bit_length = bit_length;
1386:Lib/libcanard/canard.c **** 
1387:Lib/libcanard/canard.c ****         // Reading head
1388:Lib/libcanard/canard.c ****         if (input_bit_offset < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE * 8)
1389:Lib/libcanard/canard.c ****         {
1390:Lib/libcanard/canard.c ****             const uint8_t amount = (uint8_t)MIN(remaining_bit_length,
1391:Lib/libcanard/canard.c ****                                                 CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE * 8U - input
1392:Lib/libcanard/canard.c **** 
1393:Lib/libcanard/canard.c ****             copyBitArray(&transfer->payload_head[0], input_bit_offset, amount, (uint8_t*) output, 0
1394:Lib/libcanard/canard.c **** 
1395:Lib/libcanard/canard.c ****             input_bit_offset += amount;
1396:Lib/libcanard/canard.c ****             output_bit_offset = (uint8_t)(output_bit_offset + amount);
1397:Lib/libcanard/canard.c ****             remaining_bit_length = (uint8_t)(remaining_bit_length - amount);
1398:Lib/libcanard/canard.c ****         }
1399:Lib/libcanard/canard.c **** 
1400:Lib/libcanard/canard.c ****         // Reading middle
1401:Lib/libcanard/canard.c ****         uint32_t remaining_bits = transfer->payload_len * 8U - CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SI
1402:Lib/libcanard/canard.c ****         uint32_t block_bit_offset = CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE * 8U;
1403:Lib/libcanard/canard.c ****         const CanardBufferBlock* block = transfer->payload_middle;
1404:Lib/libcanard/canard.c **** 
1405:Lib/libcanard/canard.c ****         while ((block != NULL) && (remaining_bit_length > 0))
1406:Lib/libcanard/canard.c ****         {
1407:Lib/libcanard/canard.c ****             CANARD_ASSERT(remaining_bits > 0);
1408:Lib/libcanard/canard.c ****             const uint32_t block_end_bit_offset = block_bit_offset + MIN(CANARD_BUFFER_BLOCK_DATA_S
1409:Lib/libcanard/canard.c ****                                                                          remaining_bits);
1410:Lib/libcanard/canard.c **** 
1411:Lib/libcanard/canard.c ****             // Perform copy if we've reached the requested offset, otherwise jump over this block a
1412:Lib/libcanard/canard.c ****             if (block_end_bit_offset > input_bit_offset)
1413:Lib/libcanard/canard.c ****             {
1414:Lib/libcanard/canard.c ****                 const uint8_t amount = (uint8_t) MIN(remaining_bit_length, block_end_bit_offset - i
1415:Lib/libcanard/canard.c **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 31


1416:Lib/libcanard/canard.c ****                 CANARD_ASSERT(input_bit_offset >= block_bit_offset);
1417:Lib/libcanard/canard.c ****                 const uint32_t bit_offset_within_block = input_bit_offset - block_bit_offset;
1418:Lib/libcanard/canard.c **** 
1419:Lib/libcanard/canard.c ****                 copyBitArray(&block->data[0], bit_offset_within_block, amount, (uint8_t*) output, o
1420:Lib/libcanard/canard.c **** 
1421:Lib/libcanard/canard.c ****                 input_bit_offset += amount;
1422:Lib/libcanard/canard.c ****                 output_bit_offset = (uint8_t)(output_bit_offset + amount);
1423:Lib/libcanard/canard.c ****                 remaining_bit_length = (uint8_t)(remaining_bit_length - amount);
1424:Lib/libcanard/canard.c ****             }
1425:Lib/libcanard/canard.c **** 
1426:Lib/libcanard/canard.c ****             CANARD_ASSERT(block_end_bit_offset > block_bit_offset);
1427:Lib/libcanard/canard.c ****             remaining_bits -= block_end_bit_offset - block_bit_offset;
1428:Lib/libcanard/canard.c ****             block_bit_offset = block_end_bit_offset;
1429:Lib/libcanard/canard.c ****             block = block->next;
1430:Lib/libcanard/canard.c ****         }
1431:Lib/libcanard/canard.c **** 
1432:Lib/libcanard/canard.c ****         CANARD_ASSERT(remaining_bit_length <= remaining_bits);
1433:Lib/libcanard/canard.c **** 
1434:Lib/libcanard/canard.c ****         // Reading tail
1435:Lib/libcanard/canard.c ****         if ((transfer->payload_tail != NULL) && (remaining_bit_length > 0))
1436:Lib/libcanard/canard.c ****         {
1437:Lib/libcanard/canard.c ****             CANARD_ASSERT(input_bit_offset >= block_bit_offset);
1438:Lib/libcanard/canard.c ****             const uint32_t offset = input_bit_offset - block_bit_offset;
1439:Lib/libcanard/canard.c **** 
1440:Lib/libcanard/canard.c ****             copyBitArray(&transfer->payload_tail[0], offset, remaining_bit_length, (uint8_t*) outpu
1441:Lib/libcanard/canard.c ****                          output_bit_offset);
1442:Lib/libcanard/canard.c **** 
1443:Lib/libcanard/canard.c ****             input_bit_offset += remaining_bit_length;
1444:Lib/libcanard/canard.c ****             output_bit_offset = (uint8_t)(output_bit_offset + remaining_bit_length);
1445:Lib/libcanard/canard.c ****             remaining_bit_length = 0;
1446:Lib/libcanard/canard.c ****         }
1447:Lib/libcanard/canard.c **** 
1448:Lib/libcanard/canard.c ****         CANARD_ASSERT(input_bit_offset <= transfer->payload_len * 8);
1449:Lib/libcanard/canard.c ****         CANARD_ASSERT(output_bit_offset <= 64);
1450:Lib/libcanard/canard.c ****         CANARD_ASSERT(remaining_bit_length == 0);
1451:Lib/libcanard/canard.c ****     }
1452:Lib/libcanard/canard.c ****     else                                                                    // Single frame
1453:Lib/libcanard/canard.c ****     {
1454:Lib/libcanard/canard.c ****         copyBitArray(&transfer->payload_head[0], bit_offset, bit_length, (uint8_t*) output, 0);
1455:Lib/libcanard/canard.c ****     }
1456:Lib/libcanard/canard.c **** 
1457:Lib/libcanard/canard.c ****     return bit_length;
1458:Lib/libcanard/canard.c **** }
1459:Lib/libcanard/canard.c **** 
1460:Lib/libcanard/canard.c **** CANARD_INTERNAL bool isBigEndian(void)
1461:Lib/libcanard/canard.c **** {
 290              		.loc 1 1461 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
1462:Lib/libcanard/canard.c **** #if defined(BYTE_ORDER) && defined(BIG_ENDIAN)
1463:Lib/libcanard/canard.c ****     return BYTE_ORDER == BIG_ENDIAN;                // Some compilers offer this neat shortcut
1464:Lib/libcanard/canard.c **** #else
1465:Lib/libcanard/canard.c ****     union
1466:Lib/libcanard/canard.c ****     {
1467:Lib/libcanard/canard.c ****         uint16_t a;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 32


1468:Lib/libcanard/canard.c ****         uint8_t b[2];
1469:Lib/libcanard/canard.c ****     } u;
1470:Lib/libcanard/canard.c ****     u.a = 1;
1471:Lib/libcanard/canard.c ****     return u.b[1] == 1;                             // Some don't...
1472:Lib/libcanard/canard.c **** #endif
1473:Lib/libcanard/canard.c **** }
 295              		.loc 1 1473 0
 296 0000 0020     		movs	r0, #0
 297 0002 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE34:
 301              		.section	.text.crcAddByte,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	crcAddByte:
 309              	.LFB36:
1474:Lib/libcanard/canard.c **** 
1475:Lib/libcanard/canard.c **** CANARD_INTERNAL void swapByteOrder(void* data, size_t size)
1476:Lib/libcanard/canard.c **** {
1477:Lib/libcanard/canard.c ****     CANARD_ASSERT(data != NULL);
1478:Lib/libcanard/canard.c **** 
1479:Lib/libcanard/canard.c ****     uint8_t* const bytes = (uint8_t*) data;
1480:Lib/libcanard/canard.c **** 
1481:Lib/libcanard/canard.c ****     size_t fwd = 0;
1482:Lib/libcanard/canard.c ****     size_t rev = size - 1;
1483:Lib/libcanard/canard.c **** 
1484:Lib/libcanard/canard.c ****     while (fwd < rev)
1485:Lib/libcanard/canard.c ****     {
1486:Lib/libcanard/canard.c ****         const uint8_t x = bytes[fwd];
1487:Lib/libcanard/canard.c ****         bytes[fwd] = bytes[rev];
1488:Lib/libcanard/canard.c ****         bytes[rev] = x;
1489:Lib/libcanard/canard.c ****         fwd++;
1490:Lib/libcanard/canard.c ****         rev--;
1491:Lib/libcanard/canard.c ****     }
1492:Lib/libcanard/canard.c **** }
1493:Lib/libcanard/canard.c **** 
1494:Lib/libcanard/canard.c **** /*
1495:Lib/libcanard/canard.c ****  * CRC functions
1496:Lib/libcanard/canard.c ****  */
1497:Lib/libcanard/canard.c **** CANARD_INTERNAL uint16_t crcAddByte(uint16_t crc_val, uint8_t byte)
1498:Lib/libcanard/canard.c **** {
 310              		.loc 1 1498 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL35:
1499:Lib/libcanard/canard.c ****     crc_val ^= (uint16_t) ((uint16_t) (byte) << 8U);
 316              		.loc 1 1499 0
 317 0000 80EA0120 		eor	r0, r0, r1, lsl #8
 318              	.LVL36:
 319              	.LBB5:
1500:Lib/libcanard/canard.c ****     for (uint8_t j = 0; j < 8; j++)
 320              		.loc 1 1500 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 33


 321 0004 0023     		movs	r3, #0
 322 0006 07E0     		b	.L30
 323              	.LVL37:
 324              	.L35:
1501:Lib/libcanard/canard.c ****     {
1502:Lib/libcanard/canard.c ****         if (crc_val & 0x8000U)
1503:Lib/libcanard/canard.c ****         {
1504:Lib/libcanard/canard.c ****             crc_val = (uint16_t) ((uint16_t) (crc_val << 1U) ^ 0x1021U);
 325              		.loc 1 1504 0
 326 0008 4000     		lsls	r0, r0, #1
 327              	.LVL38:
 328 000a 80B2     		uxth	r0, r0
 329 000c 80F48150 		eor	r0, r0, #4128
 330 0010 80F00100 		eor	r0, r0, #1
 331              	.LVL39:
 332              	.L32:
1500:Lib/libcanard/canard.c ****     for (uint8_t j = 0; j < 8; j++)
 333              		.loc 1 1500 0 discriminator 2
 334 0014 0133     		adds	r3, r3, #1
 335              	.LVL40:
 336 0016 DBB2     		uxtb	r3, r3
 337              	.LVL41:
 338              	.L30:
1500:Lib/libcanard/canard.c ****     for (uint8_t j = 0; j < 8; j++)
 339              		.loc 1 1500 0 is_stmt 0 discriminator 1
 340 0018 072B     		cmp	r3, #7
 341 001a 05D8     		bhi	.L34
1502:Lib/libcanard/canard.c ****         {
 342              		.loc 1 1502 0 is_stmt 1
 343 001c 10F4004F 		tst	r0, #32768
 344 0020 F2D1     		bne	.L35
1505:Lib/libcanard/canard.c ****         }
1506:Lib/libcanard/canard.c ****         else
1507:Lib/libcanard/canard.c ****         {
1508:Lib/libcanard/canard.c ****             crc_val = (uint16_t) (crc_val << 1U);
 345              		.loc 1 1508 0
 346 0022 4000     		lsls	r0, r0, #1
 347              	.LVL42:
 348 0024 80B2     		uxth	r0, r0
 349              	.LVL43:
 350 0026 F5E7     		b	.L32
 351              	.L34:
 352              	.LBE5:
1509:Lib/libcanard/canard.c ****         }
1510:Lib/libcanard/canard.c ****     }
1511:Lib/libcanard/canard.c ****     return crc_val;
1512:Lib/libcanard/canard.c **** }
 353              		.loc 1 1512 0
 354 0028 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE36:
 358              		.section	.text.crcAddSignature,"ax",%progbits
 359              		.align	1
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 34


 365              	crcAddSignature:
 366              	.LFB37:
1513:Lib/libcanard/canard.c **** 
1514:Lib/libcanard/canard.c **** CANARD_INTERNAL uint16_t crcAddSignature(uint16_t crc_val, uint64_t data_type_signature)
1515:Lib/libcanard/canard.c **** {
 367              		.loc 1 1515 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL44:
 372 0000 70B5     		push	{r4, r5, r6, lr}
 373              	.LCFI4:
 374              		.cfi_def_cfa_offset 16
 375              		.cfi_offset 4, -16
 376              		.cfi_offset 5, -12
 377              		.cfi_offset 6, -8
 378              		.cfi_offset 14, -4
 379 0002 1646     		mov	r6, r2
 380 0004 1D46     		mov	r5, r3
 381              	.LVL45:
 382              	.LBB6:
1516:Lib/libcanard/canard.c ****     for (uint16_t shift_val = 0; shift_val < 64; shift_val = (uint16_t)(shift_val + 8U))
 383              		.loc 1 1516 0
 384 0006 0024     		movs	r4, #0
 385 0008 10E0     		b	.L37
 386              	.LVL46:
 387              	.L38:
1517:Lib/libcanard/canard.c ****     {
1518:Lib/libcanard/canard.c ****         crc_val = crcAddByte(crc_val, (uint8_t) (data_type_signature >> shift_val));
 388              		.loc 1 1518 0 discriminator 3
 389 000a C4F12002 		rsb	r2, r4, #32
 390 000e A4F12003 		sub	r3, r4, #32
 391 0012 26FA04F1 		lsr	r1, r6, r4
 392 0016 05FA02F2 		lsl	r2, r5, r2
 393 001a 1143     		orrs	r1, r1, r2
 394 001c 25FA03F3 		lsr	r3, r5, r3
 395 0020 1943     		orrs	r1, r1, r3
 396 0022 C9B2     		uxtb	r1, r1
 397 0024 FFF7FEFF 		bl	crcAddByte
 398              	.LVL47:
1516:Lib/libcanard/canard.c ****     for (uint16_t shift_val = 0; shift_val < 64; shift_val = (uint16_t)(shift_val + 8U))
 399              		.loc 1 1516 0 discriminator 3
 400 0028 0834     		adds	r4, r4, #8
 401              	.LVL48:
 402 002a A4B2     		uxth	r4, r4
 403              	.LVL49:
 404              	.L37:
1516:Lib/libcanard/canard.c ****     for (uint16_t shift_val = 0; shift_val < 64; shift_val = (uint16_t)(shift_val + 8U))
 405              		.loc 1 1516 0 is_stmt 0 discriminator 1
 406 002c 3F2C     		cmp	r4, #63
 407 002e ECD9     		bls	.L38
 408              	.LBE6:
1519:Lib/libcanard/canard.c ****     }
1520:Lib/libcanard/canard.c ****     return crc_val;
1521:Lib/libcanard/canard.c **** }
 409              		.loc 1 1521 0 is_stmt 1
 410 0030 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 35


 411              		.cfi_endproc
 412              	.LFE37:
 414              		.section	.text.crcAdd,"ax",%progbits
 415              		.align	1
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	crcAdd:
 422              	.LFB38:
1522:Lib/libcanard/canard.c **** 
1523:Lib/libcanard/canard.c **** CANARD_INTERNAL uint16_t crcAdd(uint16_t crc_val, const uint8_t* bytes, size_t len)
1524:Lib/libcanard/canard.c **** {
 423              		.loc 1 1524 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL50:
 428 0000 38B5     		push	{r3, r4, r5, lr}
 429              	.LCFI5:
 430              		.cfi_def_cfa_offset 16
 431              		.cfi_offset 3, -16
 432              		.cfi_offset 4, -12
 433              		.cfi_offset 5, -8
 434              		.cfi_offset 14, -4
1525:Lib/libcanard/canard.c ****     while (len--)
 435              		.loc 1 1525 0
 436 0002 05E0     		b	.L41
 437              	.LVL51:
 438              	.L42:
1526:Lib/libcanard/canard.c ****     {
1527:Lib/libcanard/canard.c ****         crc_val = crcAddByte(crc_val, *bytes++);
 439              		.loc 1 1527 0
 440 0004 4D1C     		adds	r5, r1, #1
 441              	.LVL52:
 442 0006 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 443 0008 FFF7FEFF 		bl	crcAddByte
 444              	.LVL53:
1525:Lib/libcanard/canard.c ****     while (len--)
 445              		.loc 1 1525 0
 446 000c 2246     		mov	r2, r4
 447              		.loc 1 1527 0
 448 000e 2946     		mov	r1, r5
 449              	.LVL54:
 450              	.L41:
1525:Lib/libcanard/canard.c ****     while (len--)
 451              		.loc 1 1525 0
 452 0010 541E     		subs	r4, r2, #1
 453              	.LVL55:
 454 0012 002A     		cmp	r2, #0
 455 0014 F6D1     		bne	.L42
1528:Lib/libcanard/canard.c ****     }
1529:Lib/libcanard/canard.c ****     return crc_val;
1530:Lib/libcanard/canard.c **** }
 456              		.loc 1 1530 0
 457 0016 38BD     		pop	{r3, r4, r5, pc}
 458              		.cfi_endproc
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 36


 459              	.LFE38:
 461              		.section	.text.initPoolAllocator,"ax",%progbits
 462              		.align	1
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	initPoolAllocator:
 469              	.LFB39:
1531:Lib/libcanard/canard.c **** 
1532:Lib/libcanard/canard.c **** /*
1533:Lib/libcanard/canard.c ****  *  Pool Allocator functions
1534:Lib/libcanard/canard.c ****  */
1535:Lib/libcanard/canard.c **** CANARD_INTERNAL void initPoolAllocator(CanardPoolAllocator* allocator,
1536:Lib/libcanard/canard.c ****                                        CanardPoolAllocatorBlock* buf,
1537:Lib/libcanard/canard.c ****                                        uint16_t buf_len)
1538:Lib/libcanard/canard.c **** {
 470              		.loc 1 1538 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL56:
 476 0000 30B4     		push	{r4, r5}
 477              	.LCFI6:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 4, -8
 480              		.cfi_offset 5, -4
 481              	.LVL57:
1539:Lib/libcanard/canard.c ****     size_t current_index = 0;
1540:Lib/libcanard/canard.c ****     CanardPoolAllocatorBlock** current_block = &(allocator->free_list);
 482              		.loc 1 1540 0
 483 0002 0546     		mov	r5, r0
 484              	.LVL58:
1539:Lib/libcanard/canard.c ****     size_t current_index = 0;
 485              		.loc 1 1539 0
 486 0004 0023     		movs	r3, #0
1541:Lib/libcanard/canard.c ****     while (current_index < buf_len)
 487              		.loc 1 1541 0
 488 0006 04E0     		b	.L45
 489              	.LVL59:
 490              	.L46:
1542:Lib/libcanard/canard.c ****     {
1543:Lib/libcanard/canard.c ****         *current_block = &buf[current_index];
 491              		.loc 1 1543 0
 492 0008 01EB4314 		add	r4, r1, r3, lsl #5
 493 000c 2C60     		str	r4, [r5]
1544:Lib/libcanard/canard.c ****         current_block = &((*current_block)->next);
 494              		.loc 1 1544 0
 495 000e 2546     		mov	r5, r4
 496              	.LVL60:
1545:Lib/libcanard/canard.c ****         current_index++;
 497              		.loc 1 1545 0
 498 0010 0133     		adds	r3, r3, #1
 499              	.LVL61:
 500              	.L45:
1541:Lib/libcanard/canard.c ****     {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 37


 501              		.loc 1 1541 0
 502 0012 9A42     		cmp	r2, r3
 503 0014 F8D8     		bhi	.L46
1546:Lib/libcanard/canard.c ****     }
1547:Lib/libcanard/canard.c ****     *current_block = NULL;
 504              		.loc 1 1547 0
 505 0016 0023     		movs	r3, #0
 506              	.LVL62:
 507 0018 2B60     		str	r3, [r5]
1548:Lib/libcanard/canard.c **** 
1549:Lib/libcanard/canard.c ****     allocator->statistics.capacity_blocks = buf_len;
 508              		.loc 1 1549 0
 509 001a 8280     		strh	r2, [r0, #4]	@ movhi
1550:Lib/libcanard/canard.c ****     allocator->statistics.current_usage_blocks = 0;
 510              		.loc 1 1550 0
 511 001c C380     		strh	r3, [r0, #6]	@ movhi
1551:Lib/libcanard/canard.c ****     allocator->statistics.peak_usage_blocks = 0;
 512              		.loc 1 1551 0
 513 001e 0381     		strh	r3, [r0, #8]	@ movhi
1552:Lib/libcanard/canard.c **** }
 514              		.loc 1 1552 0
 515 0020 30BC     		pop	{r4, r5}
 516              	.LCFI7:
 517              		.cfi_restore 5
 518              		.cfi_restore 4
 519              		.cfi_def_cfa_offset 0
 520              	.LVL63:
 521 0022 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE39:
 525              		.section	.text.allocateBlock,"ax",%progbits
 526              		.align	1
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv4-sp-d16
 532              	allocateBlock:
 533              	.LFB40:
1553:Lib/libcanard/canard.c **** 
1554:Lib/libcanard/canard.c **** CANARD_INTERNAL void* allocateBlock(CanardPoolAllocator* allocator)
1555:Lib/libcanard/canard.c **** {
 534              		.loc 1 1555 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539              	.LVL64:
 540 0000 0246     		mov	r2, r0
1556:Lib/libcanard/canard.c ****     // Check if there are any blocks available in the free list.
1557:Lib/libcanard/canard.c ****     if (allocator->free_list == NULL)
 541              		.loc 1 1557 0
 542 0002 0068     		ldr	r0, [r0]
 543              	.LVL65:
 544 0004 50B1     		cbz	r0, .L50
 545              	.LVL66:
1558:Lib/libcanard/canard.c ****     {
1559:Lib/libcanard/canard.c ****         return NULL;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 38


1560:Lib/libcanard/canard.c ****     }
1561:Lib/libcanard/canard.c **** 
1562:Lib/libcanard/canard.c ****     // Take first available block and prepares next block for use.
1563:Lib/libcanard/canard.c ****     void* result = allocator->free_list;
1564:Lib/libcanard/canard.c ****     allocator->free_list = allocator->free_list->next;
 546              		.loc 1 1564 0
 547 0006 0368     		ldr	r3, [r0]
 548 0008 1360     		str	r3, [r2]
1565:Lib/libcanard/canard.c **** 
1566:Lib/libcanard/canard.c ****     // Update statistics
1567:Lib/libcanard/canard.c ****     allocator->statistics.current_usage_blocks++;
 549              		.loc 1 1567 0
 550 000a D388     		ldrh	r3, [r2, #6]
 551 000c 0133     		adds	r3, r3, #1
 552 000e 9BB2     		uxth	r3, r3
 553 0010 D380     		strh	r3, [r2, #6]	@ movhi
1568:Lib/libcanard/canard.c ****     if (allocator->statistics.peak_usage_blocks < allocator->statistics.current_usage_blocks)
 554              		.loc 1 1568 0
 555 0012 1189     		ldrh	r1, [r2, #8]
 556 0014 8B42     		cmp	r3, r1
 557 0016 02D9     		bls	.L48
1569:Lib/libcanard/canard.c ****     {
1570:Lib/libcanard/canard.c ****         allocator->statistics.peak_usage_blocks = allocator->statistics.current_usage_blocks;
 558              		.loc 1 1570 0
 559 0018 1381     		strh	r3, [r2, #8]	@ movhi
 560 001a 7047     		bx	lr
 561              	.LVL67:
 562              	.L50:
1559:Lib/libcanard/canard.c ****     }
 563              		.loc 1 1559 0
 564 001c 0020     		movs	r0, #0
 565              	.L48:
1571:Lib/libcanard/canard.c ****     }
1572:Lib/libcanard/canard.c **** 
1573:Lib/libcanard/canard.c ****     return result;
1574:Lib/libcanard/canard.c **** }
 566              		.loc 1 1574 0
 567 001e 7047     		bx	lr
 568              		.cfi_endproc
 569              	.LFE40:
 571              		.section	.text.createBufferBlock,"ax",%progbits
 572              		.align	1
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	createBufferBlock:
 579              	.LFB31:
1312:Lib/libcanard/canard.c ****     CanardBufferBlock* block = (CanardBufferBlock*) allocateBlock(allocator);
 580              		.loc 1 1312 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              	.LVL68:
 585 0000 08B5     		push	{r3, lr}
 586              	.LCFI8:
 587              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 39


 588              		.cfi_offset 3, -8
 589              		.cfi_offset 14, -4
1313:Lib/libcanard/canard.c ****     if (block == NULL)
 590              		.loc 1 1313 0
 591 0002 FFF7FEFF 		bl	allocateBlock
 592              	.LVL69:
1314:Lib/libcanard/canard.c ****     {
 593              		.loc 1 1314 0
 594 0006 0346     		mov	r3, r0
 595 0008 08B1     		cbz	r0, .L51
1318:Lib/libcanard/canard.c ****     return block;
 596              		.loc 1 1318 0
 597 000a 0022     		movs	r2, #0
 598 000c 0260     		str	r2, [r0]
 599              	.L51:
1320:Lib/libcanard/canard.c **** 
 600              		.loc 1 1320 0
 601 000e 1846     		mov	r0, r3
 602              	.LVL70:
 603 0010 08BD     		pop	{r3, pc}
 604              		.cfi_endproc
 605              	.LFE31:
 607              		.section	.text.bufferBlockPushBytes,"ax",%progbits
 608              		.align	1
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	bufferBlockPushBytes:
 615              	.LFB30:
1218:Lib/libcanard/canard.c ****     uint16_t data_index = 0;
 616              		.loc 1 1218 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              	.LVL71:
 621 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 622              	.LCFI9:
 623              		.cfi_def_cfa_offset 40
 624              		.cfi_offset 3, -40
 625              		.cfi_offset 4, -36
 626              		.cfi_offset 5, -32
 627              		.cfi_offset 6, -28
 628              		.cfi_offset 7, -24
 629              		.cfi_offset 8, -20
 630              		.cfi_offset 9, -16
 631              		.cfi_offset 10, -12
 632              		.cfi_offset 11, -8
 633              		.cfi_offset 14, -4
 634              	.LVL72:
1222:Lib/libcanard/canard.c ****     {
 635              		.loc 1 1222 0
 636 0004 CC8A     		ldrh	r4, [r1, #22]
 637 0006 C4F30904 		ubfx	r4, r4, #0, #10
 638 000a 062C     		cmp	r4, #6
 639 000c 1CD0     		beq	.L69
 640              	.LBB7:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 40


1224:Lib/libcanard/canard.c ****              i < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE && data_index < data_len;
 641              		.loc 1 1224 0
 642 000e 2646     		mov	r6, r4
 643              	.LVL73:
 644 0010 2546     		mov	r5, r4
 645              	.LBE7:
1219:Lib/libcanard/canard.c **** 
 646              		.loc 1 1219 0
 647 0012 0024     		movs	r4, #0
 648              	.LVL74:
 649              	.L56:
 650              	.LBB8:
1224:Lib/libcanard/canard.c ****              i < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE && data_index < data_len;
 651              		.loc 1 1224 0 discriminator 1
 652 0014 052D     		cmp	r5, #5
 653 0016 02D8     		bhi	.L57
1225:Lib/libcanard/canard.c ****              i++, data_index++)
 654              		.loc 1 1225 0
 655 0018 9FB2     		uxth	r7, r3
 656 001a A742     		cmp	r7, r4
 657 001c 0AD8     		bhi	.L58
 658              	.L57:
 659              	.LBE8:
1230:Lib/libcanard/canard.c ****         {
 660              		.loc 1 1230 0
 661 001e 9DB2     		uxth	r5, r3
 662              	.LVL75:
 663 0020 A542     		cmp	r5, r4
 664 0022 12D8     		bhi	.L55
1233:Lib/libcanard/canard.c ****             return 1;
 665              		.loc 1 1233 0
 666 0024 3544     		add	r5, r5, r6
1232:Lib/libcanard/canard.c ****                 (uint16_t)(state->payload_len + data_len) & ((1U << CANARD_TRANSFER_PAYLOAD_LEN_BIT
 667              		.loc 1 1232 0
 668 0026 CB8A     		ldrh	r3, [r1, #22]
 669              	.LVL76:
 670 0028 65F30903 		bfi	r3, r5, #0, #10
 671 002c CB82     		strh	r3, [r1, #22]	@ movhi
1234:Lib/libcanard/canard.c ****         }
 672              		.loc 1 1234 0
 673 002e 0120     		movs	r0, #1
 674              	.LVL77:
 675              	.L59:
1309:Lib/libcanard/canard.c **** 
 676              		.loc 1 1309 0
 677 0030 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 678              	.LVL78:
 679              	.L58:
 680              	.LBB9:
1228:Lib/libcanard/canard.c ****         }
 681              		.loc 1 1228 0
 682 0034 12F804C0 		ldrb	ip, [r2, r4]	@ zero_extendqisi2
 683 0038 4F19     		adds	r7, r1, r5
 684 003a 87F81AC0 		strb	ip, [r7, #26]
1226:Lib/libcanard/canard.c ****         {
 685              		.loc 1 1226 0
 686 003e 0135     		adds	r5, r5, #1
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 41


 687              	.LVL79:
 688 0040 ADB2     		uxth	r5, r5
 689              	.LVL80:
 690 0042 0134     		adds	r4, r4, #1
 691              	.LVL81:
 692 0044 A4B2     		uxth	r4, r4
 693              	.LVL82:
 694 0046 E5E7     		b	.L56
 695              	.LVL83:
 696              	.L69:
 697              	.LBE9:
1219:Lib/libcanard/canard.c **** 
 698              		.loc 1 1219 0
 699 0048 0024     		movs	r4, #0
 700              	.LVL84:
 701              	.L55:
 702 004a 9946     		mov	r9, r3
 703 004c 9346     		mov	fp, r2
 704 004e 0E46     		mov	r6, r1
 705 0050 8246     		mov	r10, r0
 706              	.LVL85:
1239:Lib/libcanard/canard.c **** 
 707              		.loc 1 1239 0
 708 0052 CD8A     		ldrh	r5, [r1, #22]
 709 0054 C5F30905 		ubfx	r5, r5, #0, #10
 710 0058 AA1F     		subs	r2, r5, #6
 711              	.LVL86:
 712 005a 1C23     		movs	r3, #28
 713              	.LVL87:
 714 005c B2FBF3F8 		udiv	r8, r2, r3
 715 0060 03FB1828 		mls	r8, r3, r8, r2
1238:Lib/libcanard/canard.c ****         (uint16_t)(((state->payload_len) - CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE) % CANARD_BUFFER_
 716              		.loc 1 1238 0
 717 0064 1FFA88F8 		uxth	r8, r8
 718              	.LVL88:
1245:Lib/libcanard/canard.c ****     {
 719              		.loc 1 1245 0
 720 0068 4F68     		ldr	r7, [r1, #4]
 721 006a 7FBB     		cbnz	r7, .L70
1247:Lib/libcanard/canard.c **** 
 722              		.loc 1 1247 0
 723 006c FFF7FEFF 		bl	createBufferBlock
 724              	.LVL89:
 725 0070 0746     		mov	r7, r0
 726 0072 7060     		str	r0, [r6, #4]
1249:Lib/libcanard/canard.c ****         {
 727              		.loc 1 1249 0
 728 0074 0028     		cmp	r0, #0
 729 0076 46D0     		beq	.L71
1255:Lib/libcanard/canard.c ****     }
 730              		.loc 1 1255 0
 731 0078 4FF00008 		mov	r8, #0
 732              	.LVL90:
 733              	.L64:
1285:Lib/libcanard/canard.c ****     {
 734              		.loc 1 1285 0
 735 007c 1FFA89F1 		uxth	r1, r9
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 42


 736 0080 A142     		cmp	r1, r4
 737 0082 3CD8     		bhi	.L75
1306:Lib/libcanard/canard.c **** 
 738              		.loc 1 1306 0
 739 0084 F28A     		ldrh	r2, [r6, #22]
 740 0086 C2F30903 		ubfx	r3, r2, #0, #10
 741 008a 0B44     		add	r3, r3, r1
 742 008c 63F30902 		bfi	r2, r3, #0, #10
 743 0090 F282     		strh	r2, [r6, #22]	@ movhi
1308:Lib/libcanard/canard.c **** }
 744              		.loc 1 1308 0
 745 0092 0120     		movs	r0, #1
 746 0094 CCE7     		b	.L59
 747              	.LVL91:
 748              	.L62:
 749              	.LBB10:
1265:Lib/libcanard/canard.c ****             block = block->next;
 750              		.loc 1 1265 0
 751 0096 0132     		adds	r2, r2, #1
 752              	.LVL92:
 753 0098 92B2     		uxth	r2, r2
 754              	.LVL93:
1266:Lib/libcanard/canard.c ****         }
 755              		.loc 1 1266 0
 756 009a 1F46     		mov	r7, r3
 757              	.LVL94:
 758              	.L60:
1263:Lib/libcanard/canard.c ****         {
 759              		.loc 1 1263 0
 760 009c 3B68     		ldr	r3, [r7]
 761 009e 002B     		cmp	r3, #0
 762 00a0 F9D1     		bne	.L62
1270:Lib/libcanard/canard.c ****                          CANARD_BUFFER_BLOCK_DATA_SIZE) + 1U);
 763              		.loc 1 1270 0
 764 00a2 09EB0503 		add	r3, r9, r5
 765 00a6 063B     		subs	r3, r3, #6
 766 00a8 1C25     		movs	r5, #28
 767 00aa B3FBF5F3 		udiv	r3, r3, r5
 768 00ae 9BB2     		uxth	r3, r3
1269:Lib/libcanard/canard.c ****             (uint16_t) (((((uint32_t)state->payload_len + data_len) - CANARD_MULTIFRAME_RX_PAYLOAD_
 769              		.loc 1 1269 0
 770 00b0 0133     		adds	r3, r3, #1
 771 00b2 9BB2     		uxth	r3, r3
 772              	.LVL95:
1273:Lib/libcanard/canard.c ****         {
 773              		.loc 1 1273 0
 774 00b4 9A42     		cmp	r2, r3
 775 00b6 E1D2     		bcs	.L64
1273:Lib/libcanard/canard.c ****         {
 776              		.loc 1 1273 0 is_stmt 0 discriminator 1
 777 00b8 B8F1000F 		cmp	r8, #0
 778 00bc DED1     		bne	.L64
1275:Lib/libcanard/canard.c ****             if (block->next == NULL)
 779              		.loc 1 1275 0 is_stmt 1
 780 00be 5046     		mov	r0, r10
 781              	.LVL96:
 782 00c0 FFF7FEFF 		bl	createBufferBlock
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 43


 783              	.LVL97:
 784 00c4 3860     		str	r0, [r7]
1276:Lib/libcanard/canard.c ****             {
 785              		.loc 1 1276 0
 786 00c6 08B3     		cbz	r0, .L72
1280:Lib/libcanard/canard.c ****         }
 787              		.loc 1 1280 0
 788 00c8 0746     		mov	r7, r0
 789              	.LVL98:
 790 00ca D7E7     		b	.L64
 791              	.LVL99:
 792              	.L70:
1259:Lib/libcanard/canard.c **** 
 793              		.loc 1 1259 0
 794 00cc 0122     		movs	r2, #1
 795 00ce E5E7     		b	.L60
 796              	.LVL100:
 797              	.L66:
 798              	.LBE10:
 799              	.LBB11:
1291:Lib/libcanard/canard.c ****         }
 800              		.loc 1 1291 0
 801 00d0 1BF80400 		ldrb	r0, [fp, r4]	@ zero_extendqisi2
 802 00d4 BB18     		adds	r3, r7, r2
 803 00d6 1871     		strb	r0, [r3, #4]
1289:Lib/libcanard/canard.c ****         {
 804              		.loc 1 1289 0
 805 00d8 0132     		adds	r2, r2, #1
 806              	.LVL101:
 807 00da 92B2     		uxth	r2, r2
 808              	.LVL102:
 809 00dc 0134     		adds	r4, r4, #1
 810              	.LVL103:
 811 00de A4B2     		uxth	r4, r4
 812              	.LVL104:
 813              	.L68:
1287:Lib/libcanard/canard.c ****              i < CANARD_BUFFER_BLOCK_DATA_SIZE && data_index < data_len;
 814              		.loc 1 1287 0 discriminator 1
 815 00e0 1B2A     		cmp	r2, #27
 816 00e2 01D8     		bhi	.L65
1288:Lib/libcanard/canard.c ****              i++, data_index++)
 817              		.loc 1 1288 0
 818 00e4 A142     		cmp	r1, r4
 819 00e6 F3D8     		bhi	.L66
 820              	.L65:
 821              	.LBE11:
1294:Lib/libcanard/canard.c ****         {
 822              		.loc 1 1294 0
 823 00e8 A142     		cmp	r1, r4
 824 00ea 0AD9     		bls	.L73
1296:Lib/libcanard/canard.c ****             if (block->next == NULL)
 825              		.loc 1 1296 0
 826 00ec 5046     		mov	r0, r10
 827 00ee FFF7FEFF 		bl	createBufferBlock
 828              	.LVL105:
 829 00f2 3860     		str	r0, [r7]
1297:Lib/libcanard/canard.c ****             {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 44


 830              		.loc 1 1297 0
 831 00f4 68B1     		cbz	r0, .L74
1302:Lib/libcanard/canard.c ****         }
 832              		.loc 1 1302 0
 833 00f6 4FF00008 		mov	r8, #0
 834              	.LVL106:
 835              	.L67:
 836 00fa 0746     		mov	r7, r0
 837              	.LVL107:
 838 00fc BEE7     		b	.L64
 839              	.LVL108:
 840              	.L75:
 841              	.LBB12:
1287:Lib/libcanard/canard.c ****              i < CANARD_BUFFER_BLOCK_DATA_SIZE && data_index < data_len;
 842              		.loc 1 1287 0
 843 00fe 4246     		mov	r2, r8
 844 0100 EEE7     		b	.L68
 845              	.LVL109:
 846              	.L73:
 847              	.LBE12:
 848 0102 3846     		mov	r0, r7
 849 0104 F9E7     		b	.L67
 850              	.LVL110:
 851              	.L71:
1251:Lib/libcanard/canard.c ****         }
 852              		.loc 1 1251 0
 853 0106 6FF00200 		mvn	r0, #2
 854 010a 91E7     		b	.L59
 855              	.LVL111:
 856              	.L72:
 857              	.LBB13:
1278:Lib/libcanard/canard.c ****             }
 858              		.loc 1 1278 0
 859 010c 6FF00200 		mvn	r0, #2
 860 0110 8EE7     		b	.L59
 861              	.L74:
 862              	.LBE13:
1299:Lib/libcanard/canard.c ****             }
 863              		.loc 1 1299 0
 864 0112 6FF00200 		mvn	r0, #2
 865 0116 8BE7     		b	.L59
 866              		.cfi_endproc
 867              	.LFE30:
 869              		.section	.text.pushTxQueue,"ax",%progbits
 870              		.align	1
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv4-sp-d16
 876              	pushTxQueue:
 877              	.LFB19:
 955:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 878              		.loc 1 955 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              	.LVL112:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 45


 883 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 884              	.LCFI10:
 885              		.cfi_def_cfa_offset 24
 886              		.cfi_offset 4, -24
 887              		.cfi_offset 5, -20
 888              		.cfi_offset 6, -16
 889              		.cfi_offset 7, -12
 890              		.cfi_offset 8, -8
 891              		.cfi_offset 14, -4
 956:Lib/libcanard/canard.c ****     CANARD_ASSERT(item->frame.data_len > 0);       // UAVCAN doesn't allow zero-payload frames
 892              		.loc 1 956 0
 893 0004 90B1     		cbz	r0, .L88
 894 0006 0D46     		mov	r5, r1
 895 0008 8046     		mov	r8, r0
 957:Lib/libcanard/canard.c **** 
 896              		.loc 1 957 0
 897 000a 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
 898 000c ABB1     		cbz	r3, .L89
 959:Lib/libcanard/canard.c ****     {
 899              		.loc 1 959 0
 900 000e C769     		ldr	r7, [r0, #28]
 901 0010 D7B1     		cbz	r7, .L90
 966:Lib/libcanard/canard.c **** 
 902              		.loc 1 966 0
 903 0012 3E46     		mov	r6, r7
 965:Lib/libcanard/canard.c ****     CanardTxQueueItem* previous = ins->tx_queue;
 904              		.loc 1 965 0
 905 0014 3C46     		mov	r4, r7
 906              	.LVL113:
 907              	.L80:
 968:Lib/libcanard/canard.c ****     {
 908              		.loc 1 968 0
 909 0016 CCB1     		cbz	r4, .L77
 970:Lib/libcanard/canard.c ****         {
 910              		.loc 1 970 0
 911 0018 6968     		ldr	r1, [r5, #4]
 912 001a 6068     		ldr	r0, [r4, #4]
 913 001c FFF7FEFF 		bl	isPriorityHigher
 914              	.LVL114:
 915 0020 B0B9     		cbnz	r0, .L91
 986:Lib/libcanard/canard.c ****             {
 916              		.loc 1 986 0
 917 0022 2368     		ldr	r3, [r4]
 993:Lib/libcanard/canard.c ****                 queue = queue->next;
 918              		.loc 1 993 0
 919 0024 2646     		mov	r6, r4
 920              	.LVL115:
 986:Lib/libcanard/canard.c ****             {
 921              		.loc 1 986 0
 922 0026 E3B1     		cbz	r3, .L92
 994:Lib/libcanard/canard.c ****             }
 923              		.loc 1 994 0
 924 0028 1C46     		mov	r4, r3
 925              	.LVL116:
 926 002a F4E7     		b	.L80
 927              	.LVL117:
 928              	.L88:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 46


 956:Lib/libcanard/canard.c ****     CANARD_ASSERT(item->frame.data_len > 0);       // UAVCAN doesn't allow zero-payload frames
 929              		.loc 1 956 0 discriminator 1
 930 002c 0E4B     		ldr	r3, .L94
 931 002e 0F4A     		ldr	r2, .L94+4
 932 0030 4FF46F71 		mov	r1, #956
 933              	.LVL118:
 934 0034 0E48     		ldr	r0, .L94+8
 935              	.LVL119:
 936 0036 FFF7FEFF 		bl	__assert_func
 937              	.LVL120:
 938              	.L89:
 957:Lib/libcanard/canard.c **** 
 939              		.loc 1 957 0 discriminator 1
 940 003a 0E4B     		ldr	r3, .L94+12
 941 003c 0B4A     		ldr	r2, .L94+4
 942 003e 40F2BD31 		movw	r1, #957
 943              	.LVL121:
 944 0042 0B48     		ldr	r0, .L94+8
 945              	.LVL122:
 946 0044 FFF7FEFF 		bl	__assert_func
 947              	.LVL123:
 948              	.L90:
 961:Lib/libcanard/canard.c ****         return;
 949              		.loc 1 961 0
 950 0048 C8F81C10 		str	r1, [r8, #28]
 951              	.LVL124:
 952              	.L77:
 998:Lib/libcanard/canard.c **** 
 953              		.loc 1 998 0
 954 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 955              	.LVL125:
 956              	.L91:
 972:Lib/libcanard/canard.c ****             {
 957              		.loc 1 972 0
 958 0050 A742     		cmp	r7, r4
 959 0052 02D0     		beq	.L93
 979:Lib/libcanard/canard.c ****                 item->next = queue;
 960              		.loc 1 979 0
 961 0054 3560     		str	r5, [r6]
 980:Lib/libcanard/canard.c ****             }
 962              		.loc 1 980 0
 963 0056 2C60     		str	r4, [r5]
 964 0058 F8E7     		b	.L77
 965              	.L93:
 974:Lib/libcanard/canard.c ****                 ins->tx_queue = item;
 966              		.loc 1 974 0
 967 005a 2C60     		str	r4, [r5]
 975:Lib/libcanard/canard.c ****             }
 968              		.loc 1 975 0
 969 005c C8F81C50 		str	r5, [r8, #28]
 970 0060 F4E7     		b	.L77
 971              	.LVL126:
 972              	.L92:
 988:Lib/libcanard/canard.c ****                 return;
 973              		.loc 1 988 0
 974 0062 2560     		str	r5, [r4]
 989:Lib/libcanard/canard.c ****             }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 47


 975              		.loc 1 989 0
 976 0064 F2E7     		b	.L77
 977              	.L95:
 978 0066 00BF     		.align	2
 979              	.L94:
 980 0068 00000000 		.word	.LC0
 981 006c 00000000 		.word	.LANCHOR0
 982 0070 14000000 		.word	.LC1
 983 0074 2C000000 		.word	.LC2
 984              		.cfi_endproc
 985              	.LFE19:
 987              		.section	.text.incrementTransferID,"ax",%progbits
 988              		.align	1
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu fpv4-sp-d16
 994              	incrementTransferID:
 995              	.LFB17:
 852:Lib/libcanard/canard.c ****     CANARD_ASSERT(transfer_id != NULL);
 996              		.loc 1 852 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              	.LVL127:
 1001 0000 08B5     		push	{r3, lr}
 1002              	.LCFI11:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 3, -8
 1005              		.cfi_offset 14, -4
 853:Lib/libcanard/canard.c **** 
 1006              		.loc 1 853 0
 1007 0002 40B1     		cbz	r0, .L100
 855:Lib/libcanard/canard.c ****     if (*transfer_id >= 32)
 1008              		.loc 1 855 0
 1009 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1010 0006 0133     		adds	r3, r3, #1
 1011 0008 DBB2     		uxtb	r3, r3
 1012 000a 0370     		strb	r3, [r0]
 856:Lib/libcanard/canard.c ****     {
 1013              		.loc 1 856 0
 1014 000c 1F2B     		cmp	r3, #31
 1015 000e 01D9     		bls	.L96
 858:Lib/libcanard/canard.c ****     }
 1016              		.loc 1 858 0
 1017 0010 0023     		movs	r3, #0
 1018 0012 0370     		strb	r3, [r0]
 1019              	.L96:
 860:Lib/libcanard/canard.c **** 
 1020              		.loc 1 860 0
 1021 0014 08BD     		pop	{r3, pc}
 1022              	.L100:
 853:Lib/libcanard/canard.c **** 
 1023              		.loc 1 853 0 discriminator 1
 1024 0016 034B     		ldr	r3, .L101
 1025 0018 034A     		ldr	r2, .L101+4
 1026 001a 40F25531 		movw	r1, #853
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 48


 1027 001e 0348     		ldr	r0, .L101+8
 1028              	.LVL128:
 1029 0020 FFF7FEFF 		bl	__assert_func
 1030              	.LVL129:
 1031              	.L102:
 1032              		.align	2
 1033              	.L101:
 1034 0024 00000000 		.word	.LC3
 1035 0028 00000000 		.word	.LANCHOR1
 1036 002c 14000000 		.word	.LC1
 1037              		.cfi_endproc
 1038              	.LFE17:
 1040              		.section	.text.freeBlock,"ax",%progbits
 1041              		.align	1
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv4-sp-d16
 1047              	freeBlock:
 1048              	.LFB41:
1575:Lib/libcanard/canard.c **** 
1576:Lib/libcanard/canard.c **** CANARD_INTERNAL void freeBlock(CanardPoolAllocator* allocator, void* p)
1577:Lib/libcanard/canard.c **** {
 1049              		.loc 1 1577 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              	.LVL130:
 1054 0000 08B5     		push	{r3, lr}
 1055              	.LCFI12:
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 3, -8
 1058              		.cfi_offset 14, -4
 1059              	.LVL131:
1578:Lib/libcanard/canard.c ****     CanardPoolAllocatorBlock* block = (CanardPoolAllocatorBlock*) p;
1579:Lib/libcanard/canard.c **** 
1580:Lib/libcanard/canard.c ****     block->next = allocator->free_list;
 1060              		.loc 1 1580 0
 1061 0002 0368     		ldr	r3, [r0]
 1062 0004 0B60     		str	r3, [r1]
1581:Lib/libcanard/canard.c ****     allocator->free_list = block;
 1063              		.loc 1 1581 0
 1064 0006 0160     		str	r1, [r0]
1582:Lib/libcanard/canard.c **** 
1583:Lib/libcanard/canard.c ****     CANARD_ASSERT(allocator->statistics.current_usage_blocks > 0);
 1065              		.loc 1 1583 0
 1066 0008 C388     		ldrh	r3, [r0, #6]
 1067 000a 13B1     		cbz	r3, .L106
1584:Lib/libcanard/canard.c ****     allocator->statistics.current_usage_blocks--;
 1068              		.loc 1 1584 0
 1069 000c 013B     		subs	r3, r3, #1
 1070 000e C380     		strh	r3, [r0, #6]	@ movhi
1585:Lib/libcanard/canard.c **** }
 1071              		.loc 1 1585 0
 1072 0010 08BD     		pop	{r3, pc}
 1073              	.L106:
1583:Lib/libcanard/canard.c ****     allocator->statistics.current_usage_blocks--;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 49


 1074              		.loc 1 1583 0 discriminator 1
 1075 0012 034B     		ldr	r3, .L107
 1076 0014 034A     		ldr	r2, .L107+4
 1077 0016 40F22F61 		movw	r1, #1583
 1078              	.LVL132:
 1079 001a 0348     		ldr	r0, .L107+8
 1080              	.LVL133:
 1081 001c FFF7FEFF 		bl	__assert_func
 1082              	.LVL134:
 1083              	.L108:
 1084              		.align	2
 1085              	.L107:
 1086 0020 00000000 		.word	.LC4
 1087 0024 00000000 		.word	.LANCHOR2
 1088 0028 14000000 		.word	.LC1
 1089              		.cfi_endproc
 1090              	.LFE41:
 1092              		.section	.text.releaseStatePayload,"ax",%progbits
 1093              		.align	1
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1097              		.fpu fpv4-sp-d16
 1099              	releaseStatePayload:
 1100              	.LFB29:
1196:Lib/libcanard/canard.c ****     while (rxstate->buffer_blocks != NULL)
 1101              		.loc 1 1196 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              	.LVL135:
 1106 0000 70B5     		push	{r4, r5, r6, lr}
 1107              	.LCFI13:
 1108              		.cfi_def_cfa_offset 16
 1109              		.cfi_offset 4, -16
 1110              		.cfi_offset 5, -12
 1111              		.cfi_offset 6, -8
 1112              		.cfi_offset 14, -4
 1113 0002 0646     		mov	r6, r0
 1114 0004 0C46     		mov	r4, r1
1197:Lib/libcanard/canard.c ****     {
 1115              		.loc 1 1197 0
 1116 0006 05E0     		b	.L110
 1117              	.LVL136:
 1118              	.L111:
 1119              	.LBB14:
1199:Lib/libcanard/canard.c ****         freeBlock(&ins->allocator, rxstate->buffer_blocks);
 1120              		.loc 1 1199 0
 1121 0008 0D68     		ldr	r5, [r1]
 1122              	.LVL137:
1200:Lib/libcanard/canard.c ****         rxstate->buffer_blocks = temp;
 1123              		.loc 1 1200 0
 1124 000a 06F10C00 		add	r0, r6, #12
 1125 000e FFF7FEFF 		bl	freeBlock
 1126              	.LVL138:
1201:Lib/libcanard/canard.c ****     }
 1127              		.loc 1 1201 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 50


 1128 0012 6560     		str	r5, [r4, #4]
 1129              	.LVL139:
 1130              	.L110:
 1131              	.LBE14:
1197:Lib/libcanard/canard.c ****     {
 1132              		.loc 1 1197 0
 1133 0014 6168     		ldr	r1, [r4, #4]
 1134 0016 0029     		cmp	r1, #0
 1135 0018 F6D1     		bne	.L111
1203:Lib/libcanard/canard.c ****     return CANARD_OK;
 1136              		.loc 1 1203 0
 1137 001a E38A     		ldrh	r3, [r4, #22]
 1138 001c 6FF30903 		bfc	r3, #0, #10
 1139 0020 E382     		strh	r3, [r4, #22]	@ movhi
1205:Lib/libcanard/canard.c **** 
 1140              		.loc 1 1205 0
 1141 0022 0020     		movs	r0, #0
 1142 0024 0021     		movs	r1, #0
 1143 0026 70BD     		pop	{r4, r5, r6, pc}
 1144              		.cfi_endproc
 1145              	.LFE29:
 1147              		.section	.text.prepareForNextTransfer,"ax",%progbits
 1148              		.align	1
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1152              		.fpu fpv4-sp-d16
 1154              	prepareForNextTransfer:
 1155              	.LFB22:
1061:Lib/libcanard/canard.c ****     CANARD_ASSERT(state->buffer_blocks == NULL);
 1156              		.loc 1 1061 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              	.LVL140:
 1161 0000 08B5     		push	{r3, lr}
 1162              	.LCFI14:
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 3, -8
 1165              		.cfi_offset 14, -4
1062:Lib/libcanard/canard.c ****     state->transfer_id++;
 1166              		.loc 1 1062 0
 1167 0002 4368     		ldr	r3, [r0, #4]
 1168 0004 83B9     		cbnz	r3, .L116
1063:Lib/libcanard/canard.c ****     state->payload_len = 0;
 1169              		.loc 1 1063 0
 1170 0006 C37D     		ldrb	r3, [r0, #23]	@ zero_extendqisi2
 1171 0008 C3F38402 		ubfx	r2, r3, #2, #5
 1172 000c 0132     		adds	r2, r2, #1
 1173 000e 62F38603 		bfi	r3, r2, #2, #5
 1174 0012 C375     		strb	r3, [r0, #23]
1064:Lib/libcanard/canard.c ****     state->next_toggle = 0;
 1175              		.loc 1 1064 0
 1176 0014 C38A     		ldrh	r3, [r0, #22]
 1177 0016 6FF30903 		bfc	r3, #0, #10
 1178 001a C382     		strh	r3, [r0, #22]	@ movhi
1065:Lib/libcanard/canard.c **** }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 51


 1179              		.loc 1 1065 0
 1180 001c C3F30723 		ubfx	r3, r3, #8, #8
 1181 0020 6FF3C713 		bfc	r3, #7, #1
 1182 0024 C375     		strb	r3, [r0, #23]
1066:Lib/libcanard/canard.c **** 
 1183              		.loc 1 1066 0
 1184 0026 08BD     		pop	{r3, pc}
 1185              	.L116:
1062:Lib/libcanard/canard.c ****     state->transfer_id++;
 1186              		.loc 1 1062 0 discriminator 1
 1187 0028 034B     		ldr	r3, .L117
 1188 002a 044A     		ldr	r2, .L117+4
 1189 002c 40F22641 		movw	r1, #1062
 1190 0030 0348     		ldr	r0, .L117+8
 1191              	.LVL141:
 1192 0032 FFF7FEFF 		bl	__assert_func
 1193              	.LVL142:
 1194              	.L118:
 1195 0036 00BF     		.align	2
 1196              	.L117:
 1197 0038 00000000 		.word	.LC5
 1198 003c 00000000 		.word	.LANCHOR3
 1199 0040 14000000 		.word	.LC1
 1200              		.cfi_endproc
 1201              	.LFE22:
 1203              		.section	.text.copyBitArray,"ax",%progbits
 1204              		.align	1
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	copyBitArray:
 1211              	.LFB32:
1327:Lib/libcanard/canard.c ****     CANARD_ASSERT(src_len > 0U);
 1212              		.loc 1 1327 0
 1213              		.cfi_startproc
 1214              		@ args = 4, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              	.LVL143:
 1217 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1218              	.LCFI15:
 1219              		.cfi_def_cfa_offset 32
 1220              		.cfi_offset 3, -32
 1221              		.cfi_offset 4, -28
 1222              		.cfi_offset 5, -24
 1223              		.cfi_offset 6, -20
 1224              		.cfi_offset 7, -16
 1225              		.cfi_offset 8, -12
 1226              		.cfi_offset 9, -8
 1227              		.cfi_offset 14, -4
 1228 0004 089F     		ldr	r7, [sp, #32]
1328:Lib/libcanard/canard.c **** 
 1229              		.loc 1 1328 0
 1230 0006 4AB1     		cbz	r2, .L124
1331:Lib/libcanard/canard.c ****     dst += dst_offset / 8U;
 1231              		.loc 1 1331 0
 1232 0008 4FEAD10C 		lsr	ip, r1, #3
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 52


 1233              	.LVL144:
1332:Lib/libcanard/canard.c **** 
 1234              		.loc 1 1332 0
 1235 000c 03EBD703 		add	r3, r3, r7, lsr #3
 1236              	.LVL145:
1334:Lib/libcanard/canard.c ****     dst_offset %= 8U;
 1237              		.loc 1 1334 0
 1238 0010 01F00701 		and	r1, r1, #7
 1239              	.LVL146:
1335:Lib/libcanard/canard.c **** 
 1240              		.loc 1 1335 0
 1241 0014 07F00707 		and	r7, r7, #7
 1242              	.LVL147:
1337:Lib/libcanard/canard.c ****     while (last_bit - src_offset)
 1243              		.loc 1 1337 0
 1244 0018 0A44     		add	r2, r2, r1
 1245              	.LVL148:
1338:Lib/libcanard/canard.c ****     {
 1246              		.loc 1 1338 0
 1247 001a 31E0     		b	.L121
 1248              	.LVL149:
 1249              	.L124:
1328:Lib/libcanard/canard.c **** 
 1250              		.loc 1 1328 0 discriminator 1
 1251 001c 1A4B     		ldr	r3, .L125
 1252              	.LVL150:
 1253 001e 1B4A     		ldr	r2, .L125+4
 1254              	.LVL151:
 1255 0020 4FF4A661 		mov	r1, #1328
 1256              	.LVL152:
 1257 0024 1A48     		ldr	r0, .L125+8
 1258              	.LVL153:
 1259 0026 FFF7FEFF 		bl	__assert_func
 1260              	.LVL154:
 1261              	.L122:
 1262              	.LBB15:
1340:Lib/libcanard/canard.c ****         const uint8_t dst_bit_offset = (uint8_t)(dst_offset % 8U);
 1263              		.loc 1 1340 0
 1264 002a 01F00708 		and	r8, r1, #7
 1265              	.LVL155:
1341:Lib/libcanard/canard.c **** 
 1266              		.loc 1 1341 0
 1267 002e 07F0070E 		and	lr, r7, #7
 1268              	.LVL156:
1343:Lib/libcanard/canard.c ****         const uint32_t copy_bits = MIN(last_bit - src_offset, 8U - max_offset);
 1269              		.loc 1 1343 0
 1270 0032 4646     		mov	r6, r8
 1271 0034 F045     		cmp	r8, lr
 1272 0036 38BF     		it	cc
 1273 0038 7646     		movcc	r6, lr
 1274              	.LVL157:
1344:Lib/libcanard/canard.c **** 
 1275              		.loc 1 1344 0
 1276 003a C6F10806 		rsb	r6, r6, #8
 1277              	.LVL158:
 1278 003e 541A     		subs	r4, r2, r1
 1279 0040 A642     		cmp	r6, r4
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 53


 1280              	.LVL159:
 1281 0042 28BF     		it	cs
 1282 0044 2646     		movcs	r6, r4
 1283              	.LVL160:
1346:Lib/libcanard/canard.c ****         const uint8_t src_data = (uint8_t)(((uint32_t)src[src_offset / 8U] << src_bit_offset) >> ds
 1284              		.loc 1 1346 0
 1285 0046 4FF47F45 		mov	r5, #65280
 1286 004a F540     		lsrs	r5, r5, r6
 1287 004c EDB2     		uxtb	r5, r5
 1288 004e 45FA0EF5 		asr	r5, r5, lr
 1289              	.LVL161:
1347:Lib/libcanard/canard.c **** 
 1290              		.loc 1 1347 0
 1291 0052 CC08     		lsrs	r4, r1, #3
 1292 0054 00EB0C09 		add	r9, r0, ip
 1293 0058 19F80440 		ldrb	r4, [r9, r4]	@ zero_extendqisi2
 1294 005c 04FA08F4 		lsl	r4, r4, r8
 1295 0060 24FA0EF4 		lsr	r4, r4, lr
 1296 0064 E4B2     		uxtb	r4, r4
 1297              	.LVL162:
1350:Lib/libcanard/canard.c **** 
 1298              		.loc 1 1350 0
 1299 0066 4FEAD708 		lsr	r8, r7, #3
 1300              	.LVL163:
 1301 006a 13F808E0 		ldrb	lr, [r3, r8]	@ zero_extendqisi2
 1302              	.LVL164:
 1303 006e 8EEA0404 		eor	r4, lr, r4
 1304              	.LVL165:
 1305 0072 2C40     		ands	r4, r4, r5
 1306 0074 8EEA040E 		eor	lr, lr, r4
1349:Lib/libcanard/canard.c ****             (uint8_t)(((uint32_t)dst[dst_offset / 8U] & (uint32_t)~write_mask) | (uint32_t)(src_dat
 1307              		.loc 1 1349 0
 1308 0078 03F808E0 		strb	lr, [r3, r8]
 1309              	.LVL166:
1352:Lib/libcanard/canard.c ****         dst_offset += copy_bits;
 1310              		.loc 1 1352 0
 1311 007c 3144     		add	r1, r1, r6
 1312              	.LVL167:
1353:Lib/libcanard/canard.c ****     }
 1313              		.loc 1 1353 0
 1314 007e 3744     		add	r7, r7, r6
 1315              	.LVL168:
 1316              	.L121:
 1317              	.LBE15:
1338:Lib/libcanard/canard.c ****     {
 1318              		.loc 1 1338 0
 1319 0080 9142     		cmp	r1, r2
 1320 0082 D2D1     		bne	.L122
1355:Lib/libcanard/canard.c **** 
 1321              		.loc 1 1355 0
 1322 0084 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1323              	.LVL169:
 1324              	.L126:
 1325              		.align	2
 1326              	.L125:
 1327 0088 00000000 		.word	.LC6
 1328 008c 00000000 		.word	.LANCHOR4
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 54


 1329 0090 14000000 		.word	.LC1
 1330              		.cfi_endproc
 1331              	.LFE32:
 1333              		.section	.text.descatterTransferPayload,"ax",%progbits
 1334              		.align	1
 1335              		.syntax unified
 1336              		.thumb
 1337              		.thumb_func
 1338              		.fpu fpv4-sp-d16
 1340              	descatterTransferPayload:
 1341              	.LFB33:
1361:Lib/libcanard/canard.c ****     CANARD_ASSERT(transfer != 0);
 1342              		.loc 1 1361 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 16
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346              	.LVL170:
 1347 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1348              	.LCFI16:
 1349              		.cfi_def_cfa_offset 36
 1350              		.cfi_offset 4, -36
 1351              		.cfi_offset 5, -32
 1352              		.cfi_offset 6, -28
 1353              		.cfi_offset 7, -24
 1354              		.cfi_offset 8, -20
 1355              		.cfi_offset 9, -16
 1356              		.cfi_offset 10, -12
 1357              		.cfi_offset 11, -8
 1358              		.cfi_offset 14, -4
 1359 0004 87B0     		sub	sp, sp, #28
 1360              	.LCFI17:
 1361              		.cfi_def_cfa_offset 64
 1362 0006 0592     		str	r2, [sp, #20]
 1363 0008 0393     		str	r3, [sp, #12]
1362:Lib/libcanard/canard.c **** 
 1364              		.loc 1 1362 0
 1365 000a 0490     		str	r0, [sp, #16]
 1366 000c 0028     		cmp	r0, #0
 1367 000e 40D0     		beq	.L155
 1368 0010 8846     		mov	r8, r1
1364:Lib/libcanard/canard.c ****     {
 1369              		.loc 1 1364 0
 1370 0012 049B     		ldr	r3, [sp, #16]
 1371              	.LVL171:
 1372 0014 9B8A     		ldrh	r3, [r3, #20]
 1373 0016 DA00     		lsls	r2, r3, #3
 1374              	.LVL172:
 1375 0018 8A42     		cmp	r2, r1
 1376 001a 40F2ED80 		bls	.L150
1369:Lib/libcanard/canard.c ****     {
 1377              		.loc 1 1369 0
 1378 001e 0599     		ldr	r1, [sp, #20]
 1379              	.LVL173:
 1380 0020 4144     		add	r1, r1, r8
 1381 0022 8A42     		cmp	r2, r1
 1382 0024 05D2     		bcs	.L130
1371:Lib/libcanard/canard.c ****     }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 55


 1383              		.loc 1 1371 0
 1384 0026 D0B2     		uxtb	r0, r2
 1385              	.LVL174:
 1386 0028 5FFA88F3 		uxtb	r3, r8
 1387 002c C01A     		subs	r0, r0, r3
 1388 002e C3B2     		uxtb	r3, r0
 1389 0030 0593     		str	r3, [sp, #20]
 1390              	.LVL175:
 1391              	.L130:
1374:Lib/libcanard/canard.c **** 
 1392              		.loc 1 1374 0
 1393 0032 059B     		ldr	r3, [sp, #20]
 1394 0034 002B     		cmp	r3, #0
 1395 0036 33D0     		beq	.L156
1376:Lib/libcanard/canard.c ****     {
 1396              		.loc 1 1376 0
 1397 0038 049B     		ldr	r3, [sp, #16]
 1398 003a DB68     		ldr	r3, [r3, #12]
 1399 003c 002B     		cmp	r3, #0
 1400 003e 36D0     		beq	.L157
 1401              	.L132:
 1402              	.LVL176:
 1403              	.LBB16:
1388:Lib/libcanard/canard.c ****         {
 1404              		.loc 1 1388 0
 1405 0040 B8F12F0F 		cmp	r8, #47
 1406 0044 44D8     		bhi	.L151
 1407              	.LBB17:
1390:Lib/libcanard/canard.c ****                                                 CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE * 8U - input
 1408              		.loc 1 1390 0
 1409 0046 C8F13003 		rsb	r3, r8, #48
 1410 004a 059A     		ldr	r2, [sp, #20]
 1411 004c 9A42     		cmp	r2, r3
 1412 004e 3CD3     		bcc	.L152
1390:Lib/libcanard/canard.c ****                                                 CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE * 8U - input
 1413              		.loc 1 1390 0 is_stmt 0 discriminator 1
 1414 0050 5FFA88F3 		uxtb	r3, r8
 1415 0054 C3F13003 		rsb	r3, r3, #48
 1416 0058 DBB2     		uxtb	r3, r3
 1417 005a 0293     		str	r3, [sp, #8]
 1418              	.L135:
 1419              	.LVL177:
1393:Lib/libcanard/canard.c **** 
 1420              		.loc 1 1393 0 is_stmt 1 discriminator 4
 1421 005c 049B     		ldr	r3, [sp, #16]
 1422 005e 9868     		ldr	r0, [r3, #8]
 1423 0060 0023     		movs	r3, #0
 1424 0062 0093     		str	r3, [sp]
 1425 0064 039B     		ldr	r3, [sp, #12]
 1426 0066 029C     		ldr	r4, [sp, #8]
 1427 0068 2246     		mov	r2, r4
 1428 006a 4146     		mov	r1, r8
 1429 006c FFF7FEFF 		bl	copyBitArray
 1430              	.LVL178:
1395:Lib/libcanard/canard.c ****             output_bit_offset = (uint8_t)(output_bit_offset + amount);
 1431              		.loc 1 1395 0 discriminator 4
 1432 0070 A044     		add	r8, r8, r4
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 56


 1433              	.LVL179:
1397:Lib/libcanard/canard.c ****         }
 1434              		.loc 1 1397 0 discriminator 4
 1435 0072 059A     		ldr	r2, [sp, #20]
 1436 0074 141B     		subs	r4, r2, r4
 1437              	.LVL180:
 1438 0076 E4B2     		uxtb	r4, r4
 1439              	.LVL181:
 1440              	.L134:
 1441              	.LBE17:
1401:Lib/libcanard/canard.c ****         uint32_t block_bit_offset = CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE * 8U;
 1442              		.loc 1 1401 0
 1443 0078 049B     		ldr	r3, [sp, #16]
 1444 007a 9F8A     		ldrh	r7, [r3, #20]
 1445 007c 07F10057 		add	r7, r7, #536870912
 1446 0080 063F     		subs	r7, r7, #6
 1447 0082 FF00     		lsls	r7, r7, #3
 1448              	.LVL182:
1403:Lib/libcanard/canard.c **** 
 1449              		.loc 1 1403 0
 1450 0084 D3F80CA0 		ldr	r10, [r3, #12]
 1451              	.LVL183:
1402:Lib/libcanard/canard.c ****         const CanardBufferBlock* block = transfer->payload_middle;
 1452              		.loc 1 1402 0
 1453 0088 4FF03009 		mov	r9, #48
 1454 008c A346     		mov	fp, r4
 1455 008e 5446     		mov	r4, r10
 1456              	.LVL184:
1405:Lib/libcanard/canard.c ****         {
 1457              		.loc 1 1405 0
 1458 0090 44E0     		b	.L136
 1459              	.LVL185:
 1460              	.L155:
 1461              	.LBE16:
1362:Lib/libcanard/canard.c **** 
 1462              		.loc 1 1362 0 discriminator 1
 1463 0092 5A4B     		ldr	r3, .L166
 1464              	.LVL186:
 1465 0094 5A4A     		ldr	r2, .L166+4
 1466              	.LVL187:
 1467 0096 40F25251 		movw	r1, #1362
 1468              	.LVL188:
 1469 009a 5A48     		ldr	r0, .L166+8
 1470              	.LVL189:
 1471 009c FFF7FEFF 		bl	__assert_func
 1472              	.LVL190:
 1473              	.L156:
1374:Lib/libcanard/canard.c **** 
 1474              		.loc 1 1374 0 discriminator 1
 1475 00a0 594B     		ldr	r3, .L166+12
 1476 00a2 574A     		ldr	r2, .L166+4
 1477 00a4 40F25E51 		movw	r1, #1374
 1478 00a8 5648     		ldr	r0, .L166+8
 1479 00aa FFF7FEFF 		bl	__assert_func
 1480              	.LVL191:
 1481              	.L157:
1376:Lib/libcanard/canard.c ****     {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 57


 1482              		.loc 1 1376 0 discriminator 1
 1483 00ae 049B     		ldr	r3, [sp, #16]
 1484 00b0 1B69     		ldr	r3, [r3, #16]
 1485 00b2 002B     		cmp	r3, #0
 1486 00b4 C4D1     		bne	.L132
1454:Lib/libcanard/canard.c ****     }
 1487              		.loc 1 1454 0
 1488 00b6 049B     		ldr	r3, [sp, #16]
 1489 00b8 9868     		ldr	r0, [r3, #8]
 1490 00ba 0023     		movs	r3, #0
 1491 00bc 0093     		str	r3, [sp]
 1492 00be 039B     		ldr	r3, [sp, #12]
 1493 00c0 059A     		ldr	r2, [sp, #20]
 1494 00c2 4146     		mov	r1, r8
 1495 00c4 FFF7FEFF 		bl	copyBitArray
 1496              	.LVL192:
 1497 00c8 6EE0     		b	.L149
 1498              	.LVL193:
 1499              	.L152:
 1500              	.LBB25:
 1501              	.LBB18:
1390:Lib/libcanard/canard.c ****                                                 CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE * 8U - input
 1502              		.loc 1 1390 0
 1503 00ca 059B     		ldr	r3, [sp, #20]
 1504 00cc 0293     		str	r3, [sp, #8]
 1505 00ce C5E7     		b	.L135
 1506              	.L151:
 1507              	.LBE18:
1385:Lib/libcanard/canard.c **** 
 1508              		.loc 1 1385 0
 1509 00d0 059C     		ldr	r4, [sp, #20]
1384:Lib/libcanard/canard.c ****         uint8_t remaining_bit_length = bit_length;
 1510              		.loc 1 1384 0
 1511 00d2 0023     		movs	r3, #0
 1512 00d4 0293     		str	r3, [sp, #8]
 1513 00d6 CFE7     		b	.L134
 1514              	.LVL194:
 1515              	.L160:
 1516              	.LBB19:
1407:Lib/libcanard/canard.c ****             const uint32_t block_end_bit_offset = block_bit_offset + MIN(CANARD_BUFFER_BLOCK_DATA_S
 1517              		.loc 1 1407 0 discriminator 1
 1518 00d8 4C4B     		ldr	r3, .L166+16
 1519 00da 494A     		ldr	r2, .L166+4
 1520 00dc 40F27F51 		movw	r1, #1407
 1521 00e0 4848     		ldr	r0, .L166+8
 1522 00e2 FFF7FEFF 		bl	__assert_func
 1523              	.LVL195:
 1524              	.L153:
 1525              	.LBB20:
1414:Lib/libcanard/canard.c **** 
 1526              		.loc 1 1414 0
 1527 00e6 5D46     		mov	r5, fp
 1528              	.L139:
 1529              	.LVL196:
1416:Lib/libcanard/canard.c ****                 const uint32_t bit_offset_within_block = input_bit_offset - block_bit_offset;
 1530              		.loc 1 1416 0 discriminator 4
 1531 00e8 C845     		cmp	r8, r9
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 58


 1532 00ea 30D3     		bcc	.L158
 1533              	.LVL197:
1419:Lib/libcanard/canard.c **** 
 1534              		.loc 1 1419 0
 1535 00ec 029B     		ldr	r3, [sp, #8]
 1536 00ee 0093     		str	r3, [sp]
 1537 00f0 039B     		ldr	r3, [sp, #12]
 1538 00f2 2A46     		mov	r2, r5
 1539 00f4 A8EB0901 		sub	r1, r8, r9
 1540              	.LVL198:
 1541 00f8 201D     		adds	r0, r4, #4
 1542 00fa FFF7FEFF 		bl	copyBitArray
 1543              	.LVL199:
1421:Lib/libcanard/canard.c ****                 output_bit_offset = (uint8_t)(output_bit_offset + amount);
 1544              		.loc 1 1421 0
 1545 00fe A844     		add	r8, r8, r5
 1546              	.LVL200:
1422:Lib/libcanard/canard.c ****                 remaining_bit_length = (uint8_t)(remaining_bit_length - amount);
 1547              		.loc 1 1422 0
 1548 0100 029B     		ldr	r3, [sp, #8]
 1549 0102 2B44     		add	r3, r3, r5
 1550 0104 DBB2     		uxtb	r3, r3
 1551 0106 0293     		str	r3, [sp, #8]
 1552              	.LVL201:
1423:Lib/libcanard/canard.c ****             }
 1553              		.loc 1 1423 0
 1554 0108 ABEB050B 		sub	fp, fp, r5
 1555              	.LVL202:
 1556 010c 5FFA8BFB 		uxtb	fp, fp
 1557              	.LVL203:
 1558              	.L138:
 1559              	.LBE20:
1426:Lib/libcanard/canard.c ****             remaining_bits -= block_end_bit_offset - block_bit_offset;
 1560              		.loc 1 1426 0
 1561 0110 B145     		cmp	r9, r6
 1562 0112 23D2     		bcs	.L159
 1563 0114 A7EB0A07 		sub	r7, r7, r10
 1564              	.LVL204:
1429:Lib/libcanard/canard.c ****         }
 1565              		.loc 1 1429 0
 1566 0118 2468     		ldr	r4, [r4]
 1567              	.LVL205:
1428:Lib/libcanard/canard.c ****             block = block->next;
 1568              		.loc 1 1428 0
 1569 011a B146     		mov	r9, r6
 1570              	.LVL206:
 1571              	.L136:
 1572              	.LBE19:
1405:Lib/libcanard/canard.c ****         {
 1573              		.loc 1 1405 0
 1574 011c 2CB3     		cbz	r4, .L142
1405:Lib/libcanard/canard.c ****         {
 1575              		.loc 1 1405 0 is_stmt 0 discriminator 1
 1576 011e BBF1000F 		cmp	fp, #0
 1577 0122 22D0     		beq	.L142
 1578              	.LBB22:
1407:Lib/libcanard/canard.c ****             const uint32_t block_end_bit_offset = block_bit_offset + MIN(CANARD_BUFFER_BLOCK_DATA_S
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 59


 1579              		.loc 1 1407 0 is_stmt 1
 1580 0124 002F     		cmp	r7, #0
 1581 0126 D7D0     		beq	.L160
1408:Lib/libcanard/canard.c ****                                                                          remaining_bits);
 1582              		.loc 1 1408 0
 1583 0128 BA46     		mov	r10, r7
 1584 012a E02F     		cmp	r7, #224
 1585 012c 28BF     		it	cs
 1586 012e 4FF0E00A 		movcs	r10, #224
 1587 0132 0AEB0906 		add	r6, r10, r9
 1588              	.LVL207:
1412:Lib/libcanard/canard.c ****             {
 1589              		.loc 1 1412 0
 1590 0136 B045     		cmp	r8, r6
 1591 0138 EAD2     		bcs	.L138
 1592              	.LBB21:
1414:Lib/libcanard/canard.c **** 
 1593              		.loc 1 1414 0
 1594 013a A6EB0803 		sub	r3, r6, r8
 1595 013e 9B45     		cmp	fp, r3
 1596 0140 D1D3     		bcc	.L153
1414:Lib/libcanard/canard.c **** 
 1597              		.loc 1 1414 0 is_stmt 0 discriminator 1
 1598 0142 F5B2     		uxtb	r5, r6
 1599 0144 5FFA88F3 		uxtb	r3, r8
 1600 0148 ED1A     		subs	r5, r5, r3
 1601 014a EDB2     		uxtb	r5, r5
 1602 014c CCE7     		b	.L139
 1603              	.LVL208:
 1604              	.L158:
1416:Lib/libcanard/canard.c ****                 const uint32_t bit_offset_within_block = input_bit_offset - block_bit_offset;
 1605              		.loc 1 1416 0 is_stmt 1 discriminator 1
 1606 014e 304B     		ldr	r3, .L166+20
 1607 0150 2B4A     		ldr	r2, .L166+4
 1608 0152 4FF4B161 		mov	r1, #1416
 1609 0156 2B48     		ldr	r0, .L166+8
 1610 0158 FFF7FEFF 		bl	__assert_func
 1611              	.LVL209:
 1612              	.L159:
 1613              	.LBE21:
1426:Lib/libcanard/canard.c ****             remaining_bits -= block_end_bit_offset - block_bit_offset;
 1614              		.loc 1 1426 0 discriminator 1
 1615 015c 2D4B     		ldr	r3, .L166+24
 1616 015e 284A     		ldr	r2, .L166+4
 1617 0160 40F29251 		movw	r1, #1426
 1618 0164 2748     		ldr	r0, .L166+8
 1619 0166 FFF7FEFF 		bl	__assert_func
 1620              	.LVL210:
 1621              	.L142:
 1622 016a 5C46     		mov	r4, fp
 1623              	.LVL211:
 1624              	.LBE22:
1432:Lib/libcanard/canard.c **** 
 1625              		.loc 1 1432 0
 1626 016c BB45     		cmp	fp, r7
 1627 016e 20D8     		bhi	.L161
1435:Lib/libcanard/canard.c ****         {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 60


 1628              		.loc 1 1435 0
 1629 0170 049B     		ldr	r3, [sp, #16]
 1630 0172 1869     		ldr	r0, [r3, #16]
 1631 0174 78B1     		cbz	r0, .L145
1435:Lib/libcanard/canard.c ****         {
 1632              		.loc 1 1435 0 is_stmt 0 discriminator 1
 1633 0176 74B1     		cbz	r4, .L145
 1634              	.LBB23:
1437:Lib/libcanard/canard.c ****             const uint32_t offset = input_bit_offset - block_bit_offset;
 1635              		.loc 1 1437 0 is_stmt 1
 1636 0178 C845     		cmp	r8, r9
 1637 017a 21D3     		bcc	.L162
 1638              	.LVL212:
1440:Lib/libcanard/canard.c ****                          output_bit_offset);
 1639              		.loc 1 1440 0
 1640 017c 029E     		ldr	r6, [sp, #8]
 1641 017e 0096     		str	r6, [sp]
 1642 0180 039B     		ldr	r3, [sp, #12]
 1643 0182 2246     		mov	r2, r4
 1644 0184 A8EB0901 		sub	r1, r8, r9
 1645              	.LVL213:
 1646 0188 FFF7FEFF 		bl	copyBitArray
 1647              	.LVL214:
1443:Lib/libcanard/canard.c ****             output_bit_offset = (uint8_t)(output_bit_offset + remaining_bit_length);
 1648              		.loc 1 1443 0
 1649 018c D844     		add	r8, r8, fp
 1650              	.LVL215:
1444:Lib/libcanard/canard.c ****             remaining_bit_length = 0;
 1651              		.loc 1 1444 0
 1652 018e 3444     		add	r4, r4, r6
 1653 0190 E3B2     		uxtb	r3, r4
 1654 0192 0293     		str	r3, [sp, #8]
 1655              	.LVL216:
1445:Lib/libcanard/canard.c ****         }
 1656              		.loc 1 1445 0
 1657 0194 0024     		movs	r4, #0
 1658              	.LVL217:
 1659              	.L145:
 1660              	.LBE23:
1448:Lib/libcanard/canard.c ****         CANARD_ASSERT(output_bit_offset <= 64);
 1661              		.loc 1 1448 0
 1662 0196 049B     		ldr	r3, [sp, #16]
 1663 0198 9B8A     		ldrh	r3, [r3, #20]
 1664 019a B8EBC30F 		cmp	r8, r3, lsl #3
 1665 019e 16D8     		bhi	.L163
1449:Lib/libcanard/canard.c ****         CANARD_ASSERT(remaining_bit_length == 0);
 1666              		.loc 1 1449 0
 1667 01a0 029B     		ldr	r3, [sp, #8]
 1668 01a2 402B     		cmp	r3, #64
 1669 01a4 1AD8     		bhi	.L164
1450:Lib/libcanard/canard.c ****     }
 1670              		.loc 1 1450 0
 1671 01a6 04BB     		cbnz	r4, .L165
 1672              	.LVL218:
 1673              	.L149:
 1674              	.LBE25:
1457:Lib/libcanard/canard.c **** }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 61


 1675              		.loc 1 1457 0
 1676 01a8 BDF91400 		ldrsh	r0, [sp, #20]
 1677              	.LVL219:
 1678              	.L129:
1458:Lib/libcanard/canard.c **** 
 1679              		.loc 1 1458 0
 1680 01ac 07B0     		add	sp, sp, #28
 1681              	.LCFI18:
 1682              		.cfi_remember_state
 1683              		.cfi_def_cfa_offset 36
 1684              		@ sp needed
 1685 01ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1686              	.LVL220:
 1687              	.L161:
 1688              	.LCFI19:
 1689              		.cfi_restore_state
 1690              	.LBB26:
1432:Lib/libcanard/canard.c **** 
 1691              		.loc 1 1432 0 discriminator 1
 1692 01b2 194B     		ldr	r3, .L166+28
 1693 01b4 124A     		ldr	r2, .L166+4
 1694 01b6 4FF4B361 		mov	r1, #1432
 1695 01ba 1248     		ldr	r0, .L166+8
 1696 01bc FFF7FEFF 		bl	__assert_func
 1697              	.LVL221:
 1698              	.L162:
 1699              	.LBB24:
1437:Lib/libcanard/canard.c ****             const uint32_t offset = input_bit_offset - block_bit_offset;
 1700              		.loc 1 1437 0 discriminator 1
 1701 01c0 134B     		ldr	r3, .L166+20
 1702 01c2 0F4A     		ldr	r2, .L166+4
 1703 01c4 40F29D51 		movw	r1, #1437
 1704 01c8 0E48     		ldr	r0, .L166+8
 1705 01ca FFF7FEFF 		bl	__assert_func
 1706              	.LVL222:
 1707              	.L163:
 1708              	.LBE24:
1448:Lib/libcanard/canard.c ****         CANARD_ASSERT(output_bit_offset <= 64);
 1709              		.loc 1 1448 0 discriminator 1
 1710 01ce 134B     		ldr	r3, .L166+32
 1711 01d0 0B4A     		ldr	r2, .L166+4
 1712 01d2 4FF4B561 		mov	r1, #1448
 1713 01d6 0B48     		ldr	r0, .L166+8
 1714 01d8 FFF7FEFF 		bl	__assert_func
 1715              	.LVL223:
 1716              	.L164:
1449:Lib/libcanard/canard.c ****         CANARD_ASSERT(remaining_bit_length == 0);
 1717              		.loc 1 1449 0 discriminator 1
 1718 01dc 104B     		ldr	r3, .L166+36
 1719 01de 084A     		ldr	r2, .L166+4
 1720 01e0 40F2A951 		movw	r1, #1449
 1721 01e4 0748     		ldr	r0, .L166+8
 1722 01e6 FFF7FEFF 		bl	__assert_func
 1723              	.LVL224:
 1724              	.L165:
1450:Lib/libcanard/canard.c ****     }
 1725              		.loc 1 1450 0 discriminator 1
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 62


 1726 01ea 0E4B     		ldr	r3, .L166+40
 1727 01ec 044A     		ldr	r2, .L166+4
 1728 01ee 40F2AA51 		movw	r1, #1450
 1729 01f2 0448     		ldr	r0, .L166+8
 1730 01f4 FFF7FEFF 		bl	__assert_func
 1731              	.LVL225:
 1732              	.L150:
 1733              	.LBE26:
1366:Lib/libcanard/canard.c ****     }
 1734              		.loc 1 1366 0
 1735 01f8 0020     		movs	r0, #0
 1736              	.LVL226:
 1737 01fa D7E7     		b	.L129
 1738              	.L167:
 1739              		.align	2
 1740              	.L166:
 1741 01fc 00000000 		.word	.LC7
 1742 0200 00000000 		.word	.LANCHOR5
 1743 0204 14000000 		.word	.LC1
 1744 0208 10000000 		.word	.LC8
 1745 020c 20000000 		.word	.LC9
 1746 0210 34000000 		.word	.LC10
 1747 0214 5C000000 		.word	.LC11
 1748 0218 84000000 		.word	.LC12
 1749 021c AC000000 		.word	.LC13
 1750 0220 DC000000 		.word	.LC14
 1751 0224 F4000000 		.word	.LC15
 1752              		.cfi_endproc
 1753              	.LFE33:
 1755              		.section	.text.swapByteOrder,"ax",%progbits
 1756              		.align	1
 1757              		.syntax unified
 1758              		.thumb
 1759              		.thumb_func
 1760              		.fpu fpv4-sp-d16
 1762              	swapByteOrder:
 1763              	.LFB35:
1476:Lib/libcanard/canard.c ****     CANARD_ASSERT(data != NULL);
 1764              		.loc 1 1476 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL227:
 1769 0000 10B5     		push	{r4, lr}
 1770              	.LCFI20:
 1771              		.cfi_def_cfa_offset 8
 1772              		.cfi_offset 4, -8
 1773              		.cfi_offset 14, -4
1477:Lib/libcanard/canard.c **** 
 1774              		.loc 1 1477 0
 1775 0002 18B1     		cbz	r0, .L173
 1776 0004 0246     		mov	r2, r0
 1777              	.LVL228:
1482:Lib/libcanard/canard.c **** 
 1778              		.loc 1 1482 0
 1779 0006 0139     		subs	r1, r1, #1
 1780              	.LVL229:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 63


1481:Lib/libcanard/canard.c ****     size_t rev = size - 1;
 1781              		.loc 1 1481 0
 1782 0008 0023     		movs	r3, #0
1484:Lib/libcanard/canard.c ****     {
 1783              		.loc 1 1484 0
 1784 000a 0CE0     		b	.L170
 1785              	.LVL230:
 1786              	.L173:
1477:Lib/libcanard/canard.c **** 
 1787              		.loc 1 1477 0 discriminator 1
 1788 000c 074B     		ldr	r3, .L174
 1789 000e 084A     		ldr	r2, .L174+4
 1790 0010 40F2C551 		movw	r1, #1477
 1791              	.LVL231:
 1792 0014 0748     		ldr	r0, .L174+8
 1793              	.LVL232:
 1794 0016 FFF7FEFF 		bl	__assert_func
 1795              	.LVL233:
 1796              	.L171:
 1797              	.LBB27:
1486:Lib/libcanard/canard.c ****         bytes[fwd] = bytes[rev];
 1798              		.loc 1 1486 0
 1799 001a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1800              	.LVL234:
1487:Lib/libcanard/canard.c ****         bytes[rev] = x;
 1801              		.loc 1 1487 0
 1802 001c 545C     		ldrb	r4, [r2, r1]	@ zero_extendqisi2
 1803 001e D454     		strb	r4, [r2, r3]
1488:Lib/libcanard/canard.c ****         fwd++;
 1804              		.loc 1 1488 0
 1805 0020 5054     		strb	r0, [r2, r1]
1489:Lib/libcanard/canard.c ****         rev--;
 1806              		.loc 1 1489 0
 1807 0022 0133     		adds	r3, r3, #1
 1808              	.LVL235:
1490:Lib/libcanard/canard.c ****     }
 1809              		.loc 1 1490 0
 1810 0024 0139     		subs	r1, r1, #1
 1811              	.LVL236:
 1812              	.L170:
 1813              	.LBE27:
1484:Lib/libcanard/canard.c ****     {
 1814              		.loc 1 1484 0
 1815 0026 8B42     		cmp	r3, r1
 1816 0028 F7D3     		bcc	.L171
1492:Lib/libcanard/canard.c **** 
 1817              		.loc 1 1492 0
 1818 002a 10BD     		pop	{r4, pc}
 1819              	.L175:
 1820              		.align	2
 1821              	.L174:
 1822 002c 00000000 		.word	.LC16
 1823 0030 00000000 		.word	.LANCHOR6
 1824 0034 14000000 		.word	.LC1
 1825              		.cfi_endproc
 1826              	.LFE35:
 1828              		.section	.text.createTxItem,"ax",%progbits
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 64


 1829              		.align	1
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1833              		.fpu fpv4-sp-d16
 1835              	createTxItem:
 1836              	.LFB20:
1004:Lib/libcanard/canard.c ****     CanardTxQueueItem* item = (CanardTxQueueItem*) allocateBlock(allocator);
 1837              		.loc 1 1004 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841              	.LVL237:
 1842 0000 08B5     		push	{r3, lr}
 1843              	.LCFI21:
 1844              		.cfi_def_cfa_offset 8
 1845              		.cfi_offset 3, -8
 1846              		.cfi_offset 14, -4
1005:Lib/libcanard/canard.c ****     if (item == NULL)
 1847              		.loc 1 1005 0
 1848 0002 FFF7FEFF 		bl	allocateBlock
 1849              	.LVL238:
1006:Lib/libcanard/canard.c ****     {
 1850              		.loc 1 1006 0
 1851 0006 0346     		mov	r3, r0
 1852 0008 28B1     		cbz	r0, .L176
1010:Lib/libcanard/canard.c ****     return item;
 1853              		.loc 1 1010 0
 1854 000a 0022     		movs	r2, #0
 1855 000c 0260     		str	r2, [r0]	@ unaligned
 1856 000e 4260     		str	r2, [r0, #4]	@ unaligned
 1857 0010 8260     		str	r2, [r0, #8]	@ unaligned
 1858 0012 C260     		str	r2, [r0, #12]	@ unaligned
 1859 0014 0261     		str	r2, [r0, #16]	@ unaligned
 1860              	.L176:
1012:Lib/libcanard/canard.c **** 
 1861              		.loc 1 1012 0
 1862 0016 1846     		mov	r0, r3
 1863              	.LVL239:
 1864 0018 08BD     		pop	{r3, pc}
 1865              		.cfi_endproc
 1866              	.LFE20:
 1868              		.section	.text.enqueueTxFrames,"ax",%progbits
 1869              		.align	1
 1870              		.syntax unified
 1871              		.thumb
 1872              		.thumb_func
 1873              		.fpu fpv4-sp-d16
 1875              	enqueueTxFrames:
 1876              	.LFB18:
 868:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 1877              		.loc 1 868 0
 1878              		.cfi_startproc
 1879              		@ args = 8, pretend = 0, frame = 8
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 1881              	.LVL240:
 1882 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 65


 1883              	.LCFI22:
 1884              		.cfi_def_cfa_offset 36
 1885              		.cfi_offset 4, -36
 1886              		.cfi_offset 5, -32
 1887              		.cfi_offset 6, -28
 1888              		.cfi_offset 7, -24
 1889              		.cfi_offset 8, -20
 1890              		.cfi_offset 9, -16
 1891              		.cfi_offset 10, -12
 1892              		.cfi_offset 11, -8
 1893              		.cfi_offset 14, -4
 1894 0004 83B0     		sub	sp, sp, #12
 1895              	.LCFI23:
 1896              		.cfi_def_cfa_offset 48
 1897 0006 0193     		str	r3, [sp, #4]
 1898 0008 0C9E     		ldr	r6, [sp, #48]
 1899 000a BDF83450 		ldrh	r5, [sp, #52]
 869:Lib/libcanard/canard.c ****     CANARD_ASSERT((can_id & CANARD_CAN_EXT_ID_MASK) == can_id);            // Flags must be cleared
 1900              		.loc 1 869 0
 1901 000e 0090     		str	r0, [sp]
 1902 0010 90B1     		cbz	r0, .L198
 1903 0012 8A46     		mov	r10, r1
 1904 0014 9346     		mov	fp, r2
 870:Lib/libcanard/canard.c **** 
 1905              		.loc 1 870 0
 1906 0016 11F0604F 		tst	r1, #-536870912
 1907 001a 14D1     		bne	.L199
 872:Lib/libcanard/canard.c ****     {
 1908              		.loc 1 872 0
 1909 001c 002A     		cmp	r2, #0
 1910 001e 7BD0     		beq	.L191
 877:Lib/libcanard/canard.c ****     {
 1911              		.loc 1 877 0
 1912 0020 0DB1     		cbz	r5, .L183
 877:Lib/libcanard/canard.c ****     {
 1913              		.loc 1 877 0 is_stmt 0 discriminator 1
 1914 0022 002E     		cmp	r6, #0
 1915 0024 7BD0     		beq	.L192
 1916              	.L183:
 1917              	.LVL241:
 884:Lib/libcanard/canard.c ****     {
 1918              		.loc 1 884 0 is_stmt 1
 1919 0026 072D     		cmp	r5, #7
 1920 0028 14D9     		bls	.L200
 1921              	.LBB28:
 905:Lib/libcanard/canard.c **** 
 1922              		.loc 1 905 0
 1923 002a 4FF08009 		mov	r9, #128
 904:Lib/libcanard/canard.c ****         uint8_t sot_eot = 0x80;
 1924              		.loc 1 904 0
 1925 002e 4FF00008 		mov	r8, #0
 903:Lib/libcanard/canard.c ****         uint8_t toggle = 0;
 1926              		.loc 1 903 0
 1927 0032 4446     		mov	r4, r8
 1928              	.LBE28:
 882:Lib/libcanard/canard.c **** 
 1929              		.loc 1 882 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 66


 1930 0034 4746     		mov	r7, r8
 1931 0036 5BE0     		b	.L184
 1932              	.LVL242:
 1933              	.L198:
 869:Lib/libcanard/canard.c ****     CANARD_ASSERT((can_id & CANARD_CAN_EXT_ID_MASK) == can_id);            // Flags must be cleared
 1934              		.loc 1 869 0 discriminator 1
 1935 0038 3D4B     		ldr	r3, .L202
 1936              	.LVL243:
 1937 003a 3E4A     		ldr	r2, .L202+4
 1938              	.LVL244:
 1939 003c 40F26531 		movw	r1, #869
 1940              	.LVL245:
 1941 0040 3D48     		ldr	r0, .L202+8
 1942              	.LVL246:
 1943 0042 FFF7FEFF 		bl	__assert_func
 1944              	.LVL247:
 1945              	.L199:
 870:Lib/libcanard/canard.c **** 
 1946              		.loc 1 870 0 discriminator 1
 1947 0046 3D4B     		ldr	r3, .L202+12
 1948              	.LVL248:
 1949 0048 3A4A     		ldr	r2, .L202+4
 1950              	.LVL249:
 1951 004a 40F26631 		movw	r1, #870
 1952              	.LVL250:
 1953 004e 3A48     		ldr	r0, .L202+8
 1954              	.LVL251:
 1955 0050 FFF7FEFF 		bl	__assert_func
 1956              	.LVL252:
 1957              	.L200:
 1958              	.LBB32:
 886:Lib/libcanard/canard.c ****         if (queue_item == NULL)
 1959              		.loc 1 886 0
 1960 0054 009F     		ldr	r7, [sp]
 1961 0056 07F10C00 		add	r0, r7, #12
 1962              	.LVL253:
 1963 005a FFF7FEFF 		bl	createTxItem
 1964              	.LVL254:
 887:Lib/libcanard/canard.c ****         {
 1965              		.loc 1 887 0
 1966 005e 0446     		mov	r4, r0
 1967 0060 0028     		cmp	r0, #0
 1968 0062 5FD0     		beq	.L194
 892:Lib/libcanard/canard.c **** 
 1969              		.loc 1 892 0
 1970 0064 2A46     		mov	r2, r5
 1971 0066 3146     		mov	r1, r6
 1972 0068 0830     		adds	r0, r0, #8
 1973              	.LVL255:
 1974 006a FFF7FEFF 		bl	memcpy
 1975              	.LVL256:
 894:Lib/libcanard/canard.c ****         queue_item->frame.data[payload_len] = (uint8_t)(0xC0U | (*transfer_id & 31U));
 1976              		.loc 1 894 0
 1977 006e 6B1C     		adds	r3, r5, #1
 1978 0070 2374     		strb	r3, [r4, #16]
 895:Lib/libcanard/canard.c ****         queue_item->frame.id = can_id | CANARD_CAN_FRAME_EFF;
 1979              		.loc 1 895 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 67


 1980 0072 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 1981 0076 03F01F03 		and	r3, r3, #31
 1982 007a 43F0C003 		orr	r3, r3, #192
 1983 007e 2544     		add	r5, r5, r4
 1984 0080 2B72     		strb	r3, [r5, #8]
 896:Lib/libcanard/canard.c **** 
 1985              		.loc 1 896 0
 1986 0082 4AF00043 		orr	r3, r10, #-2147483648
 1987 0086 6360     		str	r3, [r4, #4]
 898:Lib/libcanard/canard.c ****         result++;
 1988              		.loc 1 898 0
 1989 0088 2146     		mov	r1, r4
 1990 008a 3846     		mov	r0, r7
 1991 008c FFF7FEFF 		bl	pushTxQueue
 1992              	.LVL257:
 899:Lib/libcanard/canard.c ****     }
 1993              		.loc 1 899 0
 1994 0090 0127     		movs	r7, #1
 1995              	.LVL258:
 1996              	.L182:
 1997              	.LBE32:
 949:Lib/libcanard/canard.c **** 
 1998              		.loc 1 949 0
 1999 0092 3846     		mov	r0, r7
 2000 0094 03B0     		add	sp, sp, #12
 2001              	.LCFI24:
 2002              		.cfi_remember_state
 2003              		.cfi_def_cfa_offset 36
 2004              	.LVL259:
 2005              		@ sp needed
 2006 0096 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2007              	.LVL260:
 2008              	.L196:
 2009              	.LCFI25:
 2010              		.cfi_restore_state
 2011              	.LBB33:
 2012              	.LBB29:
 927:Lib/libcanard/canard.c ****             }
 2013              		.loc 1 927 0
 2014 009a 0023     		movs	r3, #0
 2015 009c 06E0     		b	.L186
 2016              	.LVL261:
 2017              	.L188:
 932:Lib/libcanard/canard.c ****             }
 2018              		.loc 1 932 0 discriminator 3
 2019 009e 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 2020 00a0 CA18     		adds	r2, r1, r3
 2021 00a2 1072     		strb	r0, [r2, #8]
 930:Lib/libcanard/canard.c ****             {
 2022              		.loc 1 930 0 discriminator 3
 2023 00a4 0133     		adds	r3, r3, #1
 2024              	.LVL262:
 2025 00a6 DBB2     		uxtb	r3, r3
 2026              	.LVL263:
 2027 00a8 0134     		adds	r4, r4, #1
 2028              	.LVL264:
 2029 00aa A4B2     		uxth	r4, r4
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 68


 2030              	.LVL265:
 2031              	.L186:
 930:Lib/libcanard/canard.c ****             {
 2032              		.loc 1 930 0 is_stmt 0 discriminator 1
 2033 00ac 062B     		cmp	r3, #6
 2034 00ae 01D8     		bhi	.L187
 930:Lib/libcanard/canard.c ****             {
 2035              		.loc 1 930 0 discriminator 2
 2036 00b0 AC42     		cmp	r4, r5
 2037 00b2 F4D3     		bcc	.L188
 2038              	.L187:
 935:Lib/libcanard/canard.c **** 
 2039              		.loc 1 935 0 is_stmt 1
 2040 00b4 AC42     		cmp	r4, r5
 2041 00b6 2CD0     		beq	.L201
 2042              	.LVL266:
 2043              	.L189:
 937:Lib/libcanard/canard.c ****             queue_item->frame.id = can_id | CANARD_CAN_FRAME_EFF;
 2044              		.loc 1 937 0 discriminator 4
 2045 00b8 4FEA4812 		lsl	r2, r8, #5
 2046 00bc D2B2     		uxtb	r2, r2
 2047 00be 42EA0909 		orr	r9, r2, r9
 2048              	.LVL267:
 2049 00c2 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
 2050 00c6 02F01F02 		and	r2, r2, #31
 2051 00ca 49EA0209 		orr	r9, r9, r2
 2052 00ce CA18     		adds	r2, r1, r3
 2053 00d0 82F80890 		strb	r9, [r2, #8]
 938:Lib/libcanard/canard.c ****             queue_item->frame.data_len = (uint8_t)(i + 1);
 2054              		.loc 1 938 0 discriminator 4
 2055 00d4 4AF00042 		orr	r2, r10, #-2147483648
 2056 00d8 4A60     		str	r2, [r1, #4]
 939:Lib/libcanard/canard.c ****             pushTxQueue(ins, queue_item);
 2057              		.loc 1 939 0 discriminator 4
 2058 00da 0133     		adds	r3, r3, #1
 2059              	.LVL268:
 2060 00dc 0B74     		strb	r3, [r1, #16]
 940:Lib/libcanard/canard.c **** 
 2061              		.loc 1 940 0 discriminator 4
 2062 00de 0098     		ldr	r0, [sp]
 2063 00e0 FFF7FEFF 		bl	pushTxQueue
 2064              	.LVL269:
 942:Lib/libcanard/canard.c ****             toggle ^= 1;
 2065              		.loc 1 942 0 discriminator 4
 2066 00e4 0137     		adds	r7, r7, #1
 2067              	.LVL270:
 2068 00e6 3FB2     		sxth	r7, r7
 2069              	.LVL271:
 943:Lib/libcanard/canard.c ****             sot_eot = 0;
 2070              		.loc 1 943 0 discriminator 4
 2071 00e8 88F00108 		eor	r8, r8, #1
 2072              	.LVL272:
 944:Lib/libcanard/canard.c ****         }
 2073              		.loc 1 944 0 discriminator 4
 2074 00ec 4FF00009 		mov	r9, #0
 2075              	.LVL273:
 2076              	.L184:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 69


 2077              	.LBE29:
 909:Lib/libcanard/canard.c ****         {
 2078              		.loc 1 909 0
 2079 00f0 AC42     		cmp	r4, r5
 2080 00f2 CED0     		beq	.L182
 2081              	.LBB30:
 911:Lib/libcanard/canard.c ****             if (queue_item == NULL)
 2082              		.loc 1 911 0
 2083 00f4 009B     		ldr	r3, [sp]
 2084 00f6 03F10C00 		add	r0, r3, #12
 2085 00fa FFF7FEFF 		bl	createTxItem
 2086              	.LVL274:
 912:Lib/libcanard/canard.c ****             {
 2087              		.loc 1 912 0
 2088 00fe 0146     		mov	r1, r0
 2089 0100 98B1     		cbz	r0, .L195
 2090              	.LVL275:
 918:Lib/libcanard/canard.c ****             {
 2091              		.loc 1 918 0
 2092 0102 002C     		cmp	r4, #0
 2093 0104 C9D1     		bne	.L196
 921:Lib/libcanard/canard.c ****                 queue_item->frame.data[1] = (uint8_t) (crc >> 8U);
 2094              		.loc 1 921 0
 2095 0106 019B     		ldr	r3, [sp, #4]
 2096 0108 0372     		strb	r3, [r0, #8]
 922:Lib/libcanard/canard.c ****                 i = 2;
 2097              		.loc 1 922 0
 2098 010a 1B0A     		lsrs	r3, r3, #8
 2099 010c 4372     		strb	r3, [r0, #9]
 2100              	.LVL276:
 923:Lib/libcanard/canard.c ****             }
 2101              		.loc 1 923 0
 2102 010e 0223     		movs	r3, #2
 2103 0110 CCE7     		b	.L186
 2104              	.LVL277:
 2105              	.L201:
 935:Lib/libcanard/canard.c **** 
 2106              		.loc 1 935 0
 2107 0112 4FF04009 		mov	r9, #64
 2108              	.LVL278:
 2109 0116 CFE7     		b	.L189
 2110              	.LVL279:
 2111              	.L191:
 2112              	.LBE30:
 2113              	.LBE33:
 874:Lib/libcanard/canard.c ****     }
 2114              		.loc 1 874 0
 2115 0118 6FF00107 		mvn	r7, #1
 2116 011c B9E7     		b	.L182
 2117              	.L192:
 879:Lib/libcanard/canard.c ****     }
 2118              		.loc 1 879 0
 2119 011e 6FF00107 		mvn	r7, #1
 2120 0122 B6E7     		b	.L182
 2121              	.LVL280:
 2122              	.L194:
 2123              	.LBB34:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 70


 889:Lib/libcanard/canard.c ****         }
 2124              		.loc 1 889 0
 2125 0124 6FF00207 		mvn	r7, #2
 2126 0128 B3E7     		b	.L182
 2127              	.LVL281:
 2128              	.L195:
 2129              	.LBE34:
 2130              	.LBB35:
 2131              	.LBB31:
 914:Lib/libcanard/canard.c ****             }
 2132              		.loc 1 914 0
 2133 012a 6FF00207 		mvn	r7, #2
 2134              	.LVL282:
 2135 012e B0E7     		b	.L182
 2136              	.L203:
 2137              		.align	2
 2138              	.L202:
 2139 0130 00000000 		.word	.LC0
 2140 0134 00000000 		.word	.LANCHOR7
 2141 0138 14000000 		.word	.LC1
 2142 013c 00000000 		.word	.LC17
 2143              	.LBE31:
 2144              	.LBE35:
 2145              		.cfi_endproc
 2146              	.LFE18:
 2148              		.section	.text.createRxState,"ax",%progbits
 2149              		.align	1
 2150              		.syntax unified
 2151              		.thumb
 2152              		.thumb_func
 2153              		.fpu fpv4-sp-d16
 2155              	createRxState:
 2156              	.LFB28:
1178:Lib/libcanard/canard.c ****     CanardRxState init = {
 2157              		.loc 1 1178 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 32
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161              	.LVL283:
 2162 0000 30B5     		push	{r4, r5, lr}
 2163              	.LCFI26:
 2164              		.cfi_def_cfa_offset 12
 2165              		.cfi_offset 4, -12
 2166              		.cfi_offset 5, -8
 2167              		.cfi_offset 14, -4
 2168 0002 89B0     		sub	sp, sp, #36
 2169              	.LCFI27:
 2170              		.cfi_def_cfa_offset 48
 2171 0004 0446     		mov	r4, r0
 2172 0006 0D46     		mov	r5, r1
1179:Lib/libcanard/canard.c ****         .next = NULL,
 2173              		.loc 1 1179 0
 2174 0008 2022     		movs	r2, #32
 2175 000a 0021     		movs	r1, #0
 2176              	.LVL284:
 2177 000c 6846     		mov	r0, sp
 2178              	.LVL285:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 71


 2179 000e FFF7FEFF 		bl	memset
 2180              	.LVL286:
 2181 0012 0495     		str	r5, [sp, #16]
1185:Lib/libcanard/canard.c ****     if (state == NULL)
 2182              		.loc 1 1185 0
 2183 0014 2046     		mov	r0, r4
 2184 0016 FFF7FEFF 		bl	allocateBlock
 2185              	.LVL287:
1186:Lib/libcanard/canard.c ****     {
 2186              		.loc 1 1186 0
 2187 001a 0546     		mov	r5, r0
 2188              	.LVL288:
 2189 001c 50B1     		cbz	r0, .L204
1190:Lib/libcanard/canard.c **** 
 2190              		.loc 1 1190 0
 2191 001e 6C46     		mov	r4, sp
 2192              	.LVL289:
 2193 0020 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2194              	.LVL290:
 2195 0022 2860     		str	r0, [r5]	@ unaligned
 2196 0024 6960     		str	r1, [r5, #4]	@ unaligned
 2197 0026 AA60     		str	r2, [r5, #8]	@ unaligned
 2198 0028 EB60     		str	r3, [r5, #12]	@ unaligned
 2199 002a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2200 002c 2861     		str	r0, [r5, #16]	@ unaligned
 2201 002e 6961     		str	r1, [r5, #20]	@ unaligned
 2202 0030 AA61     		str	r2, [r5, #24]	@ unaligned
 2203 0032 EB61     		str	r3, [r5, #28]	@ unaligned
 2204              	.L204:
1193:Lib/libcanard/canard.c **** 
 2205              		.loc 1 1193 0
 2206 0034 2846     		mov	r0, r5
 2207 0036 09B0     		add	sp, sp, #36
 2208              	.LCFI28:
 2209              		.cfi_def_cfa_offset 12
 2210              		@ sp needed
 2211 0038 30BD     		pop	{r4, r5, pc}
 2212              		.cfi_endproc
 2213              	.LFE28:
 2215              		.section	.text.prependRxState,"ax",%progbits
 2216              		.align	1
 2217              		.syntax unified
 2218              		.thumb
 2219              		.thumb_func
 2220              		.fpu fpv4-sp-d16
 2222              	prependRxState:
 2223              	.LFB27:
1164:Lib/libcanard/canard.c ****     CanardRxState* state = createRxState(&ins->allocator, transfer_descriptor);
 2224              		.loc 1 1164 0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 0
 2227              		@ frame_needed = 0, uses_anonymous_args = 0
 2228              	.LVL291:
 2229 0000 10B5     		push	{r4, lr}
 2230              	.LCFI29:
 2231              		.cfi_def_cfa_offset 8
 2232              		.cfi_offset 4, -8
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 72


 2233              		.cfi_offset 14, -4
 2234 0002 0446     		mov	r4, r0
1165:Lib/libcanard/canard.c **** 
 2235              		.loc 1 1165 0
 2236 0004 0C30     		adds	r0, r0, #12
 2237              	.LVL292:
 2238 0006 FFF7FEFF 		bl	createRxState
 2239              	.LVL293:
1167:Lib/libcanard/canard.c ****     {
 2240              		.loc 1 1167 0
 2241 000a 0346     		mov	r3, r0
 2242 000c 10B1     		cbz	r0, .L207
1172:Lib/libcanard/canard.c ****     ins->rx_states = state;
 2243              		.loc 1 1172 0
 2244 000e A269     		ldr	r2, [r4, #24]
 2245 0010 0260     		str	r2, [r0]
1173:Lib/libcanard/canard.c ****     return state;
 2246              		.loc 1 1173 0
 2247 0012 A061     		str	r0, [r4, #24]
 2248              	.L207:
1175:Lib/libcanard/canard.c **** 
 2249              		.loc 1 1175 0
 2250 0014 1846     		mov	r0, r3
 2251              	.LVL294:
 2252 0016 10BD     		pop	{r4, pc}
 2253              		.cfi_endproc
 2254              	.LFE27:
 2256              		.section	.text.traverseRxStates,"ax",%progbits
 2257              		.align	1
 2258              		.syntax unified
 2259              		.thumb
 2260              		.thumb_func
 2261              		.fpu fpv4-sp-d16
 2263              	traverseRxStates:
 2264              	.LFB25:
1117:Lib/libcanard/canard.c ****     CanardRxState* states = ins->rx_states;
 2265              		.loc 1 1117 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              	.LVL295:
 2270 0000 38B5     		push	{r3, r4, r5, lr}
 2271              	.LCFI30:
 2272              		.cfi_def_cfa_offset 16
 2273              		.cfi_offset 3, -16
 2274              		.cfi_offset 4, -12
 2275              		.cfi_offset 5, -8
 2276              		.cfi_offset 14, -4
 2277 0002 0446     		mov	r4, r0
 2278 0004 0D46     		mov	r5, r1
1118:Lib/libcanard/canard.c **** 
 2279              		.loc 1 1118 0
 2280 0006 8069     		ldr	r0, [r0, #24]
 2281              	.LVL296:
1120:Lib/libcanard/canard.c ****     {
 2282              		.loc 1 1120 0
 2283 0008 28B1     		cbz	r0, .L214
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 73


1133:Lib/libcanard/canard.c ****     if (states != NULL)
 2284              		.loc 1 1133 0
 2285 000a FFF7FEFF 		bl	findRxState
 2286              	.LVL297:
1134:Lib/libcanard/canard.c ****     {
 2287              		.loc 1 1134 0
 2288 000e 0346     		mov	r3, r0
 2289 0010 50B1     		cbz	r0, .L215
 2290              	.LVL298:
 2291              	.L210:
1142:Lib/libcanard/canard.c **** 
 2292              		.loc 1 1142 0
 2293 0012 1846     		mov	r0, r3
 2294 0014 38BD     		pop	{r3, r4, r5, pc}
 2295              	.LVL299:
 2296              	.L214:
1122:Lib/libcanard/canard.c ****         
 2297              		.loc 1 1122 0
 2298 0016 04F10C00 		add	r0, r4, #12
 2299              	.LVL300:
 2300 001a FFF7FEFF 		bl	createRxState
 2301              	.LVL301:
1124:Lib/libcanard/canard.c ****         {
 2302              		.loc 1 1124 0
 2303 001e 0346     		mov	r3, r0
 2304 0020 0028     		cmp	r0, #0
 2305 0022 F6D0     		beq	.L210
1129:Lib/libcanard/canard.c ****         return states;
 2306              		.loc 1 1129 0
 2307 0024 A061     		str	r0, [r4, #24]
1130:Lib/libcanard/canard.c ****     }
 2308              		.loc 1 1130 0
 2309 0026 F4E7     		b	.L210
 2310              	.L215:
1140:Lib/libcanard/canard.c ****     }
 2311              		.loc 1 1140 0
 2312 0028 2946     		mov	r1, r5
 2313 002a 2046     		mov	r0, r4
 2314              	.LVL302:
 2315 002c FFF7FEFF 		bl	prependRxState
 2316              	.LVL303:
 2317 0030 0346     		mov	r3, r0
 2318 0032 EEE7     		b	.L210
 2319              		.cfi_endproc
 2320              	.LFE25:
 2322              		.section	.text.canardInit,"ax",%progbits
 2323              		.align	1
 2324              		.global	canardInit
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu fpv4-sp-d16
 2330              	canardInit:
 2331              	.LFB0:
  78:Lib/libcanard/canard.c ****     CANARD_ASSERT(out_ins != NULL);
 2332              		.loc 1 78 0
 2333              		.cfi_startproc
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 74


 2334              		@ args = 8, pretend = 0, frame = 0
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336              	.LVL304:
 2337 0000 10B5     		push	{r4, lr}
 2338              	.LCFI31:
 2339              		.cfi_def_cfa_offset 8
 2340              		.cfi_offset 4, -8
 2341              		.cfi_offset 14, -4
  79:Lib/libcanard/canard.c **** 
 2342              		.loc 1 79 0
 2343 0002 C8B1     		cbz	r0, .L221
 2344 0004 0446     		mov	r4, r0
  89:Lib/libcanard/canard.c **** 
 2345              		.loc 1 89 0
 2346 0006 0020     		movs	r0, #0
 2347              	.LVL305:
 2348 0008 2060     		str	r0, [r4]	@ unaligned
 2349 000a E060     		str	r0, [r4, #12]	@ unaligned
 2350 000c 2061     		str	r0, [r4, #16]	@ unaligned
 2351 000e 6061     		str	r0, [r4, #20]	@ unaligned
  91:Lib/libcanard/canard.c ****     out_ins->on_reception = on_reception;
 2352              		.loc 1 91 0
 2353 0010 2070     		strb	r0, [r4]
  92:Lib/libcanard/canard.c ****     out_ins->should_accept = should_accept;
 2354              		.loc 1 92 0
 2355 0012 A360     		str	r3, [r4, #8]
  93:Lib/libcanard/canard.c ****     out_ins->rx_states = NULL;
 2356              		.loc 1 93 0
 2357 0014 029B     		ldr	r3, [sp, #8]
 2358              	.LVL306:
 2359 0016 6360     		str	r3, [r4, #4]
  94:Lib/libcanard/canard.c ****     out_ins->tx_queue = NULL;
 2360              		.loc 1 94 0
 2361 0018 A061     		str	r0, [r4, #24]
  95:Lib/libcanard/canard.c ****     out_ins->user_reference = user_reference;
 2362              		.loc 1 95 0
 2363 001a E061     		str	r0, [r4, #28]
  96:Lib/libcanard/canard.c **** 
 2364              		.loc 1 96 0
 2365 001c 039B     		ldr	r3, [sp, #12]
 2366 001e 2362     		str	r3, [r4, #32]
  98:Lib/libcanard/canard.c ****     if (pool_capacity > 0xFFFFU)
 2367              		.loc 1 98 0
 2368 0020 5209     		lsrs	r2, r2, #5
 2369              	.LVL307:
  99:Lib/libcanard/canard.c ****     {
 2370              		.loc 1 99 0
 2371 0022 B2F5803F 		cmp	r2, #65536
 2372 0026 01D3     		bcc	.L218
 101:Lib/libcanard/canard.c ****     }
 2373              		.loc 1 101 0
 2374 0028 4FF6FF72 		movw	r2, #65535
 2375              	.LVL308:
 2376              	.L218:
 104:Lib/libcanard/canard.c **** }
 2377              		.loc 1 104 0
 2378 002c 92B2     		uxth	r2, r2
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 75


 2379              	.LVL309:
 2380 002e 04F10C00 		add	r0, r4, #12
 2381 0032 FFF7FEFF 		bl	initPoolAllocator
 2382              	.LVL310:
 105:Lib/libcanard/canard.c **** 
 2383              		.loc 1 105 0
 2384 0036 10BD     		pop	{r4, pc}
 2385              	.LVL311:
 2386              	.L221:
  79:Lib/libcanard/canard.c **** 
 2387              		.loc 1 79 0 discriminator 1
 2388 0038 024B     		ldr	r3, .L222
 2389              	.LVL312:
 2390 003a 034A     		ldr	r2, .L222+4
 2391              	.LVL313:
 2392 003c 4F21     		movs	r1, #79
 2393              	.LVL314:
 2394 003e 0348     		ldr	r0, .L222+8
 2395              	.LVL315:
 2396 0040 FFF7FEFF 		bl	__assert_func
 2397              	.LVL316:
 2398              	.L223:
 2399              		.align	2
 2400              	.L222:
 2401 0044 00000000 		.word	.LC18
 2402 0048 00000000 		.word	.LANCHOR8
 2403 004c 14000000 		.word	.LC1
 2404              		.cfi_endproc
 2405              	.LFE0:
 2407              		.section	.text.canardGetUserReference,"ax",%progbits
 2408              		.align	1
 2409              		.global	canardGetUserReference
 2410              		.syntax unified
 2411              		.thumb
 2412              		.thumb_func
 2413              		.fpu fpv4-sp-d16
 2415              	canardGetUserReference:
 2416              	.LFB1:
 108:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 2417              		.loc 1 108 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              	.LVL317:
 2422 0000 08B5     		push	{r3, lr}
 2423              	.LCFI32:
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 3, -8
 2426              		.cfi_offset 14, -4
 109:Lib/libcanard/canard.c ****     return ins->user_reference;
 2427              		.loc 1 109 0
 2428 0002 08B1     		cbz	r0, .L227
 111:Lib/libcanard/canard.c **** 
 2429              		.loc 1 111 0
 2430 0004 006A     		ldr	r0, [r0, #32]
 2431              	.LVL318:
 2432 0006 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 76


 2433              	.LVL319:
 2434              	.L227:
 109:Lib/libcanard/canard.c ****     return ins->user_reference;
 2435              		.loc 1 109 0 discriminator 1
 2436 0008 024B     		ldr	r3, .L228
 2437 000a 034A     		ldr	r2, .L228+4
 2438 000c 6D21     		movs	r1, #109
 2439 000e 0348     		ldr	r0, .L228+8
 2440              	.LVL320:
 2441 0010 FFF7FEFF 		bl	__assert_func
 2442              	.LVL321:
 2443              	.L229:
 2444              		.align	2
 2445              	.L228:
 2446 0014 00000000 		.word	.LC0
 2447 0018 00000000 		.word	.LANCHOR9
 2448 001c 14000000 		.word	.LC1
 2449              		.cfi_endproc
 2450              	.LFE1:
 2452              		.section	.text.canardSetLocalNodeID,"ax",%progbits
 2453              		.align	1
 2454              		.global	canardSetLocalNodeID
 2455              		.syntax unified
 2456              		.thumb
 2457              		.thumb_func
 2458              		.fpu fpv4-sp-d16
 2460              	canardSetLocalNodeID:
 2461              	.LFB2:
 114:Lib/libcanard/canard.c ****     CANARD_ASSERT(ins != NULL);
 2462              		.loc 1 114 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              	.LVL322:
 2467 0000 08B5     		push	{r3, lr}
 2468              	.LCFI33:
 2469              		.cfi_def_cfa_offset 8
 2470              		.cfi_offset 3, -8
 2471              		.cfi_offset 14, -4
 115:Lib/libcanard/canard.c **** 
 2472              		.loc 1 115 0
 2473 0002 38B1     		cbz	r0, .L235
 117:Lib/libcanard/canard.c ****         (self_node_id >= CANARD_MIN_NODE_ID) &&
 2474              		.loc 1 117 0
 2475 0004 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 2476 0006 5AB9     		cbnz	r2, .L232
 117:Lib/libcanard/canard.c ****         (self_node_id >= CANARD_MIN_NODE_ID) &&
 2477              		.loc 1 117 0 is_stmt 0 discriminator 1
 2478 0008 51B1     		cbz	r1, .L232
 118:Lib/libcanard/canard.c ****         (self_node_id <= CANARD_MAX_NODE_ID))
 2479              		.loc 1 118 0 is_stmt 1
 2480 000a 11F0800F 		tst	r1, #128
 2481 000e 07D1     		bne	.L232
 121:Lib/libcanard/canard.c ****     }
 2482              		.loc 1 121 0
 2483 0010 0170     		strb	r1, [r0]
 127:Lib/libcanard/canard.c **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 77


 2484              		.loc 1 127 0
 2485 0012 08BD     		pop	{r3, pc}
 2486              	.L235:
 115:Lib/libcanard/canard.c **** 
 2487              		.loc 1 115 0 discriminator 1
 2488 0014 054B     		ldr	r3, .L236
 2489 0016 064A     		ldr	r2, .L236+4
 2490 0018 7321     		movs	r1, #115
 2491              	.LVL323:
 2492 001a 0648     		ldr	r0, .L236+8
 2493              	.LVL324:
 2494 001c FFF7FEFF 		bl	__assert_func
 2495              	.LVL325:
 2496              	.L232:
 125:Lib/libcanard/canard.c ****     }
 2497              		.loc 1 125 0
 2498 0020 054B     		ldr	r3, .L236+12
 2499 0022 034A     		ldr	r2, .L236+4
 2500 0024 7D21     		movs	r1, #125
 2501              	.LVL326:
 2502 0026 0348     		ldr	r0, .L236+8
 2503              	.LVL327:
 2504 0028 FFF7FEFF 		bl	__assert_func
 2505              	.LVL328:
 2506              	.L237:
 2507              		.align	2
 2508              	.L236:
 2509 002c 00000000 		.word	.LC0
 2510 0030 00000000 		.word	.LANCHOR10
 2511 0034 14000000 		.word	.LC1
 2512 0038 00000000 		.word	.LC19
 2513              		.cfi_endproc
 2514              	.LFE2:
 2516              		.section	.text.canardGetLocalNodeID,"ax",%progbits
 2517              		.align	1
 2518              		.global	canardGetLocalNodeID
 2519              		.syntax unified
 2520              		.thumb
 2521              		.thumb_func
 2522              		.fpu fpv4-sp-d16
 2524              	canardGetLocalNodeID:
 2525              	.LFB3:
 130:Lib/libcanard/canard.c ****     return ins->node_id;
 2526              		.loc 1 130 0
 2527              		.cfi_startproc
 2528              		@ args = 0, pretend = 0, frame = 0
 2529              		@ frame_needed = 0, uses_anonymous_args = 0
 2530              		@ link register save eliminated.
 2531              	.LVL329:
 132:Lib/libcanard/canard.c **** 
 2532              		.loc 1 132 0
 2533 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2534              	.LVL330:
 2535 0002 7047     		bx	lr
 2536              		.cfi_endproc
 2537              	.LFE3:
 2539              		.section	.text.canardBroadcast,"ax",%progbits
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 78


 2540              		.align	1
 2541              		.global	canardBroadcast
 2542              		.syntax unified
 2543              		.thumb
 2544              		.thumb_func
 2545              		.fpu fpv4-sp-d16
 2547              	canardBroadcast:
 2548              	.LFB4:
 141:Lib/libcanard/canard.c ****     if (payload == NULL && payload_len > 0)
 2549              		.loc 1 141 0
 2550              		.cfi_startproc
 2551              		@ args = 20, pretend = 0, frame = 8
 2552              		@ frame_needed = 0, uses_anonymous_args = 0
 2553              	.LVL331:
 2554 0000 2DE9F04A 		push	{r4, r5, r6, r7, r9, fp, lr}
 2555              	.LCFI34:
 2556              		.cfi_def_cfa_offset 28
 2557              		.cfi_offset 4, -28
 2558              		.cfi_offset 5, -24
 2559              		.cfi_offset 6, -20
 2560              		.cfi_offset 7, -16
 2561              		.cfi_offset 9, -12
 2562              		.cfi_offset 11, -8
 2563              		.cfi_offset 14, -4
 2564 0004 85B0     		sub	sp, sp, #20
 2565              	.LCFI35:
 2566              		.cfi_def_cfa_offset 48
 2567 0006 BDF83040 		ldrh	r4, [sp, #48]
 2568 000a 9DF838B0 		ldrb	fp, [sp, #56]	@ zero_extendqisi2
 2569 000e 0F9E     		ldr	r6, [sp, #60]
 2570 0010 BDF84070 		ldrh	r7, [sp, #64]
 142:Lib/libcanard/canard.c ****     {
 2571              		.loc 1 142 0
 2572 0014 9EB3     		cbz	r6, .L250
 2573              	.L240:
 146:Lib/libcanard/canard.c ****     {
 2574              		.loc 1 146 0
 2575 0016 BBF11F0F 		cmp	fp, #31
 2576 001a 4BD8     		bhi	.L245
 2577 001c CDE90223 		strd	r2, [sp, #8]
 2578 0020 0546     		mov	r5, r0
 2579              	.LVL332:
 154:Lib/libcanard/canard.c ****     {
 2580              		.loc 1 154 0
 2581 0022 FFF7FEFF 		bl	canardGetLocalNodeID
 2582              	.LVL333:
 2583 0026 8146     		mov	r9, r0
 2584 0028 70BB     		cbnz	r0, .L242
 2585              	.LBB36:
 156:Lib/libcanard/canard.c ****         {
 2586              		.loc 1 156 0
 2587 002a 072F     		cmp	r7, #7
 2588 002c 45D8     		bhi	.L246
 163:Lib/libcanard/canard.c ****         {
 2589              		.loc 1 163 0
 2590 002e 34F00303 		bics	r3, r4, #3
 2591 0032 45D1     		bne	.L247
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 79


 169:Lib/libcanard/canard.c ****         can_id = ((uint32_t) priority << 24U) | ((uint32_t) discriminator << 9U) |
 2592              		.loc 1 169 0
 2593 0034 3A46     		mov	r2, r7
 2594 0036 3146     		mov	r1, r6
 2595 0038 4FF6FF70 		movw	r0, #65535
 2596 003c FFF7FEFF 		bl	crcAdd
 2597              	.LVL334:
 2598 0040 20F00100 		bic	r0, r0, #1
 2599 0044 4004     		lsls	r0, r0, #17
 2600 0046 400C     		lsrs	r0, r0, #17
 2601              	.LVL335:
 170:Lib/libcanard/canard.c ****                  ((uint32_t) (data_type_id & DTIDMask) << 8U) | (uint32_t) canardGetLocalNodeID(ins
 2602              		.loc 1 170 0
 2603 0048 4002     		lsls	r0, r0, #9
 2604              	.LVL336:
 2605 004a 40EA0B6B 		orr	fp, r0, fp, lsl #24
 171:Lib/libcanard/canard.c ****     }
 2606              		.loc 1 171 0
 2607 004e 2402     		lsls	r4, r4, #8
 2608 0050 04F44074 		and	r4, r4, #768
 170:Lib/libcanard/canard.c ****                  ((uint32_t) (data_type_id & DTIDMask) << 8U) | (uint32_t) canardGetLocalNodeID(ins
 2609              		.loc 1 170 0
 2610 0054 4BEA0404 		orr	r4, fp, r4
 2611 0058 44EA0909 		orr	r9, r4, r9
 2612              	.LVL337:
 2613              	.LBE36:
 152:Lib/libcanard/canard.c **** 
 2614              		.loc 1 152 0
 2615 005c 4FF6FF73 		movw	r3, #65535
 2616              	.LVL338:
 2617              	.L243:
 184:Lib/libcanard/canard.c **** 
 2618              		.loc 1 184 0
 2619 0060 0197     		str	r7, [sp, #4]
 2620 0062 0096     		str	r6, [sp]
 2621 0064 0D9A     		ldr	r2, [sp, #52]
 2622 0066 4946     		mov	r1, r9
 2623 0068 2846     		mov	r0, r5
 2624 006a FFF7FEFF 		bl	enqueueTxFrames
 2625              	.LVL339:
 2626 006e 0446     		mov	r4, r0
 2627              	.LVL340:
 186:Lib/libcanard/canard.c **** 
 2628              		.loc 1 186 0
 2629 0070 0D98     		ldr	r0, [sp, #52]
 2630 0072 FFF7FEFF 		bl	incrementTransferID
 2631              	.LVL341:
 2632              	.L241:
 189:Lib/libcanard/canard.c **** 
 2633              		.loc 1 189 0
 2634 0076 2046     		mov	r0, r4
 2635 0078 05B0     		add	sp, sp, #20
 2636              	.LCFI36:
 2637              		.cfi_remember_state
 2638              		.cfi_def_cfa_offset 28
 2639              		@ sp needed
 2640 007a BDE8F08A 		pop	{r4, r5, r6, r7, r9, fp, pc}
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 80


 2641              	.LVL342:
 2642              	.L250:
 2643              	.LCFI37:
 2644              		.cfi_restore_state
 142:Lib/libcanard/canard.c ****     {
 2645              		.loc 1 142 0 discriminator 1
 2646 007e 002F     		cmp	r7, #0
 2647 0080 C9D0     		beq	.L240
 144:Lib/libcanard/canard.c ****     }
 2648              		.loc 1 144 0
 2649 0082 6FF00104 		mvn	r4, #1
 2650 0086 F6E7     		b	.L241
 2651              	.LVL343:
 2652              	.L242:
 175:Lib/libcanard/canard.c **** 
 2653              		.loc 1 175 0
 2654 0088 2402     		lsls	r4, r4, #8
 2655 008a 44EA0B64 		orr	r4, r4, fp, lsl #24
 2656 008e 44EA0009 		orr	r9, r4, r0
 2657              	.LVL344:
 177:Lib/libcanard/canard.c ****         {
 2658              		.loc 1 177 0
 2659 0092 072F     		cmp	r7, #7
 2660 0094 0BD9     		bls	.L248
 179:Lib/libcanard/canard.c ****             crc = crcAdd(crc, payload, payload_len);
 2661              		.loc 1 179 0
 2662 0096 DDE90223 		ldrd	r2, [sp, #8]
 2663 009a 4FF6FF70 		movw	r0, #65535
 2664 009e FFF7FEFF 		bl	crcAddSignature
 2665              	.LVL345:
 180:Lib/libcanard/canard.c ****         }
 2666              		.loc 1 180 0
 2667 00a2 3A46     		mov	r2, r7
 2668 00a4 3146     		mov	r1, r6
 2669 00a6 FFF7FEFF 		bl	crcAdd
 2670              	.LVL346:
 2671 00aa 0346     		mov	r3, r0
 2672              	.LVL347:
 2673 00ac D8E7     		b	.L243
 2674              	.LVL348:
 2675              	.L248:
 152:Lib/libcanard/canard.c **** 
 2676              		.loc 1 152 0
 2677 00ae 4FF6FF73 		movw	r3, #65535
 2678 00b2 D5E7     		b	.L243
 2679              	.LVL349:
 2680              	.L245:
 148:Lib/libcanard/canard.c ****     }
 2681              		.loc 1 148 0
 2682 00b4 6FF00104 		mvn	r4, #1
 2683 00b8 DDE7     		b	.L241
 2684              	.LVL350:
 2685              	.L246:
 2686              	.LBB37:
 158:Lib/libcanard/canard.c ****         }
 2687              		.loc 1 158 0
 2688 00ba 6FF00304 		mvn	r4, #3
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 81


 2689 00be DAE7     		b	.L241
 2690              	.L247:
 165:Lib/libcanard/canard.c ****         }
 2691              		.loc 1 165 0
 2692 00c0 6FF00104 		mvn	r4, #1
 2693 00c4 D7E7     		b	.L241
 2694              	.LBE37:
 2695              		.cfi_endproc
 2696              	.LFE4:
 2698              		.section	.text.canardRequestOrRespond,"ax",%progbits
 2699              		.align	1
 2700              		.global	canardRequestOrRespond
 2701              		.syntax unified
 2702              		.thumb
 2703              		.thumb_func
 2704              		.fpu fpv4-sp-d16
 2706              	canardRequestOrRespond:
 2707              	.LFB5:
 200:Lib/libcanard/canard.c ****     if (payload == NULL && payload_len > 0)
 2708              		.loc 1 200 0
 2709              		.cfi_startproc
 2710              		@ args = 24, pretend = 0, frame = 0
 2711              		@ frame_needed = 0, uses_anonymous_args = 0
 2712              	.LVL351:
 2713 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2714              	.LCFI38:
 2715              		.cfi_def_cfa_offset 36
 2716              		.cfi_offset 4, -36
 2717              		.cfi_offset 5, -32
 2718              		.cfi_offset 6, -28
 2719              		.cfi_offset 7, -24
 2720              		.cfi_offset 8, -20
 2721              		.cfi_offset 9, -16
 2722              		.cfi_offset 10, -12
 2723              		.cfi_offset 11, -8
 2724              		.cfi_offset 14, -4
 2725 0004 83B0     		sub	sp, sp, #12
 2726              	.LCFI39:
 2727              		.cfi_def_cfa_offset 48
 2728 0006 9DF83840 		ldrb	r4, [sp, #56]	@ zero_extendqisi2
 2729 000a 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2
 2730 000e 109E     		ldr	r6, [sp, #64]
 2731 0010 BDF84470 		ldrh	r7, [sp, #68]
 201:Lib/libcanard/canard.c ****     {
 2732              		.loc 1 201 0
 2733 0014 86B3     		cbz	r6, .L260
 2734              	.L252:
 205:Lib/libcanard/canard.c ****     {
 2735              		.loc 1 205 0
 2736 0016 1F2C     		cmp	r4, #31
 2737 0018 3AD8     		bhi	.L256
 2738 001a 9046     		mov	r8, r2
 2739 001c 9946     		mov	r9, r3
 2740 001e 8B46     		mov	fp, r1
 2741 0020 0546     		mov	r5, r0
 209:Lib/libcanard/canard.c ****     {
 2742              		.loc 1 209 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 82


 2743 0022 FFF7FEFF 		bl	canardGetLocalNodeID
 2744              	.LVL352:
 2745 0026 B0B3     		cbz	r0, .L257
 214:Lib/libcanard/canard.c ****                             ((uint32_t) kind << 15U) | ((uint32_t) destination_node_id << 8U) |
 2746              		.loc 1 214 0
 2747 0028 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 2748 002c 1B04     		lsls	r3, r3, #16
 2749 002e 43EA0464 		orr	r4, r3, r4, lsl #24
 2750 0032 44EACA34 		orr	r4, r4, r10, lsl #15
 215:Lib/libcanard/canard.c ****                             (1U << 7U) | (uint32_t) canardGetLocalNodeID(ins);
 2751              		.loc 1 215 0
 2752 0036 44EA0B24 		orr	r4, r4, fp, lsl #8
 216:Lib/libcanard/canard.c ****     uint16_t crc = 0xFFFFU;
 2753              		.loc 1 216 0
 2754 003a 0443     		orrs	r4, r4, r0
 214:Lib/libcanard/canard.c ****                             ((uint32_t) kind << 15U) | ((uint32_t) destination_node_id << 8U) |
 2755              		.loc 1 214 0
 2756 003c 44F08004 		orr	r4, r4, #128
 2757              	.LVL353:
 219:Lib/libcanard/canard.c ****     {
 2758              		.loc 1 219 0
 2759 0040 072F     		cmp	r7, #7
 2760 0042 1ED9     		bls	.L258
 221:Lib/libcanard/canard.c ****         crc = crcAdd(crc, payload, payload_len);
 2761              		.loc 1 221 0
 2762 0044 4246     		mov	r2, r8
 2763 0046 4B46     		mov	r3, r9
 2764 0048 4FF6FF70 		movw	r0, #65535
 2765 004c FFF7FEFF 		bl	crcAddSignature
 2766              	.LVL354:
 222:Lib/libcanard/canard.c ****     }
 2767              		.loc 1 222 0
 2768 0050 3A46     		mov	r2, r7
 2769 0052 3146     		mov	r1, r6
 2770 0054 FFF7FEFF 		bl	crcAdd
 2771              	.LVL355:
 2772 0058 0346     		mov	r3, r0
 2773              	.LVL356:
 2774              	.L254:
 225:Lib/libcanard/canard.c **** 
 2775              		.loc 1 225 0
 2776 005a 0197     		str	r7, [sp, #4]
 2777 005c 0096     		str	r6, [sp]
 2778 005e 0D9A     		ldr	r2, [sp, #52]
 2779 0060 2146     		mov	r1, r4
 2780 0062 2846     		mov	r0, r5
 2781 0064 FFF7FEFF 		bl	enqueueTxFrames
 2782              	.LVL357:
 2783 0068 0446     		mov	r4, r0
 2784              	.LVL358:
 227:Lib/libcanard/canard.c ****     {
 2785              		.loc 1 227 0
 2786 006a BAF1010F 		cmp	r10, #1
 2787 006e 0BD0     		beq	.L261
 2788              	.LVL359:
 2789              	.L253:
 233:Lib/libcanard/canard.c **** 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 83


 2790              		.loc 1 233 0
 2791 0070 2046     		mov	r0, r4
 2792 0072 03B0     		add	sp, sp, #12
 2793              	.LCFI40:
 2794              		.cfi_remember_state
 2795              		.cfi_def_cfa_offset 36
 2796              		@ sp needed
 2797 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2798              	.LVL360:
 2799              	.L260:
 2800              	.LCFI41:
 2801              		.cfi_restore_state
 201:Lib/libcanard/canard.c ****     {
 2802              		.loc 1 201 0 discriminator 1
 2803 0078 002F     		cmp	r7, #0
 2804 007a CCD0     		beq	.L252
 203:Lib/libcanard/canard.c ****     }
 2805              		.loc 1 203 0
 2806 007c 6FF00104 		mvn	r4, #1
 2807 0080 F6E7     		b	.L253
 2808              	.LVL361:
 2809              	.L258:
 217:Lib/libcanard/canard.c **** 
 2810              		.loc 1 217 0
 2811 0082 4FF6FF73 		movw	r3, #65535
 2812 0086 E8E7     		b	.L254
 2813              	.LVL362:
 2814              	.L261:
 229:Lib/libcanard/canard.c ****     }
 2815              		.loc 1 229 0
 2816 0088 0D98     		ldr	r0, [sp, #52]
 2817 008a FFF7FEFF 		bl	incrementTransferID
 2818              	.LVL363:
 2819 008e EFE7     		b	.L253
 2820              	.LVL364:
 2821              	.L256:
 207:Lib/libcanard/canard.c ****     }
 2822              		.loc 1 207 0
 2823 0090 6FF00104 		mvn	r4, #1
 2824 0094 ECE7     		b	.L253
 2825              	.LVL365:
 2826              	.L257:
 211:Lib/libcanard/canard.c ****     }
 2827              		.loc 1 211 0
 2828 0096 6FF00304 		mvn	r4, #3
 2829 009a E9E7     		b	.L253
 2830              		.cfi_endproc
 2831              	.LFE5:
 2833              		.section	.text.canardPeekTxQueue,"ax",%progbits
 2834              		.align	1
 2835              		.global	canardPeekTxQueue
 2836              		.syntax unified
 2837              		.thumb
 2838              		.thumb_func
 2839              		.fpu fpv4-sp-d16
 2841              	canardPeekTxQueue:
 2842              	.LFB6:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 84


 236:Lib/libcanard/canard.c ****     if (ins->tx_queue == NULL)
 2843              		.loc 1 236 0
 2844              		.cfi_startproc
 2845              		@ args = 0, pretend = 0, frame = 0
 2846              		@ frame_needed = 0, uses_anonymous_args = 0
 2847              		@ link register save eliminated.
 2848              	.LVL366:
 237:Lib/libcanard/canard.c ****     {
 2849              		.loc 1 237 0
 2850 0000 C069     		ldr	r0, [r0, #28]
 2851              	.LVL367:
 2852 0002 08B1     		cbz	r0, .L264
 241:Lib/libcanard/canard.c **** }
 2853              		.loc 1 241 0
 2854 0004 0430     		adds	r0, r0, #4
 2855 0006 7047     		bx	lr
 2856              	.L264:
 239:Lib/libcanard/canard.c ****     }
 2857              		.loc 1 239 0
 2858 0008 0020     		movs	r0, #0
 242:Lib/libcanard/canard.c **** 
 2859              		.loc 1 242 0
 2860 000a 7047     		bx	lr
 2861              		.cfi_endproc
 2862              	.LFE6:
 2864              		.section	.text.canardPopTxQueue,"ax",%progbits
 2865              		.align	1
 2866              		.global	canardPopTxQueue
 2867              		.syntax unified
 2868              		.thumb
 2869              		.thumb_func
 2870              		.fpu fpv4-sp-d16
 2872              	canardPopTxQueue:
 2873              	.LFB7:
 245:Lib/libcanard/canard.c ****     CanardTxQueueItem* item = ins->tx_queue;
 2874              		.loc 1 245 0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 0
 2877              		@ frame_needed = 0, uses_anonymous_args = 0
 2878              	.LVL368:
 2879 0000 08B5     		push	{r3, lr}
 2880              	.LCFI42:
 2881              		.cfi_def_cfa_offset 8
 2882              		.cfi_offset 3, -8
 2883              		.cfi_offset 14, -4
 246:Lib/libcanard/canard.c ****     ins->tx_queue = item->next;
 2884              		.loc 1 246 0
 2885 0002 C169     		ldr	r1, [r0, #28]
 2886              	.LVL369:
 247:Lib/libcanard/canard.c ****     freeBlock(&ins->allocator, item);
 2887              		.loc 1 247 0
 2888 0004 0B68     		ldr	r3, [r1]
 2889 0006 C361     		str	r3, [r0, #28]
 248:Lib/libcanard/canard.c **** }
 2890              		.loc 1 248 0
 2891 0008 0C30     		adds	r0, r0, #12
 2892              	.LVL370:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 85


 2893 000a FFF7FEFF 		bl	freeBlock
 2894              	.LVL371:
 249:Lib/libcanard/canard.c **** 
 2895              		.loc 1 249 0
 2896 000e 08BD     		pop	{r3, pc}
 2897              		.cfi_endproc
 2898              	.LFE7:
 2900              		.section	.text.canardCleanupStaleTransfers,"ax",%progbits
 2901              		.align	1
 2902              		.global	canardCleanupStaleTransfers
 2903              		.syntax unified
 2904              		.thumb
 2905              		.thumb_func
 2906              		.fpu fpv4-sp-d16
 2908              	canardCleanupStaleTransfers:
 2909              	.LFB9:
 478:Lib/libcanard/canard.c ****     CanardRxState* prev = ins->rx_states, * state = ins->rx_states;
 2910              		.loc 1 478 0
 2911              		.cfi_startproc
 2912              		@ args = 0, pretend = 0, frame = 0
 2913              		@ frame_needed = 0, uses_anonymous_args = 0
 2914              	.LVL372:
 2915 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2916              	.LCFI43:
 2917              		.cfi_def_cfa_offset 24
 2918              		.cfi_offset 4, -24
 2919              		.cfi_offset 5, -20
 2920              		.cfi_offset 6, -16
 2921              		.cfi_offset 7, -12
 2922              		.cfi_offset 8, -8
 2923              		.cfi_offset 14, -4
 2924 0004 0546     		mov	r5, r0
 2925 0006 1646     		mov	r6, r2
 2926 0008 1F46     		mov	r7, r3
 479:Lib/libcanard/canard.c **** 
 2927              		.loc 1 479 0
 2928 000a D0F81880 		ldr	r8, [r0, #24]
 2929              	.LVL373:
 2930 000e 4446     		mov	r4, r8
 481:Lib/libcanard/canard.c ****     {
 2931              		.loc 1 481 0
 2932 0010 10E0     		b	.L268
 2933              	.LVL374:
 2934              	.L275:
 487:Lib/libcanard/canard.c ****                 ins->rx_states = ins->rx_states->next;
 2935              		.loc 1 487 0
 2936 0012 2146     		mov	r1, r4
 2937 0014 2846     		mov	r0, r5
 2938 0016 FFF7FEFF 		bl	releaseStatePayload
 2939              	.LVL375:
 488:Lib/libcanard/canard.c ****                 freeBlock(&ins->allocator, state);
 2940              		.loc 1 488 0
 2941 001a AB69     		ldr	r3, [r5, #24]
 2942 001c 1B68     		ldr	r3, [r3]
 2943 001e AB61     		str	r3, [r5, #24]
 489:Lib/libcanard/canard.c ****                 state = ins->rx_states;
 2944              		.loc 1 489 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 86


 2945 0020 2146     		mov	r1, r4
 2946 0022 05F10C00 		add	r0, r5, #12
 2947 0026 FFF7FEFF 		bl	freeBlock
 2948              	.LVL376:
 490:Lib/libcanard/canard.c ****                 prev = state;
 2949              		.loc 1 490 0
 2950 002a AC69     		ldr	r4, [r5, #24]
 2951              	.LVL377:
 2952 002c A046     		mov	r8, r4
 2953 002e 01E0     		b	.L268
 2954              	.LVL378:
 2955              	.L269:
 503:Lib/libcanard/canard.c ****             state = state->next;
 2956              		.loc 1 503 0
 2957 0030 A046     		mov	r8, r4
 504:Lib/libcanard/canard.c ****         }
 2958              		.loc 1 504 0
 2959 0032 2468     		ldr	r4, [r4]
 2960              	.LVL379:
 2961              	.L268:
 481:Lib/libcanard/canard.c ****     {
 2962              		.loc 1 481 0
 2963 0034 E4B1     		cbz	r4, .L274
 483:Lib/libcanard/canard.c ****         {
 2964              		.loc 1 483 0
 2965 0036 D4E90201 		ldrd	r0, [r4, #8]
 2966 003a 321A     		subs	r2, r6, r0
 2967 003c 67EB0103 		sbc	r3, r7, r1
 2968 0040 0C48     		ldr	r0, .L276
 2969 0042 0021     		movs	r1, #0
 2970 0044 9942     		cmp	r1, r3
 2971 0046 08BF     		it	eq
 2972 0048 9042     		cmpeq	r0, r2
 2973 004a F1D2     		bcs	.L269
 485:Lib/libcanard/canard.c ****             {
 2974              		.loc 1 485 0
 2975 004c AB69     		ldr	r3, [r5, #24]
 2976 004e A342     		cmp	r3, r4
 2977 0050 DFD0     		beq	.L275
 495:Lib/libcanard/canard.c ****                 prev->next = state->next;
 2978              		.loc 1 495 0
 2979 0052 2146     		mov	r1, r4
 2980 0054 2846     		mov	r0, r5
 2981 0056 FFF7FEFF 		bl	releaseStatePayload
 2982              	.LVL380:
 496:Lib/libcanard/canard.c ****                 freeBlock(&ins->allocator, state);
 2983              		.loc 1 496 0
 2984 005a 2368     		ldr	r3, [r4]
 2985 005c C8F80030 		str	r3, [r8]
 497:Lib/libcanard/canard.c ****                 state = prev->next;
 2986              		.loc 1 497 0
 2987 0060 2146     		mov	r1, r4
 2988 0062 05F10C00 		add	r0, r5, #12
 2989 0066 FFF7FEFF 		bl	freeBlock
 2990              	.LVL381:
 498:Lib/libcanard/canard.c ****             }
 2991              		.loc 1 498 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 87


 2992 006a D8F80040 		ldr	r4, [r8]
 2993              	.LVL382:
 2994 006e E1E7     		b	.L268
 2995              	.L274:
 507:Lib/libcanard/canard.c **** 
 2996              		.loc 1 507 0
 2997 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2998              	.LVL383:
 2999              	.L277:
 3000              		.align	2
 3001              	.L276:
 3002 0074 80841E00 		.word	2000000
 3003              		.cfi_endproc
 3004              	.LFE9:
 3006              		.section	.text.canardDecodeScalar,"ax",%progbits
 3007              		.align	1
 3008              		.global	canardDecodeScalar
 3009              		.syntax unified
 3010              		.thumb
 3011              		.thumb_func
 3012              		.fpu fpv4-sp-d16
 3014              	canardDecodeScalar:
 3015              	.LFB10:
 514:Lib/libcanard/canard.c ****     if (transfer == NULL || out_value == NULL)
 3016              		.loc 1 514 0
 3017              		.cfi_startproc
 3018              		@ args = 4, pretend = 0, frame = 8
 3019              		@ frame_needed = 0, uses_anonymous_args = 0
 3020              	.LVL384:
 3021 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3022              	.LCFI44:
 3023              		.cfi_def_cfa_offset 32
 3024              		.cfi_offset 4, -32
 3025              		.cfi_offset 5, -28
 3026              		.cfi_offset 6, -24
 3027              		.cfi_offset 7, -20
 3028              		.cfi_offset 8, -16
 3029              		.cfi_offset 9, -12
 3030              		.cfi_offset 10, -8
 3031              		.cfi_offset 14, -4
 3032 0004 82B0     		sub	sp, sp, #8
 3033              	.LCFI45:
 3034              		.cfi_def_cfa_offset 40
 3035 0006 0A9E     		ldr	r6, [sp, #40]
 515:Lib/libcanard/canard.c ****     {
 3036              		.loc 1 515 0
 3037 0008 0028     		cmp	r0, #0
 3038 000a 00F02281 		beq	.L302
 3039 000e 0446     		mov	r4, r0
 515:Lib/libcanard/canard.c ****     {
 3040              		.loc 1 515 0 is_stmt 0 discriminator 1
 3041 0010 002E     		cmp	r6, #0
 3042 0012 00F02181 		beq	.L303
 520:Lib/libcanard/canard.c ****     {
 3043              		.loc 1 520 0 is_stmt 1
 3044 0016 551E     		subs	r5, r2, #1
 3045 0018 EDB2     		uxtb	r5, r5
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 88


 3046 001a 3F2D     		cmp	r5, #63
 3047 001c 00F21F81 		bhi	.L304
 525:Lib/libcanard/canard.c ****     {
 3048              		.loc 1 525 0
 3049 0020 012A     		cmp	r2, #1
 3050 0022 02D1     		bne	.L280
 525:Lib/libcanard/canard.c ****     {
 3051              		.loc 1 525 0 is_stmt 0 discriminator 1
 3052 0024 002B     		cmp	r3, #0
 3053 0026 40F01D81 		bne	.L305
 3054              	.L280:
 3055 002a 2046     		mov	r0, r4
 3056              	.LVL385:
 3057 002c 1D46     		mov	r5, r3
 3058 002e 1446     		mov	r4, r2
 3059              	.LVL386:
 548:Lib/libcanard/canard.c **** 
 3060              		.loc 1 548 0 is_stmt 1
 3061 0030 0023     		movs	r3, #0
 3062              	.LVL387:
 3063 0032 0093     		str	r3, [sp]
 3064 0034 0193     		str	r3, [sp, #4]
 550:Lib/libcanard/canard.c ****     if (result <= 0)
 3065              		.loc 1 550 0
 3066 0036 6B46     		mov	r3, sp
 3067 0038 FFF7FEFF 		bl	descatterTransferPayload
 3068              	.LVL388:
 551:Lib/libcanard/canard.c ****     {
 3069              		.loc 1 551 0
 3070 003c 071E     		subs	r7, r0, #0
 3071 003e 40F3D180 		ble	.L279
 556:Lib/libcanard/canard.c **** 
 3072              		.loc 1 556 0
 3073 0042 7B1E     		subs	r3, r7, #1
 3074 0044 9BB2     		uxth	r3, r3
 3075 0046 3F2B     		cmp	r3, #63
 3076 0048 1CD8     		bhi	.L281
 556:Lib/libcanard/canard.c **** 
 3077              		.loc 1 556 0 is_stmt 0 discriminator 2
 3078 004a A742     		cmp	r7, r4
 3079 004c 1ADC     		bgt	.L281
 564:Lib/libcanard/canard.c ****     {
 3080              		.loc 1 564 0 is_stmt 1
 3081 004e 14F0070F 		tst	r4, #7
 3082 0052 0AD0     		beq	.L283
 567:Lib/libcanard/canard.c ****     }
 3083              		.loc 1 567 0
 3084 0054 02AB     		add	r3, sp, #8
 3085 0056 03EBD401 		add	r1, r3, r4, lsr #3
 3086 005a 11F8083C 		ldrb	r3, [r1, #-8]	@ zero_extendqisi2
 3087 005e 6242     		negs	r2, r4
 3088 0060 02F00702 		and	r2, r2, #7
 3089 0064 1341     		asrs	r3, r3, r2
 3090 0066 01F8083C 		strb	r3, [r1, #-8]
 3091              	.L283:
 3092              	.LVL389:
 574:Lib/libcanard/canard.c ****     else if (bit_length <= 8)   { std_byte_length = 1; }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 89


 3093              		.loc 1 574 0
 3094 006a 012C     		cmp	r4, #1
 3095 006c 18D0     		beq	.L306
 575:Lib/libcanard/canard.c ****     else if (bit_length <= 16)  { std_byte_length = 2; }
 3096              		.loc 1 575 0
 3097 006e 082C     		cmp	r4, #8
 3098 0070 47D9     		bls	.L307
 576:Lib/libcanard/canard.c ****     else if (bit_length <= 32)  { std_byte_length = 4; }
 3099              		.loc 1 576 0
 3100 0072 102C     		cmp	r4, #16
 3101 0074 48D9     		bls	.L308
 577:Lib/libcanard/canard.c ****     else if (bit_length <= 64)  { std_byte_length = 8; }
 3102              		.loc 1 577 0
 3103 0076 202C     		cmp	r4, #32
 3104 0078 49D9     		bls	.L309
 578:Lib/libcanard/canard.c ****     else
 3105              		.loc 1 578 0
 3106 007a 402C     		cmp	r4, #64
 3107 007c 09D8     		bhi	.L312
 3108 007e 4FF00808 		mov	r8, #8
 3109 0082 0EE0     		b	.L284
 3110              	.LVL390:
 3111              	.L281:
 556:Lib/libcanard/canard.c **** 
 3112              		.loc 1 556 0 discriminator 3
 3113 0084 794B     		ldr	r3, .L322
 3114 0086 7A4A     		ldr	r2, .L322+4
 3115 0088 4FF40B71 		mov	r1, #556
 3116 008c 7948     		ldr	r0, .L322+8
 3117              	.LVL391:
 3118 008e FFF7FEFF 		bl	__assert_func
 3119              	.LVL392:
 3120              	.L312:
 581:Lib/libcanard/canard.c ****         return -CANARD_ERROR_INTERNAL;
 3121              		.loc 1 581 0
 3122 0092 794B     		ldr	r3, .L322+12
 3123 0094 764A     		ldr	r2, .L322+4
 3124 0096 40F24521 		movw	r1, #581
 3125 009a 7648     		ldr	r0, .L322+8
 3126              	.LVL393:
 3127 009c FFF7FEFF 		bl	__assert_func
 3128              	.LVL394:
 3129              	.L306:
 574:Lib/libcanard/canard.c ****     else if (bit_length <= 8)   { std_byte_length = 1; }
 3130              		.loc 1 574 0
 3131 00a0 A046     		mov	r8, r4
 3132              	.L284:
 3133              	.LVL395:
 585:Lib/libcanard/canard.c **** 
 3134              		.loc 1 585 0
 3135 00a2 08F1FF33 		add	r3, r8, #-1
 3136 00a6 DBB2     		uxtb	r3, r3
 3137 00a8 072B     		cmp	r3, #7
 3138 00aa 33D8     		bhi	.L313
 590:Lib/libcanard/canard.c ****     {
 3139              		.loc 1 590 0
 3140 00ac FFF7FEFF 		bl	isBigEndian
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 90


 3141              	.LVL396:
 3142 00b0 0028     		cmp	r0, #0
 3143 00b2 36D1     		bne	.L314
 3144              	.L286:
 599:Lib/libcanard/canard.c ****     {
 3145              		.loc 1 599 0
 3146 00b4 9DB1     		cbz	r5, .L287
 599:Lib/libcanard/canard.c ****     {
 3147              		.loc 1 599 0 is_stmt 0 discriminator 1
 3148 00b6 B4EBC80F 		cmp	r4, r8, lsl #3
 3149 00ba 10D0     		beq	.L287
 601:Lib/libcanard/canard.c ****         {
 3150              		.loc 1 601 0 is_stmt 1
 3151 00bc 082C     		cmp	r4, #8
 3152 00be 35D8     		bhi	.L288
 603:Lib/libcanard/canard.c ****             {
 3153              		.loc 1 603 0
 3154 00c0 9DF80010 		ldrb	r1, [sp]	@ zero_extendqisi2
 3155 00c4 621E     		subs	r2, r4, #1
 3156 00c6 21FA02F2 		lsr	r2, r1, r2
 3157 00ca 12F0010F 		tst	r2, #1
 3158 00ce 06D0     		beq	.L287
 605:Lib/libcanard/canard.c ****             }
 3159              		.loc 1 605 0
 3160 00d0 0123     		movs	r3, #1
 3161 00d2 A340     		lsls	r3, r3, r4
 3162 00d4 5B42     		negs	r3, r3
 3163 00d6 DBB2     		uxtb	r3, r3
 3164 00d8 0B43     		orrs	r3, r3, r1
 3165 00da 8DF80030 		strb	r3, [sp]
 3166              	.LVL397:
 3167              	.L287:
 639:Lib/libcanard/canard.c ****     {
 3168              		.loc 1 639 0
 3169 00de 002D     		cmp	r5, #0
 3170 00e0 00F09280 		beq	.L292
 641:Lib/libcanard/canard.c ****         else if (bit_length <= 16)  { *((int16_t*) out_value) = storage.s16; }
 3171              		.loc 1 641 0
 3172 00e4 082C     		cmp	r4, #8
 3173 00e6 7AD9     		bls	.L315
 642:Lib/libcanard/canard.c ****         else if (bit_length <= 32)  { *((int32_t*) out_value) = storage.s32; }
 3174              		.loc 1 642 0
 3175 00e8 102C     		cmp	r4, #16
 3176 00ea 7FD9     		bls	.L316
 643:Lib/libcanard/canard.c ****         else if (bit_length <= 64)  { *((int64_t*) out_value) = storage.s64; }
 3177              		.loc 1 643 0
 3178 00ec 202C     		cmp	r4, #32
 3179 00ee 40F28180 		bls	.L317
 644:Lib/libcanard/canard.c ****         else
 3180              		.loc 1 644 0
 3181 00f2 402C     		cmp	r4, #64
 3182 00f4 00F28180 		bhi	.L296
 644:Lib/libcanard/canard.c ****         else
 3183              		.loc 1 644 0 is_stmt 0 discriminator 1
 3184 00f8 DDE90023 		ldrd	r2, [sp]
 3185 00fc C6E90023 		strd	r2, [r6]
 3186 0100 70E0     		b	.L279
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 91


 3187              	.LVL398:
 3188              	.L307:
 575:Lib/libcanard/canard.c ****     else if (bit_length <= 16)  { std_byte_length = 2; }
 3189              		.loc 1 575 0 is_stmt 1
 3190 0102 4FF00108 		mov	r8, #1
 3191 0106 CCE7     		b	.L284
 3192              	.L308:
 576:Lib/libcanard/canard.c ****     else if (bit_length <= 32)  { std_byte_length = 4; }
 3193              		.loc 1 576 0
 3194 0108 4FF00208 		mov	r8, #2
 3195 010c C9E7     		b	.L284
 3196              	.L309:
 577:Lib/libcanard/canard.c ****     else if (bit_length <= 64)  { std_byte_length = 8; }
 3197              		.loc 1 577 0
 3198 010e 4FF00408 		mov	r8, #4
 3199 0112 C6E7     		b	.L284
 3200              	.LVL399:
 3201              	.L313:
 585:Lib/libcanard/canard.c **** 
 3202              		.loc 1 585 0 discriminator 1
 3203 0114 594B     		ldr	r3, .L322+16
 3204 0116 564A     		ldr	r2, .L322+4
 3205 0118 40F24921 		movw	r1, #585
 3206 011c 5548     		ldr	r0, .L322+8
 3207              	.LVL400:
 3208 011e FFF7FEFF 		bl	__assert_func
 3209              	.LVL401:
 3210              	.L314:
 592:Lib/libcanard/canard.c ****     }
 3211              		.loc 1 592 0
 3212 0122 4146     		mov	r1, r8
 3213 0124 6846     		mov	r0, sp
 3214 0126 FFF7FEFF 		bl	swapByteOrder
 3215              	.LVL402:
 3216 012a C3E7     		b	.L286
 3217              	.L288:
 608:Lib/libcanard/canard.c ****         {
 3218              		.loc 1 608 0
 3219 012c 102C     		cmp	r4, #16
 3220 012e 0FD8     		bhi	.L289
 610:Lib/libcanard/canard.c ****             {
 3221              		.loc 1 610 0
 3222 0130 BDF80020 		ldrh	r2, [sp]
 3223 0134 631E     		subs	r3, r4, #1
 3224 0136 22FA03F3 		lsr	r3, r2, r3
 3225 013a 13F0010F 		tst	r3, #1
 3226 013e CED0     		beq	.L287
 612:Lib/libcanard/canard.c ****             }
 3227              		.loc 1 612 0
 3228 0140 0123     		movs	r3, #1
 3229 0142 A340     		lsls	r3, r3, r4
 3230 0144 5B42     		negs	r3, r3
 3231 0146 9BB2     		uxth	r3, r3
 3232 0148 1343     		orrs	r3, r3, r2
 3233 014a ADF80030 		strh	r3, [sp]	@ movhi
 3234 014e C6E7     		b	.L287
 3235              	.L289:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 92


 615:Lib/libcanard/canard.c ****         {
 3236              		.loc 1 615 0
 3237 0150 202C     		cmp	r4, #32
 3238 0152 0CD8     		bhi	.L290
 617:Lib/libcanard/canard.c ****             {
 3239              		.loc 1 617 0
 3240 0154 009A     		ldr	r2, [sp]
 3241 0156 631E     		subs	r3, r4, #1
 3242 0158 22FA03F3 		lsr	r3, r2, r3
 3243 015c 13F0010F 		tst	r3, #1
 3244 0160 BDD0     		beq	.L287
 619:Lib/libcanard/canard.c ****             }
 3245              		.loc 1 619 0
 3246 0162 0123     		movs	r3, #1
 3247 0164 A340     		lsls	r3, r3, r4
 3248 0166 5B42     		negs	r3, r3
 3249 0168 1A43     		orrs	r2, r2, r3
 3250 016a 0092     		str	r2, [sp]
 3251 016c B7E7     		b	.L287
 3252              	.L290:
 622:Lib/libcanard/canard.c ****         {
 3253              		.loc 1 622 0
 3254 016e 3F2C     		cmp	r4, #63
 3255 0170 2ED8     		bhi	.L291
 624:Lib/libcanard/canard.c ****             {
 3256              		.loc 1 624 0
 3257 0172 DDE9009A 		ldrd	r9, [sp]
 3258 0176 04F1FF3C 		add	ip, r4, #-1
 3259 017a CCF12008 		rsb	r8, ip, #32
 3260              	.LVL403:
 3261 017e A4F1210E 		sub	lr, r4, #33
 3262 0182 29FA0CF0 		lsr	r0, r9, ip
 3263 0186 0AFA08F8 		lsl	r8, r10, r8
 3264 018a 40EA0800 		orr	r0, r0, r8
 3265 018e 2AFA0EFE 		lsr	lr, r10, lr
 3266 0192 40EA0E00 		orr	r0, r0, lr
 3267 0196 00F00102 		and	r2, r0, #1
 3268 019a 0023     		movs	r3, #0
 3269 019c 1343     		orrs	r3, r2, r3
 3270 019e 9ED0     		beq	.L287
 626:Lib/libcanard/canard.c ****             }
 3271              		.loc 1 626 0
 3272 01a0 4FF0010C 		mov	ip, #1
 3273 01a4 A4F12008 		sub	r8, r4, #32
 3274 01a8 C4F1200E 		rsb	lr, r4, #32
 3275 01ac 0CFA08F3 		lsl	r3, ip, r8
 3276 01b0 2CFA0EFE 		lsr	lr, ip, lr
 3277 01b4 43EA0E03 		orr	r3, r3, lr
 3278 01b8 0CFA04F2 		lsl	r2, ip, r4
 3279 01bc 5242     		rsbs	r2, r2, #0
 3280 01be 63EB4303 		sbc	r3, r3, r3, lsl #1
 3281 01c2 49EA0200 		orr	r0, r9, r2
 3282 01c6 4AEA0301 		orr	r1, r10, r3
 3283 01ca CDE90001 		strd	r0, [sp]
 3284 01ce 86E7     		b	.L287
 3285              	.LVL404:
 3286              	.L291:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 93


 631:Lib/libcanard/canard.c ****             return -CANARD_ERROR_INTERNAL;
 3287              		.loc 1 631 0
 3288 01d0 294B     		ldr	r3, .L322+12
 3289 01d2 274A     		ldr	r2, .L322+4
 3290 01d4 40F27721 		movw	r1, #631
 3291 01d8 2648     		ldr	r0, .L322+8
 3292 01da FFF7FEFF 		bl	__assert_func
 3293              	.LVL405:
 3294              	.L315:
 641:Lib/libcanard/canard.c ****         else if (bit_length <= 16)  { *((int16_t*) out_value) = storage.s16; }
 3295              		.loc 1 641 0 discriminator 1
 3296 01de 9DF90030 		ldrsb	r3, [sp]
 3297 01e2 3370     		strb	r3, [r6]
 3298              	.L279:
 668:Lib/libcanard/canard.c **** 
 3299              		.loc 1 668 0
 3300 01e4 3846     		mov	r0, r7
 3301 01e6 02B0     		add	sp, sp, #8
 3302              	.LCFI46:
 3303              		.cfi_remember_state
 3304              		.cfi_def_cfa_offset 32
 3305              		@ sp needed
 3306 01e8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3307              	.LVL406:
 3308              	.L316:
 3309              	.LCFI47:
 3310              		.cfi_restore_state
 642:Lib/libcanard/canard.c ****         else if (bit_length <= 32)  { *((int32_t*) out_value) = storage.s32; }
 3311              		.loc 1 642 0 discriminator 1
 3312 01ec BDF90030 		ldrsh	r3, [sp]
 3313 01f0 3380     		strh	r3, [r6]	@ movhi
 3314 01f2 F7E7     		b	.L279
 3315              	.L317:
 643:Lib/libcanard/canard.c ****         else if (bit_length <= 64)  { *((int64_t*) out_value) = storage.s64; }
 3316              		.loc 1 643 0 discriminator 1
 3317 01f4 009B     		ldr	r3, [sp]
 3318 01f6 3360     		str	r3, [r6]
 3319 01f8 F4E7     		b	.L279
 3320              	.L296:
 647:Lib/libcanard/canard.c ****             return -CANARD_ERROR_INTERNAL;
 3321              		.loc 1 647 0
 3322 01fa 1F4B     		ldr	r3, .L322+12
 3323 01fc 1C4A     		ldr	r2, .L322+4
 3324 01fe 40F28721 		movw	r1, #647
 3325 0202 1C48     		ldr	r0, .L322+8
 3326 0204 FFF7FEFF 		bl	__assert_func
 3327              	.LVL407:
 3328              	.L292:
 653:Lib/libcanard/canard.c ****         else if (bit_length <= 8)   { *( (uint8_t*) out_value) = storage.u8;  }
 3329              		.loc 1 653 0
 3330 0208 012C     		cmp	r4, #1
 3331 020a 0CD0     		beq	.L318
 654:Lib/libcanard/canard.c ****         else if (bit_length <= 16)  { *((uint16_t*) out_value) = storage.u16; }
 3332              		.loc 1 654 0
 3333 020c 082C     		cmp	r4, #8
 3334 020e 0ED9     		bls	.L319
 655:Lib/libcanard/canard.c ****         else if (bit_length <= 32)  { *((uint32_t*) out_value) = storage.u32; }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 94


 3335              		.loc 1 655 0
 3336 0210 102C     		cmp	r4, #16
 3337 0212 10D9     		bls	.L320
 656:Lib/libcanard/canard.c ****         else if (bit_length <= 64)  { *((uint64_t*) out_value) = storage.u64; }
 3338              		.loc 1 656 0
 3339 0214 202C     		cmp	r4, #32
 3340 0216 12D9     		bls	.L321
 657:Lib/libcanard/canard.c ****         else
 3341              		.loc 1 657 0
 3342 0218 402C     		cmp	r4, #64
 3343 021a 13D8     		bhi	.L301
 657:Lib/libcanard/canard.c ****         else
 3344              		.loc 1 657 0 is_stmt 0 discriminator 1
 3345 021c DDE90023 		ldrd	r2, [sp]
 3346 0220 C6E90023 		strd	r2, [r6]
 3347 0224 DEE7     		b	.L279
 3348              	.L318:
 653:Lib/libcanard/canard.c ****         else if (bit_length <= 8)   { *( (uint8_t*) out_value) = storage.u8;  }
 3349              		.loc 1 653 0 is_stmt 1 discriminator 1
 3350 0226 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 3351 022a 3370     		strb	r3, [r6]
 3352 022c DAE7     		b	.L279
 3353              	.L319:
 654:Lib/libcanard/canard.c ****         else if (bit_length <= 16)  { *((uint16_t*) out_value) = storage.u16; }
 3354              		.loc 1 654 0 discriminator 1
 3355 022e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 3356 0232 3370     		strb	r3, [r6]
 3357 0234 D6E7     		b	.L279
 3358              	.L320:
 655:Lib/libcanard/canard.c ****         else if (bit_length <= 32)  { *((uint32_t*) out_value) = storage.u32; }
 3359              		.loc 1 655 0 discriminator 1
 3360 0236 BDF80030 		ldrh	r3, [sp]
 3361 023a 3380     		strh	r3, [r6]	@ movhi
 3362 023c D2E7     		b	.L279
 3363              	.L321:
 656:Lib/libcanard/canard.c ****         else if (bit_length <= 64)  { *((uint64_t*) out_value) = storage.u64; }
 3364              		.loc 1 656 0 discriminator 1
 3365 023e 009B     		ldr	r3, [sp]
 3366 0240 3360     		str	r3, [r6]
 3367 0242 CFE7     		b	.L279
 3368              	.L301:
 660:Lib/libcanard/canard.c ****             return -CANARD_ERROR_INTERNAL;
 3369              		.loc 1 660 0
 3370 0244 0C4B     		ldr	r3, .L322+12
 3371 0246 0A4A     		ldr	r2, .L322+4
 3372 0248 4FF42571 		mov	r1, #660
 3373 024c 0948     		ldr	r0, .L322+8
 3374 024e FFF7FEFF 		bl	__assert_func
 3375              	.LVL408:
 3376              	.L302:
 517:Lib/libcanard/canard.c ****     }
 3377              		.loc 1 517 0
 3378 0252 6FF00107 		mvn	r7, #1
 3379 0256 C5E7     		b	.L279
 3380              	.L303:
 3381 0258 6FF00107 		mvn	r7, #1
 3382 025c C2E7     		b	.L279
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 95


 3383              	.L304:
 522:Lib/libcanard/canard.c ****     }
 3384              		.loc 1 522 0
 3385 025e 6FF00107 		mvn	r7, #1
 3386 0262 BFE7     		b	.L279
 3387              	.L305:
 527:Lib/libcanard/canard.c ****     }
 3388              		.loc 1 527 0
 3389 0264 6FF00107 		mvn	r7, #1
 3390 0268 BCE7     		b	.L279
 3391              	.L323:
 3392 026a 00BF     		.align	2
 3393              	.L322:
 3394 026c 00000000 		.word	.LC20
 3395 0270 00000000 		.word	.LANCHOR11
 3396 0274 14000000 		.word	.LC1
 3397 0278 00000000 		.word	.LC19
 3398 027c 3C000000 		.word	.LC21
 3399              		.cfi_endproc
 3400              	.LFE10:
 3402              		.section	.text.canardEncodeScalar,"ax",%progbits
 3403              		.align	1
 3404              		.global	canardEncodeScalar
 3405              		.syntax unified
 3406              		.thumb
 3407              		.thumb_func
 3408              		.fpu fpv4-sp-d16
 3410              	canardEncodeScalar:
 3411              	.LFB11:
 674:Lib/libcanard/canard.c ****     /*
 3412              		.loc 1 674 0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 8
 3415              		@ frame_needed = 0, uses_anonymous_args = 0
 3416              	.LVL409:
 3417 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3418              	.LCFI48:
 3419              		.cfi_def_cfa_offset 20
 3420              		.cfi_offset 4, -20
 3421              		.cfi_offset 5, -16
 3422              		.cfi_offset 6, -12
 3423              		.cfi_offset 7, -8
 3424              		.cfi_offset 14, -4
 3425 0002 85B0     		sub	sp, sp, #20
 3426              	.LCFI49:
 3427              		.cfi_def_cfa_offset 40
 680:Lib/libcanard/canard.c ****     CANARD_ASSERT(value != NULL);
 3428              		.loc 1 680 0
 3429 0004 90B1     		cbz	r0, .L337
 3430 0006 0E46     		mov	r6, r1
 3431 0008 1446     		mov	r4, r2
 3432 000a 0546     		mov	r5, r0
 681:Lib/libcanard/canard.c **** 
 3433              		.loc 1 681 0
 3434 000c ABB1     		cbz	r3, .L338
 683:Lib/libcanard/canard.c ****     {
 3435              		.loc 1 683 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 96


 3436 000e 402A     		cmp	r2, #64
 3437 0010 1AD8     		bhi	.L339
 689:Lib/libcanard/canard.c ****     {
 3438              		.loc 1 689 0
 3439 0012 02B3     		cbz	r2, .L340
 708:Lib/libcanard/canard.c **** 
 3440              		.loc 1 708 0
 3441 0014 0022     		movs	r2, #0
 3442              	.LVL410:
 3443 0016 0292     		str	r2, [sp, #8]
 3444 0018 0392     		str	r2, [sp, #12]
 3445              	.LVL411:
 713:Lib/libcanard/canard.c ****     else if (bit_length <= 8)   { std_byte_length = 1;              storage.u8  = *((uint8_t*) valu
 3446              		.loc 1 713 0
 3447 001a 012C     		cmp	r4, #1
 3448 001c 22D0     		beq	.L341
 714:Lib/libcanard/canard.c ****     else if (bit_length <= 16)  { std_byte_length = 2;              storage.u16 = *((uint16_t*) val
 3449              		.loc 1 714 0
 3450 001e 082C     		cmp	r4, #8
 3451 0020 3ED8     		bhi	.L331
 3452              	.LVL412:
 714:Lib/libcanard/canard.c ****     else if (bit_length <= 16)  { std_byte_length = 2;              storage.u16 = *((uint16_t*) val
 3453              		.loc 1 714 0 is_stmt 0 discriminator 1
 3454 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3455              	.LVL413:
 3456 0024 8DF80830 		strb	r3, [sp, #8]
 3457 0028 0127     		movs	r7, #1
 3458 002a 1FE0     		b	.L330
 3459              	.LVL414:
 3460              	.L337:
 680:Lib/libcanard/canard.c ****     CANARD_ASSERT(value != NULL);
 3461              		.loc 1 680 0 is_stmt 1 discriminator 1
 3462 002c 284B     		ldr	r3, .L343
 3463              	.LVL415:
 3464 002e 294A     		ldr	r2, .L343+4
 3465              	.LVL416:
 3466 0030 4FF42A71 		mov	r1, #680
 3467              	.LVL417:
 3468 0034 2848     		ldr	r0, .L343+8
 3469              	.LVL418:
 3470 0036 FFF7FEFF 		bl	__assert_func
 3471              	.LVL419:
 3472              	.L338:
 681:Lib/libcanard/canard.c **** 
 3473              		.loc 1 681 0 discriminator 1
 3474 003a 284B     		ldr	r3, .L343+12
 3475              	.LVL420:
 3476 003c 254A     		ldr	r2, .L343+4
 3477              	.LVL421:
 3478 003e 40F2A921 		movw	r1, #681
 3479              	.LVL422:
 3480 0042 2548     		ldr	r0, .L343+8
 3481              	.LVL423:
 3482 0044 FFF7FEFF 		bl	__assert_func
 3483              	.LVL424:
 3484              	.L339:
 685:Lib/libcanard/canard.c ****         bit_length = 64;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 97


 3485              		.loc 1 685 0
 3486 0048 254B     		ldr	r3, .L343+16
 3487              	.LVL425:
 3488 004a 224A     		ldr	r2, .L343+4
 3489              	.LVL426:
 3490 004c 40F2AD21 		movw	r1, #685
 3491              	.LVL427:
 3492 0050 2148     		ldr	r0, .L343+8
 3493              	.LVL428:
 3494 0052 FFF7FEFF 		bl	__assert_func
 3495              	.LVL429:
 3496              	.L340:
 691:Lib/libcanard/canard.c ****         bit_length = 1;
 3497              		.loc 1 691 0
 3498 0056 224B     		ldr	r3, .L343+16
 3499              	.LVL430:
 3500 0058 1E4A     		ldr	r2, .L343+4
 3501              	.LVL431:
 3502 005a 40F2B321 		movw	r1, #691
 3503              	.LVL432:
 3504 005e 1E48     		ldr	r0, .L343+8
 3505              	.LVL433:
 3506 0060 FFF7FEFF 		bl	__assert_func
 3507              	.LVL434:
 3508              	.L341:
 713:Lib/libcanard/canard.c ****     else if (bit_length <= 8)   { std_byte_length = 1;              storage.u8  = *((uint8_t*) valu
 3509              		.loc 1 713 0 discriminator 1
 3510 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3511              	.LVL435:
 3512 0066 8DF80830 		strb	r3, [sp, #8]
 3513 006a 2746     		mov	r7, r4
 3514              	.LVL436:
 3515              	.L330:
 725:Lib/libcanard/canard.c ****     {
 3516              		.loc 1 725 0
 3517 006c FFF7FEFF 		bl	isBigEndian
 3518              	.LVL437:
 3519 0070 48BB     		cbnz	r0, .L342
 3520              	.L334:
 737:Lib/libcanard/canard.c ****     {
 3521              		.loc 1 737 0
 3522 0072 14F0070F 		tst	r4, #7
 3523 0076 0AD0     		beq	.L335
 740:Lib/libcanard/canard.c ****     }
 3524              		.loc 1 740 0
 3525 0078 04AB     		add	r3, sp, #16
 3526 007a 03EBD401 		add	r1, r3, r4, lsr #3
 3527 007e 11F8083C 		ldrb	r3, [r1, #-8]	@ zero_extendqisi2
 3528 0082 6242     		negs	r2, r4
 3529 0084 02F00702 		and	r2, r2, #7
 3530 0088 9340     		lsls	r3, r3, r2
 3531 008a 01F8083C 		strb	r3, [r1, #-8]
 3532              	.L335:
 746:Lib/libcanard/canard.c **** }
 3533              		.loc 1 746 0
 3534 008e 0096     		str	r6, [sp]
 3535 0090 2B46     		mov	r3, r5
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 98


 3536 0092 2246     		mov	r2, r4
 3537 0094 0021     		movs	r1, #0
 3538 0096 02A8     		add	r0, sp, #8
 3539 0098 FFF7FEFF 		bl	copyBitArray
 3540              	.LVL438:
 747:Lib/libcanard/canard.c **** 
 3541              		.loc 1 747 0
 3542 009c 05B0     		add	sp, sp, #20
 3543              	.LCFI50:
 3544              		.cfi_remember_state
 3545              		.cfi_def_cfa_offset 20
 3546              		@ sp needed
 3547 009e F0BD     		pop	{r4, r5, r6, r7, pc}
 3548              	.LVL439:
 3549              	.L331:
 3550              	.LCFI51:
 3551              		.cfi_restore_state
 715:Lib/libcanard/canard.c ****     else if (bit_length <= 32)  { std_byte_length = 4;              storage.u32 = *((uint32_t*) val
 3552              		.loc 1 715 0
 3553 00a0 102C     		cmp	r4, #16
 3554 00a2 04D8     		bhi	.L332
 3555              	.LVL440:
 715:Lib/libcanard/canard.c ****     else if (bit_length <= 32)  { std_byte_length = 4;              storage.u32 = *((uint32_t*) val
 3556              		.loc 1 715 0 is_stmt 0 discriminator 1
 3557 00a4 1B88     		ldrh	r3, [r3]
 3558              	.LVL441:
 3559 00a6 ADF80830 		strh	r3, [sp, #8]	@ movhi
 3560 00aa 0227     		movs	r7, #2
 3561 00ac DEE7     		b	.L330
 3562              	.LVL442:
 3563              	.L332:
 716:Lib/libcanard/canard.c ****     else if (bit_length <= 64)  { std_byte_length = 8;              storage.u64 = *((uint64_t*) val
 3564              		.loc 1 716 0 is_stmt 1
 3565 00ae 202C     		cmp	r4, #32
 3566 00b0 03D8     		bhi	.L333
 3567              	.LVL443:
 716:Lib/libcanard/canard.c ****     else if (bit_length <= 64)  { std_byte_length = 8;              storage.u64 = *((uint64_t*) val
 3568              		.loc 1 716 0 is_stmt 0 discriminator 1
 3569 00b2 1B68     		ldr	r3, [r3]
 3570              	.LVL444:
 3571 00b4 0293     		str	r3, [sp, #8]
 3572 00b6 0427     		movs	r7, #4
 3573 00b8 D8E7     		b	.L330
 3574              	.LVL445:
 3575              	.L333:
 717:Lib/libcanard/canard.c ****     else
 3576              		.loc 1 717 0 is_stmt 1 discriminator 1
 3577 00ba D3E90023 		ldrd	r2, [r3]
 3578 00be CDE90223 		strd	r2, [sp, #8]
 3579 00c2 0827     		movs	r7, #8
 3580 00c4 D2E7     		b	.L330
 3581              	.LVL446:
 3582              	.L342:
 727:Lib/libcanard/canard.c ****     }
 3583              		.loc 1 727 0
 3584 00c6 3946     		mov	r1, r7
 3585 00c8 02A8     		add	r0, sp, #8
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 99


 3586 00ca FFF7FEFF 		bl	swapByteOrder
 3587              	.LVL447:
 3588 00ce D0E7     		b	.L334
 3589              	.L344:
 3590              		.align	2
 3591              	.L343:
 3592 00d0 00000000 		.word	.LC22
 3593 00d4 00000000 		.word	.LANCHOR12
 3594 00d8 14000000 		.word	.LC1
 3595 00dc 1C000000 		.word	.LC23
 3596 00e0 00000000 		.word	.LC19
 3597              		.cfi_endproc
 3598              	.LFE11:
 3600              		.section	.text.canardReleaseRxTransferPayload,"ax",%progbits
 3601              		.align	1
 3602              		.global	canardReleaseRxTransferPayload
 3603              		.syntax unified
 3604              		.thumb
 3605              		.thumb_func
 3606              		.fpu fpv4-sp-d16
 3608              	canardReleaseRxTransferPayload:
 3609              	.LFB12:
 750:Lib/libcanard/canard.c ****     while (transfer->payload_middle != NULL)
 3610              		.loc 1 750 0
 3611              		.cfi_startproc
 3612              		@ args = 0, pretend = 0, frame = 0
 3613              		@ frame_needed = 0, uses_anonymous_args = 0
 3614              	.LVL448:
 3615 0000 70B5     		push	{r4, r5, r6, lr}
 3616              	.LCFI52:
 3617              		.cfi_def_cfa_offset 16
 3618              		.cfi_offset 4, -16
 3619              		.cfi_offset 5, -12
 3620              		.cfi_offset 6, -8
 3621              		.cfi_offset 14, -4
 3622 0002 0646     		mov	r6, r0
 3623 0004 0C46     		mov	r4, r1
 751:Lib/libcanard/canard.c ****     {
 3624              		.loc 1 751 0
 3625 0006 05E0     		b	.L346
 3626              	.LVL449:
 3627              	.L347:
 3628              	.LBB38:
 753:Lib/libcanard/canard.c ****         freeBlock(&ins->allocator, transfer->payload_middle);
 3629              		.loc 1 753 0
 3630 0008 0D68     		ldr	r5, [r1]
 3631              	.LVL450:
 754:Lib/libcanard/canard.c ****         transfer->payload_middle = temp;
 3632              		.loc 1 754 0
 3633 000a 06F10C00 		add	r0, r6, #12
 3634 000e FFF7FEFF 		bl	freeBlock
 3635              	.LVL451:
 755:Lib/libcanard/canard.c ****     }
 3636              		.loc 1 755 0
 3637 0012 E560     		str	r5, [r4, #12]
 3638              	.LVL452:
 3639              	.L346:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 100


 3640              	.LBE38:
 751:Lib/libcanard/canard.c ****     {
 3641              		.loc 1 751 0
 3642 0014 E168     		ldr	r1, [r4, #12]
 3643 0016 0029     		cmp	r1, #0
 3644 0018 F6D1     		bne	.L347
 758:Lib/libcanard/canard.c ****     transfer->payload_head = NULL;
 3645              		.loc 1 758 0
 3646 001a 0023     		movs	r3, #0
 3647 001c E360     		str	r3, [r4, #12]
 759:Lib/libcanard/canard.c ****     transfer->payload_tail = NULL;
 3648              		.loc 1 759 0
 3649 001e A360     		str	r3, [r4, #8]
 760:Lib/libcanard/canard.c ****     transfer->payload_len = 0;
 3650              		.loc 1 760 0
 3651 0020 2361     		str	r3, [r4, #16]
 761:Lib/libcanard/canard.c **** }
 3652              		.loc 1 761 0
 3653 0022 A382     		strh	r3, [r4, #20]	@ movhi
 762:Lib/libcanard/canard.c **** 
 3654              		.loc 1 762 0
 3655 0024 70BD     		pop	{r4, r5, r6, pc}
 3656              		.cfi_endproc
 3657              	.LFE12:
 3659              		.section	.text.canardHandleRxFrame,"ax",%progbits
 3660              		.align	1
 3661              		.global	canardHandleRxFrame
 3662              		.syntax unified
 3663              		.thumb
 3664              		.thumb_func
 3665              		.fpu fpv4-sp-d16
 3667              	canardHandleRxFrame:
 3668              	.LFB8:
 252:Lib/libcanard/canard.c ****     const CanardTransferType transfer_type = extractTransferType(frame->id);
 3669              		.loc 1 252 0
 3670              		.cfi_startproc
 3671              		@ args = 0, pretend = 0, frame = 64
 3672              		@ frame_needed = 0, uses_anonymous_args = 0
 3673              	.LVL453:
 3674 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3675              	.LCFI53:
 3676              		.cfi_def_cfa_offset 36
 3677              		.cfi_offset 4, -36
 3678              		.cfi_offset 5, -32
 3679              		.cfi_offset 6, -28
 3680              		.cfi_offset 7, -24
 3681              		.cfi_offset 8, -20
 3682              		.cfi_offset 9, -16
 3683              		.cfi_offset 10, -12
 3684              		.cfi_offset 11, -8
 3685              		.cfi_offset 14, -4
 3686 0004 93B0     		sub	sp, sp, #76
 3687              	.LCFI54:
 3688              		.cfi_def_cfa_offset 112
 3689 0006 0746     		mov	r7, r0
 3690 0008 0D46     		mov	r5, r1
 3691 000a CDE90223 		strd	r2, [sp, #8]
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 101


 253:Lib/libcanard/canard.c ****     const uint8_t destination_node_id = (transfer_type == CanardTransferTypeBroadcast) ?
 3692              		.loc 1 253 0
 3693 000e 0C68     		ldr	r4, [r1]
 3694 0010 2046     		mov	r0, r4
 3695              	.LVL454:
 3696 0012 FFF7FEFF 		bl	extractTransferType
 3697              	.LVL455:
 3698 0016 0646     		mov	r6, r0
 3699              	.LVL456:
 254:Lib/libcanard/canard.c ****                                         (uint8_t)CANARD_BROADCAST_NODE_ID :
 3700              		.loc 1 254 0
 3701 0018 0228     		cmp	r0, #2
 3702 001a 06D0     		beq	.L376
 254:Lib/libcanard/canard.c ****                                         (uint8_t)CANARD_BROADCAST_NODE_ID :
 3703              		.loc 1 254 0 is_stmt 0 discriminator 1
 3704 001c C4F30628 		ubfx	r8, r4, #8, #7
 3705              	.L350:
 3706              	.LVL457:
 260:Lib/libcanard/canard.c ****         (frame->id & CANARD_CAN_FRAME_RTR) != 0 ||
 3707              		.loc 1 260 0 is_stmt 1 discriminator 4
 3708 0020 002C     		cmp	r4, #0
 3709 0022 05DB     		blt	.L387
 3710              	.LVL458:
 3711              	.L349:
 475:Lib/libcanard/canard.c **** 
 3712              		.loc 1 475 0
 3713 0024 13B0     		add	sp, sp, #76
 3714              	.LCFI55:
 3715              		.cfi_remember_state
 3716              		.cfi_def_cfa_offset 36
 3717              		@ sp needed
 3718 0026 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3719              	.LVL459:
 3720              	.L376:
 3721              	.LCFI56:
 3722              		.cfi_restore_state
 254:Lib/libcanard/canard.c ****                                         (uint8_t)CANARD_BROADCAST_NODE_ID :
 3723              		.loc 1 254 0
 3724 002a 4FF00008 		mov	r8, #0
 3725 002e F7E7     		b	.L350
 3726              	.LVL460:
 3727              	.L387:
 261:Lib/libcanard/canard.c ****         (frame->id & CANARD_CAN_FRAME_ERR) != 0 ||
 3728              		.loc 1 261 0
 3729 0030 14F0C04F 		tst	r4, #1610612736
 3730 0034 F6D1     		bne	.L349
 263:Lib/libcanard/canard.c ****     {
 3731              		.loc 1 263 0
 3732 0036 95F80C90 		ldrb	r9, [r5, #12]	@ zero_extendqisi2
 262:Lib/libcanard/canard.c ****         (frame->data_len < 1))
 3733              		.loc 1 262 0
 3734 003a B9F1000F 		cmp	r9, #0
 3735 003e F1D0     		beq	.L349
 268:Lib/libcanard/canard.c ****         destination_node_id != canardGetLocalNodeID(ins))
 3736              		.loc 1 268 0
 3737 0040 022E     		cmp	r6, #2
 3738 0042 04D0     		beq	.L352
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 102


 269:Lib/libcanard/canard.c ****     {
 3739              		.loc 1 269 0 discriminator 1
 3740 0044 3846     		mov	r0, r7
 3741              	.LVL461:
 3742 0046 FFF7FEFF 		bl	canardGetLocalNodeID
 3743              	.LVL462:
 268:Lib/libcanard/canard.c ****         destination_node_id != canardGetLocalNodeID(ins))
 3744              		.loc 1 268 0 discriminator 1
 3745 004a 4045     		cmp	r0, r8
 3746 004c EAD1     		bne	.L349
 3747              	.L352:
 274:Lib/libcanard/canard.c ****     const uint8_t source_node_id = SOURCE_ID_FROM_ID(frame->id);
 3748              		.loc 1 274 0
 3749 004e C4F30463 		ubfx	r3, r4, #24, #5
 3750 0052 0493     		str	r3, [sp, #16]
 3751              	.LVL463:
 275:Lib/libcanard/canard.c ****     const uint16_t data_type_id = extractDataType(frame->id);
 3752              		.loc 1 275 0
 3753 0054 04F07F0A 		and	r10, r4, #127
 3754              	.LVL464:
 276:Lib/libcanard/canard.c ****     const uint32_t transfer_descriptor =
 3755              		.loc 1 276 0
 3756 0058 2046     		mov	r0, r4
 3757 005a FFF7FEFF 		bl	extractDataType
 3758              	.LVL465:
 3759 005e 0590     		str	r0, [sp, #20]
 3760              	.LVL466:
 278:Lib/libcanard/canard.c **** 
 3761              		.loc 1 278 0
 3762 0060 40EA0643 		orr	r3, r0, r6, lsl #16
 3763 0064 43EA8A43 		orr	r3, r3, r10, lsl #18
 277:Lib/libcanard/canard.c ****             MAKE_TRANSFER_DESCRIPTOR(data_type_id, transfer_type, source_node_id, destination_node_
 3764              		.loc 1 277 0
 3765 0068 43EA4868 		orr	r8, r3, r8, lsl #25
 3766              	.LVL467:
 280:Lib/libcanard/canard.c **** 
 3767              		.loc 1 280 0
 3768 006c 09F1FF39 		add	r9, r9, #-1
 3769 0070 A944     		add	r9, r9, r5
 3770 0072 99F80490 		ldrb	r9, [r9, #4]	@ zero_extendqisi2
 3771              	.LVL468:
 284:Lib/libcanard/canard.c ****     {
 3772              		.loc 1 284 0
 3773 0076 5FEAD91B 		lsrs	fp, r9, #7
 3774 007a 45D0     		beq	.L353
 3775              	.LBB39:
 286:Lib/libcanard/canard.c **** 
 3776              		.loc 1 286 0
 3777 007c 12A9     		add	r1, sp, #72
 3778 007e 0022     		movs	r2, #0
 3779 0080 0023     		movs	r3, #0
 3780 0082 61E90823 		strd	r2, [r1, #-32]!
 288:Lib/libcanard/canard.c ****         {
 3781              		.loc 1 288 0
 3782 0086 7C68     		ldr	r4, [r7, #4]
 3783 0088 CDF800A0 		str	r10, [sp]
 3784 008c 3346     		mov	r3, r6
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 103


 3785 008e 0246     		mov	r2, r0
 3786 0090 3846     		mov	r0, r7
 3787              	.LVL469:
 3788 0092 A047     		blx	r4
 3789              	.LVL470:
 3790 0094 0028     		cmp	r0, #0
 3791 0096 C5D0     		beq	.L349
 290:Lib/libcanard/canard.c **** 
 3792              		.loc 1 290 0
 3793 0098 4146     		mov	r1, r8
 3794 009a 3846     		mov	r0, r7
 3795 009c FFF7FEFF 		bl	traverseRxStates
 3796              	.LVL471:
 292:Lib/libcanard/canard.c ****             {
 3797              		.loc 1 292 0
 3798 00a0 0446     		mov	r4, r0
 3799 00a2 0028     		cmp	r0, #0
 3800 00a4 BED0     		beq	.L349
 297:Lib/libcanard/canard.c ****         }
 3801              		.loc 1 297 0
 3802 00a6 DDE90A23 		ldrd	r2, [sp, #40]
 3803 00aa 4FF6FF70 		movw	r0, #65535
 3804              	.LVL472:
 3805 00ae FFF7FEFF 		bl	crcAddSignature
 3806              	.LVL473:
 3807 00b2 A082     		strh	r0, [r4, #20]	@ movhi
 3808              	.L355:
 3809              	.LBE39:
 314:Lib/libcanard/canard.c **** 
 3810              		.loc 1 314 0
 3811 00b4 002C     		cmp	r4, #0
 3812 00b6 2FD0     		beq	.L388
 317:Lib/libcanard/canard.c ****     const bool tid_timed_out = (timestamp_usec - rx_state->timestamp_usec) > TRANSFER_TIMEOUT_USEC;
 3813              		.loc 1 317 0
 3814 00b8 D4E90223 		ldrd	r2, [r4, #8]
 3815              	.LVL474:
 318:Lib/libcanard/canard.c ****     const bool first_frame = IS_START_OF_TRANSFER(tail_byte);
 3816              		.loc 1 318 0
 3817 00bc DDE90201 		ldrd	r0, [sp, #8]
 3818 00c0 CDE90623 		strd	r2, [sp, #24]
 3819 00c4 801A     		subs	r0, r0, r2
 3820 00c6 61EB0301 		sbc	r1, r1, r3
 3821 00ca CDE90801 		strd	r0, [sp, #32]
 3822              	.LVL475:
 321:Lib/libcanard/canard.c **** 
 3823              		.loc 1 321 0
 3824 00ce E07D     		ldrb	r0, [r4, #23]	@ zero_extendqisi2
 3825              	.LVL476:
 3826 00d0 09F01F08 		and	r8, r9, #31
 3827              	.LVL477:
 3828 00d4 4146     		mov	r1, r8
 3829 00d6 C0F38400 		ubfx	r0, r0, #2, #5
 3830 00da FFF7FEFF 		bl	computeTransferIDForwardDistance
 3831              	.LVL478:
 3832 00de 8446     		mov	ip, r0
 3833              	.LVL479:
 325:Lib/libcanard/canard.c ****             (first_frame && not_previous_tid);
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 104


 3834              		.loc 1 325 0
 3835 00e0 DDE90623 		ldrd	r2, [sp, #24]
 3836 00e4 1343     		orrs	r3, r2, r3
 3837 00e6 20D0     		beq	.L377
 324:Lib/libcanard/canard.c ****             (tid_timed_out) ||
 3838              		.loc 1 324 0
 3839 00e8 A84A     		ldr	r2, .L397
 3840 00ea 0023     		movs	r3, #0
 3841 00ec DDE90801 		ldrd	r0, [sp, #32]
 3842 00f0 8B42     		cmp	r3, r1
 3843 00f2 08BF     		it	eq
 3844 00f4 8242     		cmpeq	r2, r0
 3845 00f6 46D3     		bcc	.L378
 325:Lib/libcanard/canard.c ****             (first_frame && not_previous_tid);
 3846              		.loc 1 325 0
 3847 00f8 BBF1000F 		cmp	fp, #0
 3848 00fc 45D0     		beq	.L379
 326:Lib/libcanard/canard.c **** 
 3849              		.loc 1 326 0
 3850 00fe BCF1010F 		cmp	ip, #1
 3851 0102 10DD     		ble	.L389
 325:Lib/libcanard/canard.c ****             (first_frame && not_previous_tid);
 3852              		.loc 1 325 0
 3853 0104 0123     		movs	r3, #1
 3854 0106 11E0     		b	.L357
 3855              	.LVL480:
 3856              	.L353:
 306:Lib/libcanard/canard.c **** 
 3857              		.loc 1 306 0
 3858 0108 4146     		mov	r1, r8
 3859 010a B869     		ldr	r0, [r7, #24]
 3860              	.LVL481:
 3861 010c FFF7FEFF 		bl	findRxState
 3862              	.LVL482:
 308:Lib/libcanard/canard.c ****         {
 3863              		.loc 1 308 0
 3864 0110 0446     		mov	r4, r0
 3865 0112 0028     		cmp	r0, #0
 3866 0114 CED1     		bne	.L355
 3867 0116 85E7     		b	.L349
 3868              	.LVL483:
 3869              	.L388:
 314:Lib/libcanard/canard.c **** 
 3870              		.loc 1 314 0 discriminator 1
 3871 0118 9D4B     		ldr	r3, .L397+4
 3872 011a 9E4A     		ldr	r2, .L397+8
 3873 011c 4FF49D71 		mov	r1, #314
 3874 0120 9D48     		ldr	r0, .L397+12
 3875 0122 FFF7FEFF 		bl	__assert_func
 3876              	.LVL484:
 3877              	.L389:
 325:Lib/libcanard/canard.c ****             (first_frame && not_previous_tid);
 3878              		.loc 1 325 0
 3879 0126 0023     		movs	r3, #0
 3880 0128 00E0     		b	.L357
 3881              	.LVL485:
 3882              	.L377:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 105


 3883 012a 0123     		movs	r3, #1
 3884              	.LVL486:
 3885              	.L357:
 328:Lib/libcanard/canard.c ****     {
 3886              		.loc 1 328 0
 3887 012c 002B     		cmp	r3, #0
 3888 012e 2ED1     		bne	.L390
 3889              	.LVL487:
 3890              	.L358:
 340:Lib/libcanard/canard.c ****     {
 3891              		.loc 1 340 0
 3892 0130 BBF1000F 		cmp	fp, #0
 3893 0134 40D0     		beq	.L359
 340:Lib/libcanard/canard.c ****     {
 3894              		.loc 1 340 0 is_stmt 0 discriminator 1
 3895 0136 19F0400F 		tst	r9, #64
 3896 013a 3DD0     		beq	.L359
 3897              	.LBB40:
 342:Lib/libcanard/canard.c ****         CanardRxTransfer rx_transfer = {
 3898              		.loc 1 342 0 is_stmt 1
 3899 013c DDE90212 		ldrd	r1, [sp, #8]
 3900 0140 C4E90212 		strd	r1, [r4, #8]
 343:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 3901              		.loc 1 343 0
 3902 0144 0023     		movs	r3, #0
 3903 0146 0D93     		str	r3, [sp, #52]
 3904 0148 0E93     		str	r3, [sp, #56]
 3905 014a 1193     		str	r3, [sp, #68]
 3906 014c CDE90A12 		strd	r1, [sp, #40]
 345:Lib/libcanard/canard.c ****             .payload_len = (uint8_t)(frame->data_len - 1U),
 3907              		.loc 1 345 0
 3908 0150 2B1D     		adds	r3, r5, #4
 343:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 3909              		.loc 1 343 0
 3910 0152 0C93     		str	r3, [sp, #48]
 346:Lib/libcanard/canard.c ****             .data_type_id = data_type_id,
 3911              		.loc 1 346 0
 3912 0154 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 3913 0156 013B     		subs	r3, r3, #1
 3914 0158 DBB2     		uxtb	r3, r3
 343:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 3915              		.loc 1 343 0
 3916 015a ADF83C30 		strh	r3, [sp, #60]	@ movhi
 3917 015e 059B     		ldr	r3, [sp, #20]
 3918 0160 ADF83E30 		strh	r3, [sp, #62]	@ movhi
 3919 0164 8DF84060 		strb	r6, [sp, #64]
 3920 0168 8DF84180 		strb	r8, [sp, #65]
 3921 016c 049B     		ldr	r3, [sp, #16]
 3922 016e 8DF84230 		strb	r3, [sp, #66]
 3923 0172 8DF843A0 		strb	r10, [sp, #67]
 354:Lib/libcanard/canard.c **** 
 3924              		.loc 1 354 0
 3925 0176 BB68     		ldr	r3, [r7, #8]
 3926 0178 0AA9     		add	r1, sp, #40
 3927 017a 3846     		mov	r0, r7
 3928 017c 9847     		blx	r3
 3929              	.LVL488:
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 106


 356:Lib/libcanard/canard.c ****         return;
 3930              		.loc 1 356 0
 3931 017e 2046     		mov	r0, r4
 3932 0180 FFF7FEFF 		bl	prepareForNextTransfer
 3933              	.LVL489:
 3934 0184 4EE7     		b	.L349
 3935              	.LVL490:
 3936              	.L378:
 3937              	.LBE40:
 325:Lib/libcanard/canard.c ****             (first_frame && not_previous_tid);
 3938              		.loc 1 325 0
 3939 0186 0123     		movs	r3, #1
 3940 0188 D0E7     		b	.L357
 3941              	.L379:
 3942 018a 0023     		movs	r3, #0
 3943 018c CEE7     		b	.L357
 3944              	.LVL491:
 3945              	.L390:
 330:Lib/libcanard/canard.c ****         rx_state->next_toggle = 0;
 3946              		.loc 1 330 0
 3947 018e E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 3948              	.LVL492:
 3949 0190 69F38603 		bfi	r3, r9, #2, #5
 331:Lib/libcanard/canard.c ****         releaseStatePayload(ins, rx_state);
 3950              		.loc 1 331 0
 3951 0194 6FF3C713 		bfc	r3, #7, #1
 3952 0198 E375     		strb	r3, [r4, #23]
 3953              	.LVL493:
 332:Lib/libcanard/canard.c ****         if (!IS_START_OF_TRANSFER(tail_byte)) // missed the first frame
 3954              		.loc 1 332 0
 3955 019a 2146     		mov	r1, r4
 3956 019c 3846     		mov	r0, r7
 3957 019e FFF7FEFF 		bl	releaseStatePayload
 3958              	.LVL494:
 333:Lib/libcanard/canard.c ****         {
 3959              		.loc 1 333 0
 3960 01a2 BBF1000F 		cmp	fp, #0
 3961 01a6 C3D1     		bne	.L358
 335:Lib/libcanard/canard.c ****             return;
 3962              		.loc 1 335 0
 3963 01a8 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 3964 01aa C3F38402 		ubfx	r2, r3, #2, #5
 3965 01ae 0132     		adds	r2, r2, #1
 3966 01b0 62F38603 		bfi	r3, r2, #2, #5
 3967 01b4 E375     		strb	r3, [r4, #23]
 336:Lib/libcanard/canard.c ****         }
 3968              		.loc 1 336 0
 3969 01b6 35E7     		b	.L349
 3970              	.L359:
 360:Lib/libcanard/canard.c ****     {
 3971              		.loc 1 360 0
 3972 01b8 C9F34013 		ubfx	r3, r9, #5, #1
 3973 01bc E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 3974 01be B3EBD21F 		cmp	r3, r2, lsr #7
 3975 01c2 7FF42FAF 		bne	.L349
 365:Lib/libcanard/canard.c ****     {
 3976              		.loc 1 365 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 107


 3977 01c6 C2F38403 		ubfx	r3, r2, #2, #5
 3978 01ca 9845     		cmp	r8, r3
 3979 01cc 7FF42AAF 		bne	.L349
 370:Lib/libcanard/canard.c ****     {
 3980              		.loc 1 370 0
 3981 01d0 BBF1000F 		cmp	fp, #0
 3982 01d4 33D0     		beq	.L360
 370:Lib/libcanard/canard.c ****     {
 3983              		.loc 1 370 0 is_stmt 0 discriminator 1
 3984 01d6 19F0400F 		tst	r9, #64
 3985 01da 30D1     		bne	.L360
 3986              	.LBB41:
 372:Lib/libcanard/canard.c ****         {
 3987              		.loc 1 372 0 is_stmt 1
 3988 01dc 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 3989 01de 032B     		cmp	r3, #3
 3990 01e0 7FF620AF 		bls	.L349
 378:Lib/libcanard/canard.c ****         const int16_t ret = bufferBlockPushBytes(&ins->allocator, rx_state, frame->data + 2,
 3991              		.loc 1 378 0
 3992 01e4 DDE90223 		ldrd	r2, [sp, #8]
 3993 01e8 C4E90223 		strd	r2, [r4, #8]
 379:Lib/libcanard/canard.c ****                                                  (uint8_t) (frame->data_len - 3));
 3994              		.loc 1 379 0
 3995 01ec AE1D     		adds	r6, r5, #6
 380:Lib/libcanard/canard.c ****         if (ret < 0)
 3996              		.loc 1 380 0
 3997 01ee 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 379:Lib/libcanard/canard.c ****                                                  (uint8_t) (frame->data_len - 3));
 3998              		.loc 1 379 0
 3999 01f0 033B     		subs	r3, r3, #3
 4000 01f2 DBB2     		uxtb	r3, r3
 4001 01f4 3246     		mov	r2, r6
 4002 01f6 2146     		mov	r1, r4
 4003 01f8 07F10C00 		add	r0, r7, #12
 4004 01fc FFF7FEFF 		bl	bufferBlockPushBytes
 4005              	.LVL495:
 381:Lib/libcanard/canard.c ****         {
 4006              		.loc 1 381 0
 4007 0200 0028     		cmp	r0, #0
 4008 0202 14DB     		blt	.L391
 387:Lib/libcanard/canard.c ****         rx_state->calculated_crc = crcAdd((uint16_t)rx_state->calculated_crc,
 4009              		.loc 1 387 0
 4010 0204 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 4011 0206 6A79     		ldrb	r2, [r5, #5]	@ zero_extendqisi2
 4012 0208 43EA0223 		orr	r3, r3, r2, lsl #8
 4013 020c 2383     		strh	r3, [r4, #24]	@ movhi
 389:Lib/libcanard/canard.c ****     }
 4014              		.loc 1 389 0
 4015 020e 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 4016 0210 033A     		subs	r2, r2, #3
 388:Lib/libcanard/canard.c ****                                           frame->data + 2, (uint8_t)(frame->data_len - 3));
 4017              		.loc 1 388 0
 4018 0212 D2B2     		uxtb	r2, r2
 4019 0214 3146     		mov	r1, r6
 4020 0216 A08A     		ldrh	r0, [r4, #20]
 4021              	.LVL496:
 4022 0218 FFF7FEFF 		bl	crcAdd
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 108


 4023              	.LVL497:
 4024 021c A082     		strh	r0, [r4, #20]	@ movhi
 4025              	.L362:
 4026              	.LBE41:
 474:Lib/libcanard/canard.c **** }
 4027              		.loc 1 474 0
 4028 021e E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 4029 0220 DA43     		mvns	r2, r3
 4030 0222 C2F3C012 		ubfx	r2, r2, #7, #1
 4031 0226 62F3C713 		bfi	r3, r2, #7, #1
 4032 022a E375     		strb	r3, [r4, #23]
 4033 022c FAE6     		b	.L349
 4034              	.LVL498:
 4035              	.L391:
 4036              	.LBB42:
 383:Lib/libcanard/canard.c ****             prepareForNextTransfer(rx_state);
 4037              		.loc 1 383 0
 4038 022e 2146     		mov	r1, r4
 4039 0230 3846     		mov	r0, r7
 4040              	.LVL499:
 4041 0232 FFF7FEFF 		bl	releaseStatePayload
 4042              	.LVL500:
 384:Lib/libcanard/canard.c ****             return;
 4043              		.loc 1 384 0
 4044 0236 2046     		mov	r0, r4
 4045 0238 FFF7FEFF 		bl	prepareForNextTransfer
 4046              	.LVL501:
 385:Lib/libcanard/canard.c ****         }
 4047              		.loc 1 385 0
 4048 023c F2E6     		b	.L349
 4049              	.L360:
 4050              	.LBE42:
 391:Lib/libcanard/canard.c ****     {
 4051              		.loc 1 391 0
 4052 023e BBF1000F 		cmp	fp, #0
 4053 0242 02D1     		bne	.L363
 391:Lib/libcanard/canard.c ****     {
 4054              		.loc 1 391 0 is_stmt 0 discriminator 1
 4055 0244 19F0400F 		tst	r9, #64
 4056 0248 09D0     		beq	.L392
 4057              	.L363:
 4058              	.LBB43:
 406:Lib/libcanard/canard.c **** 
 4059              		.loc 1 406 0 is_stmt 1
 4060 024a 297B     		ldrb	r1, [r5, #12]	@ zero_extendqisi2
 4061 024c 0139     		subs	r1, r1, #1
 4062 024e C9B2     		uxtb	r1, r1
 4063              	.LVL502:
 410:Lib/libcanard/canard.c ****         {
 4064              		.loc 1 410 0
 4065 0250 E28A     		ldrh	r2, [r4, #22]
 4066 0252 C2F30902 		ubfx	r2, r2, #0, #10
 4067 0256 052A     		cmp	r2, #5
 4068 0258 63D8     		bhi	.L365
 4069              	.LVL503:
 408:Lib/libcanard/canard.c **** 
 4070              		.loc 1 408 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 109


 4071 025a 0023     		movs	r3, #0
 4072              	.LBB44:
 413:Lib/libcanard/canard.c ****                  (i < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE) && (tail_offset < frame_payload_size)
 4073              		.loc 1 413 0
 4074 025c 25E0     		b	.L366
 4075              	.LVL504:
 4076              	.L392:
 4077              	.LBE44:
 4078              	.LBE43:
 4079              	.LBB53:
 393:Lib/libcanard/canard.c ****                                                  (uint8_t) (frame->data_len - 1));
 4080              		.loc 1 393 0
 4081 025e 2E1D     		adds	r6, r5, #4
 394:Lib/libcanard/canard.c ****         if (ret < 0)
 4082              		.loc 1 394 0
 4083 0260 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 393:Lib/libcanard/canard.c ****                                                  (uint8_t) (frame->data_len - 1));
 4084              		.loc 1 393 0
 4085 0262 013B     		subs	r3, r3, #1
 4086 0264 DBB2     		uxtb	r3, r3
 4087 0266 3246     		mov	r2, r6
 4088 0268 2146     		mov	r1, r4
 4089 026a 07F10C00 		add	r0, r7, #12
 4090 026e FFF7FEFF 		bl	bufferBlockPushBytes
 4091              	.LVL505:
 395:Lib/libcanard/canard.c ****         {
 4092              		.loc 1 395 0
 4093 0272 0028     		cmp	r0, #0
 4094 0274 08DB     		blt	.L393
 402:Lib/libcanard/canard.c ****     }
 4095              		.loc 1 402 0
 4096 0276 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 4097 0278 013A     		subs	r2, r2, #1
 401:Lib/libcanard/canard.c ****                                           frame->data, (uint8_t)(frame->data_len - 1));
 4098              		.loc 1 401 0
 4099 027a D2B2     		uxtb	r2, r2
 4100 027c 3146     		mov	r1, r6
 4101 027e A08A     		ldrh	r0, [r4, #20]
 4102              	.LVL506:
 4103 0280 FFF7FEFF 		bl	crcAdd
 4104              	.LVL507:
 4105 0284 A082     		strh	r0, [r4, #20]	@ movhi
 4106              	.LBE53:
 392:Lib/libcanard/canard.c ****         const int16_t ret = bufferBlockPushBytes(&ins->allocator, rx_state, frame->data,
 4107              		.loc 1 392 0
 4108 0286 CAE7     		b	.L362
 4109              	.LVL508:
 4110              	.L393:
 4111              	.LBB54:
 397:Lib/libcanard/canard.c ****             prepareForNextTransfer(rx_state);
 4112              		.loc 1 397 0
 4113 0288 2146     		mov	r1, r4
 4114 028a 3846     		mov	r0, r7
 4115              	.LVL509:
 4116 028c FFF7FEFF 		bl	releaseStatePayload
 4117              	.LVL510:
 398:Lib/libcanard/canard.c ****             return;
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 110


 4118              		.loc 1 398 0
 4119 0290 2046     		mov	r0, r4
 4120 0292 FFF7FEFF 		bl	prepareForNextTransfer
 4121              	.LVL511:
 399:Lib/libcanard/canard.c ****         }
 4122              		.loc 1 399 0
 4123 0296 C5E6     		b	.L349
 4124              	.LVL512:
 4125              	.L368:
 4126              	.LBE54:
 4127              	.LBB55:
 4128              	.LBB45:
 417:Lib/libcanard/canard.c ****             }
 4129              		.loc 1 417 0
 4130 0298 E818     		adds	r0, r5, r3
 4131 029a 90F804C0 		ldrb	ip, [r0, #4]	@ zero_extendqisi2
 4132 029e A018     		adds	r0, r4, r2
 4133 02a0 80F81AC0 		strb	ip, [r0, #26]
 415:Lib/libcanard/canard.c ****             {
 4134              		.loc 1 415 0
 4135 02a4 0132     		adds	r2, r2, #1
 4136              	.LVL513:
 4137 02a6 0133     		adds	r3, r3, #1
 4138              	.LVL514:
 4139 02a8 DBB2     		uxtb	r3, r3
 4140              	.LVL515:
 4141              	.L366:
 413:Lib/libcanard/canard.c ****                  (i < CANARD_MULTIFRAME_RX_PAYLOAD_HEAD_SIZE) && (tail_offset < frame_payload_size)
 4142              		.loc 1 413 0 discriminator 1
 4143 02aa 052A     		cmp	r2, #5
 4144 02ac 01D8     		bhi	.L367
 414:Lib/libcanard/canard.c ****                  i++, tail_offset++)
 4145              		.loc 1 414 0
 4146 02ae 8B42     		cmp	r3, r1
 4147 02b0 F2D3     		bcc	.L368
 4148              	.LVL516:
 4149              	.L367:
 4150              	.LBE45:
 446:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 4151              		.loc 1 446 0
 4152 02b2 DDE902BC 		ldrd	fp, [sp, #8]
 4153              	.LVL517:
 4154 02b6 CDE90ABC 		strd	fp, [sp, #40]
 448:Lib/libcanard/canard.c ****             .payload_middle = rx_state->buffer_blocks,
 4155              		.loc 1 448 0
 4156 02ba 04F11A02 		add	r2, r4, #26
 446:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 4157              		.loc 1 446 0
 4158 02be 0C92     		str	r2, [sp, #48]
 449:Lib/libcanard/canard.c ****             .payload_tail = (tail_offset >= frame_payload_size) ? NULL : (&frame->data[tail_offset]
 4159              		.loc 1 449 0
 4160 02c0 6268     		ldr	r2, [r4, #4]
 446:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 4161              		.loc 1 446 0
 4162 02c2 0D92     		str	r2, [sp, #52]
 450:Lib/libcanard/canard.c ****             .payload_len = (uint16_t)(rx_state->payload_len + frame_payload_size),
 4163              		.loc 1 450 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 111


 4164 02c4 8B42     		cmp	r3, r1
 4165 02c6 5ED2     		bcs	.L383
 450:Lib/libcanard/canard.c ****             .payload_len = (uint16_t)(rx_state->payload_len + frame_payload_size),
 4166              		.loc 1 450 0 is_stmt 0 discriminator 1
 4167 02c8 2B44     		add	r3, r3, r5
 4168              	.LVL518:
 4169 02ca 0433     		adds	r3, r3, #4
 4170              	.L374:
 446:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 4171              		.loc 1 446 0 is_stmt 1
 4172 02cc 0E93     		str	r3, [sp, #56]
 451:Lib/libcanard/canard.c ****             .data_type_id = data_type_id,
 4173              		.loc 1 451 0
 4174 02ce E38A     		ldrh	r3, [r4, #22]
 4175 02d0 C3F30903 		ubfx	r3, r3, #0, #10
 4176 02d4 1944     		add	r1, r1, r3
 4177              	.LVL519:
 446:Lib/libcanard/canard.c ****             .timestamp_usec = timestamp_usec,
 4178              		.loc 1 446 0
 4179 02d6 ADF83C10 		strh	r1, [sp, #60]	@ movhi
 4180 02da 059B     		ldr	r3, [sp, #20]
 4181 02dc ADF83E30 		strh	r3, [sp, #62]	@ movhi
 4182 02e0 8DF84060 		strb	r6, [sp, #64]
 4183 02e4 8DF84180 		strb	r8, [sp, #65]
 4184 02e8 049B     		ldr	r3, [sp, #16]
 4185 02ea 8DF84230 		strb	r3, [sp, #66]
 4186 02ee 8DF843A0 		strb	r10, [sp, #67]
 459:Lib/libcanard/canard.c **** 
 4187              		.loc 1 459 0
 4188 02f2 0023     		movs	r3, #0
 4189 02f4 6360     		str	r3, [r4, #4]
 462:Lib/libcanard/canard.c ****         if (rx_state->calculated_crc == rx_state->payload_crc)
 4190              		.loc 1 462 0
 4191 02f6 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 4192 02f8 013A     		subs	r2, r2, #1
 4193 02fa 291D     		adds	r1, r5, #4
 4194 02fc A08A     		ldrh	r0, [r4, #20]
 4195 02fe FFF7FEFF 		bl	crcAdd
 4196              	.LVL520:
 4197 0302 A082     		strh	r0, [r4, #20]	@ movhi
 463:Lib/libcanard/canard.c ****         {
 4198              		.loc 1 463 0
 4199 0304 238B     		ldrh	r3, [r4, #24]
 4200 0306 9842     		cmp	r0, r3
 4201 0308 03D1     		bne	.L375
 465:Lib/libcanard/canard.c ****         }
 4202              		.loc 1 465 0
 4203 030a BB68     		ldr	r3, [r7, #8]
 4204 030c 0AA9     		add	r1, sp, #40
 4205 030e 3846     		mov	r0, r7
 4206 0310 9847     		blx	r3
 4207              	.LVL521:
 4208              	.L375:
 469:Lib/libcanard/canard.c ****         prepareForNextTransfer(rx_state);
 4209              		.loc 1 469 0
 4210 0312 0AA9     		add	r1, sp, #40
 4211 0314 3846     		mov	r0, r7
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 112


 4212 0316 FFF7FEFF 		bl	canardReleaseRxTransferPayload
 4213              	.LVL522:
 470:Lib/libcanard/canard.c ****         return;
 4214              		.loc 1 470 0
 4215 031a 2046     		mov	r0, r4
 4216 031c FFF7FEFF 		bl	prepareForNextTransfer
 4217              	.LVL523:
 4218 0320 80E6     		b	.L349
 4219              	.LVL524:
 4220              	.L365:
 4221              	.LBB46:
 423:Lib/libcanard/canard.c ****             if (block != NULL)          // If there's no middle, that's fine, we'll use only head a
 4222              		.loc 1 423 0
 4223 0322 6068     		ldr	r0, [r4, #4]
 4224              	.LVL525:
 424:Lib/libcanard/canard.c ****             {
 4225              		.loc 1 424 0
 4226 0324 10B1     		cbz	r0, .L394
 4227              	.LBB47:
 426:Lib/libcanard/canard.c ****                 while (block->next != NULL)
 4228              		.loc 1 426 0
 4229 0326 4FF0060C 		mov	ip, #6
 4230 032a 04E0     		b	.L369
 4231              	.L394:
 4232              	.LBE47:
 4233              	.LBE46:
 408:Lib/libcanard/canard.c **** 
 4234              		.loc 1 408 0
 4235 032c 0023     		movs	r3, #0
 4236 032e C0E7     		b	.L367
 4237              	.LVL526:
 4238              	.L370:
 4239              	.LBB51:
 4240              	.LBB49:
 430:Lib/libcanard/canard.c ****                 }
 4241              		.loc 1 430 0
 4242 0330 0CF11C0C 		add	ip, ip, #28
 4243              	.LVL527:
 429:Lib/libcanard/canard.c ****                     offset += CANARD_BUFFER_BLOCK_DATA_SIZE;
 4244              		.loc 1 429 0
 4245 0334 1846     		mov	r0, r3
 4246              	.LVL528:
 4247              	.L369:
 427:Lib/libcanard/canard.c ****                 {
 4248              		.loc 1 427 0
 4249 0336 0368     		ldr	r3, [r0]
 4250 0338 002B     		cmp	r3, #0
 4251 033a F9D1     		bne	.L370
 432:Lib/libcanard/canard.c **** 
 4252              		.loc 1 432 0
 4253 033c 28B1     		cbz	r0, .L395
 434:Lib/libcanard/canard.c ****                 CANARD_ASSERT(offset_within_block < CANARD_BUFFER_BLOCK_DATA_SIZE);
 4254              		.loc 1 434 0
 4255 033e A2EB0C02 		sub	r2, r2, ip
 4256              	.LVL529:
 435:Lib/libcanard/canard.c **** 
 4257              		.loc 1 435 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 113


 4258 0342 1B2A     		cmp	r2, #27
 4259 0344 08D8     		bhi	.L396
 4260              	.LBE49:
 4261              	.LBE51:
 408:Lib/libcanard/canard.c **** 
 4262              		.loc 1 408 0
 4263 0346 0023     		movs	r3, #0
 4264 0348 18E0     		b	.L372
 4265              	.LVL530:
 4266              	.L395:
 4267              	.LBB52:
 4268              	.LBB50:
 432:Lib/libcanard/canard.c **** 
 4269              		.loc 1 432 0 discriminator 1
 4270 034a 144B     		ldr	r3, .L397+16
 4271 034c 114A     		ldr	r2, .L397+8
 4272 034e 4FF4D871 		mov	r1, #432
 4273              	.LVL531:
 4274 0352 1148     		ldr	r0, .L397+12
 4275              	.LVL532:
 4276 0354 FFF7FEFF 		bl	__assert_func
 4277              	.LVL533:
 4278              	.L396:
 435:Lib/libcanard/canard.c **** 
 4279              		.loc 1 435 0 discriminator 1
 4280 0358 114B     		ldr	r3, .L397+20
 4281 035a 0E4A     		ldr	r2, .L397+8
 4282              	.LVL534:
 4283 035c 40F2B311 		movw	r1, #435
 4284              	.LVL535:
 4285 0360 0D48     		ldr	r0, .L397+12
 4286              	.LVL536:
 4287 0362 FFF7FEFF 		bl	__assert_func
 4288              	.LVL537:
 4289              	.L373:
 4290              	.LBB48:
 441:Lib/libcanard/canard.c ****                 }
 4291              		.loc 1 441 0
 4292 0366 05EB030C 		add	ip, r5, r3
 4293 036a 9CF804E0 		ldrb	lr, [ip, #4]	@ zero_extendqisi2
 4294 036e 00EB020C 		add	ip, r0, r2
 4295 0372 8CF804E0 		strb	lr, [ip, #4]
 439:Lib/libcanard/canard.c ****                 {
 4296              		.loc 1 439 0
 4297 0376 0132     		adds	r2, r2, #1
 4298              	.LVL538:
 4299 0378 0133     		adds	r3, r3, #1
 4300              	.LVL539:
 4301 037a DBB2     		uxtb	r3, r3
 4302              	.LVL540:
 4303              	.L372:
 437:Lib/libcanard/canard.c ****                      (i < CANARD_BUFFER_BLOCK_DATA_SIZE) && (tail_offset < frame_payload_size);
 4304              		.loc 1 437 0 discriminator 1
 4305 037c 1B2A     		cmp	r2, #27
 4306 037e 98D8     		bhi	.L367
 438:Lib/libcanard/canard.c ****                      i++, tail_offset++)
 4307              		.loc 1 438 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 114


 4308 0380 8B42     		cmp	r3, r1
 4309 0382 F0D3     		bcc	.L373
 4310 0384 95E7     		b	.L367
 4311              	.LVL541:
 4312              	.L383:
 4313              	.LBE48:
 4314              	.LBE50:
 4315              	.LBE52:
 450:Lib/libcanard/canard.c ****             .payload_len = (uint16_t)(rx_state->payload_len + frame_payload_size),
 4316              		.loc 1 450 0
 4317 0386 0023     		movs	r3, #0
 4318              	.LVL542:
 4319 0388 A0E7     		b	.L374
 4320              	.L398:
 4321 038a 00BF     		.align	2
 4322              	.L397:
 4323 038c 80841E00 		.word	2000000
 4324 0390 00000000 		.word	.LC24
 4325 0394 00000000 		.word	.LANCHOR13
 4326 0398 14000000 		.word	.LC1
 4327 039c 18000000 		.word	.LC25
 4328 03a0 30000000 		.word	.LC26
 4329              	.LBE55:
 4330              		.cfi_endproc
 4331              	.LFE8:
 4333              		.section	.text.canardGetPoolAllocatorStatistics,"ax",%progbits
 4334              		.align	1
 4335              		.global	canardGetPoolAllocatorStatistics
 4336              		.syntax unified
 4337              		.thumb
 4338              		.thumb_func
 4339              		.fpu fpv4-sp-d16
 4341              	canardGetPoolAllocatorStatistics:
 4342              	.LFB13:
 765:Lib/libcanard/canard.c ****     return ins->allocator.statistics;
 4343              		.loc 1 765 0
 4344              		.cfi_startproc
 4345              		@ args = 0, pretend = 0, frame = 0
 4346              		@ frame_needed = 0, uses_anonymous_args = 0
 4347              		@ link register save eliminated.
 4348              	.LVL543:
 4349 0000 0346     		mov	r3, r0
 766:Lib/libcanard/canard.c **** }
 4350              		.loc 1 766 0
 4351 0002 0869     		ldr	r0, [r1, #16]
 4352              	.LVL544:
 4353 0004 1860     		str	r0, [r3]	@ unaligned
 4354 0006 8A8A     		ldrh	r2, [r1, #20]	@ unaligned
 4355 0008 9A80     		strh	r2, [r3, #4]	@ unaligned
 767:Lib/libcanard/canard.c **** 
 4356              		.loc 1 767 0
 4357 000a 1846     		mov	r0, r3
 4358 000c 7047     		bx	lr
 4359              		.cfi_endproc
 4360              	.LFE13:
 4362              		.section	.text.canardConvertNativeFloatToFloat16,"ax",%progbits
 4363              		.align	1
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 115


 4364              		.global	canardConvertNativeFloatToFloat16
 4365              		.syntax unified
 4366              		.thumb
 4367              		.thumb_func
 4368              		.fpu fpv4-sp-d16
 4370              	canardConvertNativeFloatToFloat16:
 4371              	.LFB14:
 770:Lib/libcanard/canard.c ****     CANARD_ASSERT(sizeof(float) == 4);
 4372              		.loc 1 770 0
 4373              		.cfi_startproc
 4374              		@ args = 0, pretend = 0, frame = 0
 4375              		@ frame_needed = 0, uses_anonymous_args = 0
 4376              		@ link register save eliminated.
 4377              	.LVL545:
 4378 0000 10EE103A 		vmov	r3, s0	@ int
 787:Lib/libcanard/canard.c ****     in.u ^= sign;
 4379              		.loc 1 787 0
 4380 0004 03F00040 		and	r0, r3, #-2147483648
 4381              	.LVL546:
 788:Lib/libcanard/canard.c **** 
 4382              		.loc 1 788 0
 4383 0008 4340     		eors	r3, r3, r0
 4384              	.LVL547:
 792:Lib/libcanard/canard.c ****     {
 4385              		.loc 1 792 0
 4386 000a B3F1FF4F 		cmp	r3, #2139095040
 4387 000e 03D3     		bcc	.L401
 794:Lib/libcanard/canard.c ****     }
 4388              		.loc 1 794 0
 4389 0010 1AD9     		bls	.L404
 4390 0012 47F6FF73 		movw	r3, #32767
 4391 0016 14E0     		b	.L402
 4392              	.L401:
 798:Lib/libcanard/canard.c ****         in.f *= magic.f;
 4393              		.loc 1 798 0
 4394 0018 23F47F63 		bic	r3, r3, #4080
 4395 001c 23F00F03 		bic	r3, r3, #15
 799:Lib/libcanard/canard.c ****         in.u -= round_mask;
 4396              		.loc 1 799 0
 4397 0020 DFED0B7A 		vldr.32	s15, .L405
 4398 0024 07EE103A 		vmov	s14, r3
 4399 0028 67EE277A 		vmul.f32	s15, s14, s15
 4400 002c 17EE903A 		vmov	r3, s15
 800:Lib/libcanard/canard.c ****         if (in.u > f16inf.u)
 4401              		.loc 1 800 0
 4402 0030 03F58053 		add	r3, r3, #4096
 4403              	.LVL548:
 801:Lib/libcanard/canard.c ****         {
 4404              		.loc 1 801 0
 4405 0034 B3F1786F 		cmp	r3, #260046848
 4406 0038 01D9     		bls	.L403
 803:Lib/libcanard/canard.c ****         }
 4407              		.loc 1 803 0
 4408 003a 4FF07863 		mov	r3, #260046848
 4409              	.LVL549:
 4410              	.L403:
 805:Lib/libcanard/canard.c ****     }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 116


 4411              		.loc 1 805 0
 4412 003e C3F34F33 		ubfx	r3, r3, #13, #16
 4413              	.LVL550:
 4414              	.L402:
 811:Lib/libcanard/canard.c **** 
 4415              		.loc 1 811 0
 4416 0042 43EA1040 		orr	r0, r3, r0, lsr #16
 4417              	.LVL551:
 4418 0046 7047     		bx	lr
 4419              	.LVL552:
 4420              	.L404:
 794:Lib/libcanard/canard.c ****     }
 4421              		.loc 1 794 0
 4422 0048 4FF4F843 		mov	r3, #31744
 4423 004c F9E7     		b	.L402
 4424              	.L406:
 4425 004e 00BF     		.align	2
 4426              	.L405:
 4427 0050 00008007 		.word	125829120
 4428              		.cfi_endproc
 4429              	.LFE14:
 4431              		.section	.text.canardConvertFloat16ToNativeFloat,"ax",%progbits
 4432              		.align	1
 4433              		.global	canardConvertFloat16ToNativeFloat
 4434              		.syntax unified
 4435              		.thumb
 4436              		.thumb_func
 4437              		.fpu fpv4-sp-d16
 4439              	canardConvertFloat16ToNativeFloat:
 4440              	.LFB15:
 814:Lib/libcanard/canard.c ****     CANARD_ASSERT(sizeof(float) == 4);
 4441              		.loc 1 814 0
 4442              		.cfi_startproc
 4443              		@ args = 0, pretend = 0, frame = 0
 4444              		@ frame_needed = 0, uses_anonymous_args = 0
 4445              		@ link register save eliminated.
 4446              	.LVL553:
 827:Lib/libcanard/canard.c ****     out.f *= magic.f;
 4447              		.loc 1 827 0
 4448 0000 0D4B     		ldr	r3, .L411
 4449 0002 03EA4033 		and	r3, r3, r0, lsl #13
 828:Lib/libcanard/canard.c ****     if (out.f >= was_inf_nan.f)
 4450              		.loc 1 828 0
 4451 0006 DFED0D7A 		vldr.32	s15, .L411+4
 4452 000a 07EE103A 		vmov	s14, r3
 4453 000e 67EE277A 		vmul.f32	s15, s14, s15
 4454 0012 17EE903A 		vmov	r3, s15	@ int
 4455              	.LVL554:
 829:Lib/libcanard/canard.c ****     {
 4456              		.loc 1 829 0
 4457 0016 9FED0A7A 		vldr.32	s14, .L411+8
 4458 001a F4EEC77A 		vcmpe.f32	s15, s14
 4459 001e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4460 0022 01DB     		blt	.L408
 831:Lib/libcanard/canard.c ****     }
 4461              		.loc 1 831 0
 4462 0024 43F0FF43 		orr	r3, r3, #2139095040
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 117


 4463              	.L408:
 833:Lib/libcanard/canard.c **** 
 4464              		.loc 1 833 0
 4465 0028 0004     		lsls	r0, r0, #16
 4466              	.LVL555:
 4467 002a 00F00040 		and	r0, r0, #-2147483648
 4468              	.LVL556:
 835:Lib/libcanard/canard.c **** }
 4469              		.loc 1 835 0
 4470 002e 1843     		orrs	r0, r0, r3
 836:Lib/libcanard/canard.c **** 
 4471              		.loc 1 836 0
 4472 0030 00EE100A 		vmov	s0, r0
 4473 0034 7047     		bx	lr
 4474              	.L412:
 4475 0036 00BF     		.align	2
 4476              	.L411:
 4477 0038 00E0FF0F 		.word	268427264
 4478 003c 00008077 		.word	2004877312
 4479 0040 00008047 		.word	1199570944
 4480              		.cfi_endproc
 4481              	.LFE15:
 4483              		.section	.rodata.__func__.6070,"a",%progbits
 4484              		.align	2
 4485              		.set	.LANCHOR8,. + 0
 4488              	__func__.6070:
 4489 0000 63616E61 		.ascii	"canardInit\000"
 4489      7264496E 
 4489      697400
 4490              		.section	.rodata.__func__.6075,"a",%progbits
 4491              		.align	2
 4492              		.set	.LANCHOR9,. + 0
 4495              	__func__.6075:
 4496 0000 63616E61 		.ascii	"canardGetUserReference\000"
 4496      72644765 
 4496      74557365 
 4496      72526566 
 4496      6572656E 
 4497              		.section	.rodata.__func__.6080,"a",%progbits
 4498              		.align	2
 4499              		.set	.LANCHOR10,. + 0
 4502              	__func__.6080:
 4503 0000 63616E61 		.ascii	"canardSetLocalNodeID\000"
 4503      72645365 
 4503      744C6F63 
 4503      616C4E6F 
 4503      64654944 
 4504              		.section	.rodata.__func__.6133,"a",%progbits
 4505              		.align	2
 4506              		.set	.LANCHOR13,. + 0
 4509              	__func__.6133:
 4510 0000 63616E61 		.ascii	"canardHandleRxFrame\000"
 4510      72644861 
 4510      6E646C65 
 4510      52784672 
 4510      616D6500 
 4511              		.section	.rodata.__func__.6188,"a",%progbits
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 118


 4512              		.align	2
 4513              		.set	.LANCHOR11,. + 0
 4516              	__func__.6188:
 4517 0000 63616E61 		.ascii	"canardDecodeScalar\000"
 4517      72644465 
 4517      636F6465 
 4517      5363616C 
 4517      617200
 4518              		.section	.rodata.__func__.6196,"a",%progbits
 4519              		.align	2
 4520              		.set	.LANCHOR12,. + 0
 4523              	__func__.6196:
 4524 0000 63616E61 		.ascii	"canardEncodeScalar\000"
 4524      7264456E 
 4524      636F6465 
 4524      5363616C 
 4524      617200
 4525              		.section	.rodata.__func__.6250,"a",%progbits
 4526              		.align	2
 4527              		.set	.LANCHOR1,. + 0
 4530              	__func__.6250:
 4531 0000 696E6372 		.ascii	"incrementTransferID\000"
 4531      656D656E 
 4531      74547261 
 4531      6E736665 
 4531      72494400 
 4532              		.section	.rodata.__func__.6259,"a",%progbits
 4533              		.align	2
 4534              		.set	.LANCHOR7,. + 0
 4537              	__func__.6259:
 4538 0000 656E7175 		.ascii	"enqueueTxFrames\000"
 4538      65756554 
 4538      78467261 
 4538      6D657300 
 4539              		.section	.rodata.__func__.6277,"a",%progbits
 4540              		.align	2
 4541              		.set	.LANCHOR0,. + 0
 4544              	__func__.6277:
 4545 0000 70757368 		.ascii	"pushTxQueue\000"
 4545      54785175 
 4545      65756500 
 4546              		.section	.rodata.__func__.6302,"a",%progbits
 4547              		.align	2
 4548              		.set	.LANCHOR3,. + 0
 4551              	__func__.6302:
 4552 0000 70726570 		.ascii	"prepareForNextTransfer\000"
 4552      61726546 
 4552      6F724E65 
 4552      78745472 
 4552      616E7366 
 4553              		.section	.rodata.__func__.6378,"a",%progbits
 4554              		.align	2
 4555              		.set	.LANCHOR4,. + 0
 4558              	__func__.6378:
 4559 0000 636F7079 		.ascii	"copyBitArray\000"
 4559      42697441 
 4559      72726179 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 119


 4559      00
 4560              		.section	.rodata.__func__.6395,"a",%progbits
 4561              		.align	2
 4562              		.set	.LANCHOR5,. + 0
 4565              	__func__.6395:
 4566 0000 64657363 		.ascii	"descatterTransferPayload\000"
 4566      61747465 
 4566      72547261 
 4566      6E736665 
 4566      72506179 
 4567              		.section	.rodata.__func__.6421,"a",%progbits
 4568              		.align	2
 4569              		.set	.LANCHOR6,. + 0
 4572              	__func__.6421:
 4573 0000 73776170 		.ascii	"swapByteOrder\000"
 4573      42797465 
 4573      4F726465 
 4573      7200
 4574              		.section	.rodata.__func__.6472,"a",%progbits
 4575              		.align	2
 4576              		.set	.LANCHOR2,. + 0
 4579              	__func__.6472:
 4580 0000 66726565 		.ascii	"freeBlock\000"
 4580      426C6F63 
 4580      6B00
 4581              		.section	.rodata.canardDecodeScalar.str1.4,"aMS",%progbits,1
 4582              		.align	2
 4583              	.LC20:
 4584 0000 28726573 		.ascii	"(result > 0) && (result <= 64) && (result <= bit_le"
 4584      756C7420 
 4584      3E203029 
 4584      20262620 
 4584      28726573 
 4585 0033 6E677468 		.ascii	"ngth)\000"
 4585      2900
 4586 0039 000000   		.space	3
 4587              	.LC21:
 4588 003c 28737464 		.ascii	"(std_byte_length > 0) && (std_byte_length <= 8)\000"
 4588      5F627974 
 4588      655F6C65 
 4588      6E677468 
 4588      203E2030 
 4589              		.section	.rodata.canardEncodeScalar.str1.4,"aMS",%progbits,1
 4590              		.align	2
 4591              	.LC22:
 4592 0000 64657374 		.ascii	"destination != ((void *)0)\000"
 4592      696E6174 
 4592      696F6E20 
 4592      213D2028 
 4592      28766F69 
 4593 001b 00       		.space	1
 4594              	.LC23:
 4595 001c 76616C75 		.ascii	"value != ((void *)0)\000"
 4595      6520213D 
 4595      20282876 
 4595      6F696420 
 4595      2A293029 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 120


 4596              		.section	.rodata.canardHandleRxFrame.str1.4,"aMS",%progbits,1
 4597              		.align	2
 4598              	.LC24:
 4599 0000 72785F73 		.ascii	"rx_state != ((void *)0)\000"
 4599      74617465 
 4599      20213D20 
 4599      2828766F 
 4599      6964202A 
 4600              	.LC25:
 4601 0018 626C6F63 		.ascii	"block != ((void *)0)\000"
 4601      6B20213D 
 4601      20282876 
 4601      6F696420 
 4601      2A293029 
 4602 002d 000000   		.space	3
 4603              	.LC26:
 4604 0030 6F666673 		.ascii	"offset_within_block < (32U - __builtin_offsetof (Ca"
 4604      65745F77 
 4604      69746869 
 4604      6E5F626C 
 4604      6F636B20 
 4605 0063 6E617264 		.ascii	"nardBufferBlock, data))\000"
 4605      42756666 
 4605      6572426C 
 4605      6F636B2C 
 4605      20646174 
 4606              		.section	.rodata.canardInit.str1.4,"aMS",%progbits,1
 4607              		.align	2
 4608              	.LC18:
 4609 0000 6F75745F 		.ascii	"out_ins != ((void *)0)\000"
 4609      696E7320 
 4609      213D2028 
 4609      28766F69 
 4609      64202A29 
 4610              		.section	.rodata.canardSetLocalNodeID.str1.4,"aMS",%progbits,1
 4611              		.align	2
 4612              	.LC19:
 4613 0000 3000     		.ascii	"0\000"
 4614              		.section	.rodata.copyBitArray.str1.4,"aMS",%progbits,1
 4615              		.align	2
 4616              	.LC6:
 4617 0000 7372635F 		.ascii	"src_len > 0U\000"
 4617      6C656E20 
 4617      3E203055 
 4617      00
 4618              		.section	.rodata.descatterTransferPayload.str1.4,"aMS",%progbits,1
 4619              		.align	2
 4620              	.LC7:
 4621 0000 7472616E 		.ascii	"transfer != 0\000"
 4621      73666572 
 4621      20213D20 
 4621      3000
 4622 000e 0000     		.space	2
 4623              	.LC8:
 4624 0010 6269745F 		.ascii	"bit_length > 0\000"
 4624      6C656E67 
 4624      7468203E 
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 121


 4624      203000
 4625 001f 00       		.space	1
 4626              	.LC9:
 4627 0020 72656D61 		.ascii	"remaining_bits > 0\000"
 4627      696E696E 
 4627      675F6269 
 4627      7473203E 
 4627      203000
 4628 0033 00       		.space	1
 4629              	.LC10:
 4630 0034 696E7075 		.ascii	"input_bit_offset >= block_bit_offset\000"
 4630      745F6269 
 4630      745F6F66 
 4630      66736574 
 4630      203E3D20 
 4631 0059 000000   		.space	3
 4632              	.LC11:
 4633 005c 626C6F63 		.ascii	"block_end_bit_offset > block_bit_offset\000"
 4633      6B5F656E 
 4633      645F6269 
 4633      745F6F66 
 4633      66736574 
 4634              	.LC12:
 4635 0084 72656D61 		.ascii	"remaining_bit_length <= remaining_bits\000"
 4635      696E696E 
 4635      675F6269 
 4635      745F6C65 
 4635      6E677468 
 4636 00ab 00       		.space	1
 4637              	.LC13:
 4638 00ac 696E7075 		.ascii	"input_bit_offset <= transfer->payload_len * 8\000"
 4638      745F6269 
 4638      745F6F66 
 4638      66736574 
 4638      203C3D20 
 4639 00da 0000     		.space	2
 4640              	.LC14:
 4641 00dc 6F757470 		.ascii	"output_bit_offset <= 64\000"
 4641      75745F62 
 4641      69745F6F 
 4641      66667365 
 4641      74203C3D 
 4642              	.LC15:
 4643 00f4 72656D61 		.ascii	"remaining_bit_length == 0\000"
 4643      696E696E 
 4643      675F6269 
 4643      745F6C65 
 4643      6E677468 
 4644              		.section	.rodata.enqueueTxFrames.str1.4,"aMS",%progbits,1
 4645              		.align	2
 4646              	.LC17:
 4647 0000 2863616E 		.ascii	"(can_id & 0x1FFFFFFFU) == can_id\000"
 4647      5F696420 
 4647      26203078 
 4647      31464646 
 4647      46464646 
 4648              		.section	.rodata.freeBlock.str1.4,"aMS",%progbits,1
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 122


 4649              		.align	2
 4650              	.LC4:
 4651 0000 616C6C6F 		.ascii	"allocator->statistics.current_usage_blocks > 0\000"
 4651      6361746F 
 4651      722D3E73 
 4651      74617469 
 4651      73746963 
 4652              		.section	.rodata.incrementTransferID.str1.4,"aMS",%progbits,1
 4653              		.align	2
 4654              	.LC3:
 4655 0000 7472616E 		.ascii	"transfer_id != ((void *)0)\000"
 4655      73666572 
 4655      5F696420 
 4655      213D2028 
 4655      28766F69 
 4656              		.section	.rodata.prepareForNextTransfer.str1.4,"aMS",%progbits,1
 4657              		.align	2
 4658              	.LC5:
 4659 0000 73746174 		.ascii	"state->buffer_blocks == ((void *)0)\000"
 4659      652D3E62 
 4659      75666665 
 4659      725F626C 
 4659      6F636B73 
 4660              		.section	.rodata.pushTxQueue.str1.4,"aMS",%progbits,1
 4661              		.align	2
 4662              	.LC0:
 4663 0000 696E7320 		.ascii	"ins != ((void *)0)\000"
 4663      213D2028 
 4663      28766F69 
 4663      64202A29 
 4663      302900
 4664 0013 00       		.space	1
 4665              	.LC1:
 4666 0014 4C69622F 		.ascii	"Lib/libcanard/canard.c\000"
 4666      6C696263 
 4666      616E6172 
 4666      642F6361 
 4666      6E617264 
 4667 002b 00       		.space	1
 4668              	.LC2:
 4669 002c 6974656D 		.ascii	"item->frame.data_len > 0\000"
 4669      2D3E6672 
 4669      616D652E 
 4669      64617461 
 4669      5F6C656E 
 4670              		.section	.rodata.swapByteOrder.str1.4,"aMS",%progbits,1
 4671              		.align	2
 4672              	.LC16:
 4673 0000 64617461 		.ascii	"data != ((void *)0)\000"
 4673      20213D20 
 4673      2828766F 
 4673      6964202A 
 4673      29302900 
 4674              		.text
 4675              	.Letext0:
 4676              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/machine/_d
 4677              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_stdin
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 123


 4678              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/lib/gcc/arm-none-eabi/7.3.1/incl
 4679              		.file 5 "Lib/libcanard/canard.h"
 4680              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/lock.h
 4681              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_types
 4682              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/reent.
 4683              		.file 9 "<built-in>"
 4684              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/assert.h"
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 124


DEFINED SYMBOLS
                            *ABS*:0000000000000000 canard.c
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:18     .text.computeTransferIDForwardDistance:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:24     .text.computeTransferIDForwardDistance:0000000000000000 computeTransferIDForwardDistance
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:55     .text.isPriorityHigher:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:61     .text.isPriorityHigher:0000000000000000 isPriorityHigher
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:162    .text.extractTransferType:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:168    .text.extractTransferType:0000000000000000 extractTransferType
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:203    .text.extractDataType:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:209    .text.extractDataType:0000000000000000 extractDataType
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:250    .text.findRxState:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:256    .text.findRxState:0000000000000000 findRxState
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:282    .text.isBigEndian:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:288    .text.isBigEndian:0000000000000000 isBigEndian
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:302    .text.crcAddByte:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:308    .text.crcAddByte:0000000000000000 crcAddByte
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:359    .text.crcAddSignature:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:365    .text.crcAddSignature:0000000000000000 crcAddSignature
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:415    .text.crcAdd:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:421    .text.crcAdd:0000000000000000 crcAdd
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:462    .text.initPoolAllocator:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:468    .text.initPoolAllocator:0000000000000000 initPoolAllocator
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:526    .text.allocateBlock:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:532    .text.allocateBlock:0000000000000000 allocateBlock
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:572    .text.createBufferBlock:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:578    .text.createBufferBlock:0000000000000000 createBufferBlock
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:608    .text.bufferBlockPushBytes:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:614    .text.bufferBlockPushBytes:0000000000000000 bufferBlockPushBytes
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:870    .text.pushTxQueue:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:876    .text.pushTxQueue:0000000000000000 pushTxQueue
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:980    .text.pushTxQueue:0000000000000068 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:988    .text.incrementTransferID:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:994    .text.incrementTransferID:0000000000000000 incrementTransferID
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1034   .text.incrementTransferID:0000000000000024 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1041   .text.freeBlock:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1047   .text.freeBlock:0000000000000000 freeBlock
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1086   .text.freeBlock:0000000000000020 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1093   .text.releaseStatePayload:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1099   .text.releaseStatePayload:0000000000000000 releaseStatePayload
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1148   .text.prepareForNextTransfer:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1154   .text.prepareForNextTransfer:0000000000000000 prepareForNextTransfer
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1197   .text.prepareForNextTransfer:0000000000000038 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1204   .text.copyBitArray:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1210   .text.copyBitArray:0000000000000000 copyBitArray
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1327   .text.copyBitArray:0000000000000088 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1334   .text.descatterTransferPayload:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1340   .text.descatterTransferPayload:0000000000000000 descatterTransferPayload
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1741   .text.descatterTransferPayload:00000000000001fc $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1756   .text.swapByteOrder:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1762   .text.swapByteOrder:0000000000000000 swapByteOrder
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1822   .text.swapByteOrder:000000000000002c $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1829   .text.createTxItem:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1835   .text.createTxItem:0000000000000000 createTxItem
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1869   .text.enqueueTxFrames:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:1875   .text.enqueueTxFrames:0000000000000000 enqueueTxFrames
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2139   .text.enqueueTxFrames:0000000000000130 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2149   .text.createRxState:0000000000000000 $t
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 125


/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2155   .text.createRxState:0000000000000000 createRxState
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2216   .text.prependRxState:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2222   .text.prependRxState:0000000000000000 prependRxState
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2257   .text.traverseRxStates:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2263   .text.traverseRxStates:0000000000000000 traverseRxStates
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2323   .text.canardInit:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2330   .text.canardInit:0000000000000000 canardInit
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2401   .text.canardInit:0000000000000044 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2408   .text.canardGetUserReference:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2415   .text.canardGetUserReference:0000000000000000 canardGetUserReference
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2446   .text.canardGetUserReference:0000000000000014 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2453   .text.canardSetLocalNodeID:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2460   .text.canardSetLocalNodeID:0000000000000000 canardSetLocalNodeID
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2509   .text.canardSetLocalNodeID:000000000000002c $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2517   .text.canardGetLocalNodeID:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2524   .text.canardGetLocalNodeID:0000000000000000 canardGetLocalNodeID
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2540   .text.canardBroadcast:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2547   .text.canardBroadcast:0000000000000000 canardBroadcast
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2699   .text.canardRequestOrRespond:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2706   .text.canardRequestOrRespond:0000000000000000 canardRequestOrRespond
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2834   .text.canardPeekTxQueue:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2841   .text.canardPeekTxQueue:0000000000000000 canardPeekTxQueue
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2865   .text.canardPopTxQueue:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2872   .text.canardPopTxQueue:0000000000000000 canardPopTxQueue
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2901   .text.canardCleanupStaleTransfers:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:2908   .text.canardCleanupStaleTransfers:0000000000000000 canardCleanupStaleTransfers
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3002   .text.canardCleanupStaleTransfers:0000000000000074 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3007   .text.canardDecodeScalar:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3014   .text.canardDecodeScalar:0000000000000000 canardDecodeScalar
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3394   .text.canardDecodeScalar:000000000000026c $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3403   .text.canardEncodeScalar:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3410   .text.canardEncodeScalar:0000000000000000 canardEncodeScalar
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3592   .text.canardEncodeScalar:00000000000000d0 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3601   .text.canardReleaseRxTransferPayload:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3608   .text.canardReleaseRxTransferPayload:0000000000000000 canardReleaseRxTransferPayload
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3660   .text.canardHandleRxFrame:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:3667   .text.canardHandleRxFrame:0000000000000000 canardHandleRxFrame
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4323   .text.canardHandleRxFrame:000000000000038c $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4334   .text.canardGetPoolAllocatorStatistics:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4341   .text.canardGetPoolAllocatorStatistics:0000000000000000 canardGetPoolAllocatorStatistics
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4363   .text.canardConvertNativeFloatToFloat16:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4370   .text.canardConvertNativeFloatToFloat16:0000000000000000 canardConvertNativeFloatToFloat16
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4427   .text.canardConvertNativeFloatToFloat16:0000000000000050 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4432   .text.canardConvertFloat16ToNativeFloat:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4439   .text.canardConvertFloat16ToNativeFloat:0000000000000000 canardConvertFloat16ToNativeFloat
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4477   .text.canardConvertFloat16ToNativeFloat:0000000000000038 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4484   .rodata.__func__.6070:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4488   .rodata.__func__.6070:0000000000000000 __func__.6070
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4491   .rodata.__func__.6075:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4495   .rodata.__func__.6075:0000000000000000 __func__.6075
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4498   .rodata.__func__.6080:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4502   .rodata.__func__.6080:0000000000000000 __func__.6080
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4505   .rodata.__func__.6133:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4509   .rodata.__func__.6133:0000000000000000 __func__.6133
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4512   .rodata.__func__.6188:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4516   .rodata.__func__.6188:0000000000000000 __func__.6188
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4519   .rodata.__func__.6196:0000000000000000 $d
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s 			page 126


/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4523   .rodata.__func__.6196:0000000000000000 __func__.6196
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4526   .rodata.__func__.6250:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4530   .rodata.__func__.6250:0000000000000000 __func__.6250
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4533   .rodata.__func__.6259:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4537   .rodata.__func__.6259:0000000000000000 __func__.6259
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4540   .rodata.__func__.6277:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4544   .rodata.__func__.6277:0000000000000000 __func__.6277
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4547   .rodata.__func__.6302:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4551   .rodata.__func__.6302:0000000000000000 __func__.6302
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4554   .rodata.__func__.6378:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4558   .rodata.__func__.6378:0000000000000000 __func__.6378
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4561   .rodata.__func__.6395:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4565   .rodata.__func__.6395:0000000000000000 __func__.6395
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4568   .rodata.__func__.6421:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4572   .rodata.__func__.6421:0000000000000000 __func__.6421
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4575   .rodata.__func__.6472:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4579   .rodata.__func__.6472:0000000000000000 __func__.6472
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4582   .rodata.canardDecodeScalar.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4590   .rodata.canardEncodeScalar.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4597   .rodata.canardHandleRxFrame.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4607   .rodata.canardInit.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4611   .rodata.canardSetLocalNodeID.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4615   .rodata.copyBitArray.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4619   .rodata.descatterTransferPayload.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4645   .rodata.enqueueTxFrames.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4649   .rodata.freeBlock.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4653   .rodata.incrementTransferID.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4657   .rodata.prepareForNextTransfer.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4661   .rodata.pushTxQueue.str1.4:0000000000000000 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccUaGi47.s:4671   .rodata.swapByteOrder.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
__assert_func
memcpy
memset
