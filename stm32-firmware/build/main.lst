ARM GAS  /tmp/ccnv1VBl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.shouldAcceptTransfer,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	shouldAcceptTransfer:
  26              	.LVL0:
  27              	.LFB127:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccnv1VBl.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "adc.h"
  44:Src/main.c    **** #include "can.h"
  45:Src/main.c    **** #include "usart.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** #include <canard.h>
  49:Src/main.c    **** #include <canard_stm32.h>
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PTD */
  58:Src/main.c    **** typedef struct
  59:Src/main.c    **** {
  60:Src/main.c    ****     uint8_t* name;
  61:Src/main.c    ****     int64_t val;
  62:Src/main.c    ****     int64_t min;
  63:Src/main.c    ****     int64_t max;
  64:Src/main.c    ****     int64_t defval;
  65:Src/main.c    **** } param_t;
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PTD */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  70:Src/main.c    **** /* USER CODE BEGIN PD */
  71:Src/main.c    **** 
  72:Src/main.c    **** /*
  73:Src/main.c    ****  * Application constants
  74:Src/main.c    ****  */
  75:Src/main.c    **** #define APP_VERSION_MAJOR                                           1
  76:Src/main.c    **** #define APP_VERSION_MINOR                                           0
  77:Src/main.c    **** #define APP_NODE_NAME                                               "ch.octanis.oibus.mosfet-driver
  78:Src/main.c    **** 
  79:Src/main.c    **** 
  80:Src/main.c    **** /*
  81:Src/main.c    ****  * Some useful constants defined by the UAVCAN specification.
  82:Src/main.c    ****  * Data type signature values can be easily obtained with the script show_data_type_info.py
  83:Src/main.c    ****  */
  84:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_DATA_TYPE_ID                      1
  85:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_DATA_TYPE_SIGNATURE               0x0b2a812620a11d40
  86:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_RANDOM_TIMEOUT_RANGE_USEC         400000UL
  87:Src/main.c    **** #define UAVCAN_NODE_ID_ALLOCATION_REQUEST_DELAY_OFFSET_USEC         600000UL
ARM GAS  /tmp/ccnv1VBl.s 			page 3


  88:Src/main.c    **** 
  89:Src/main.c    **** #define UAVCAN_NODE_STATUS_MESSAGE_SIZE                             7
  90:Src/main.c    **** #define UAVCAN_NODE_STATUS_DATA_TYPE_ID                             341
  91:Src/main.c    **** #define UAVCAN_NODE_STATUS_DATA_TYPE_SIGNATURE                      0x0f0868d0c1a7c6f1
  92:Src/main.c    **** 
  93:Src/main.c    **** #define UAVCAN_NODE_HEALTH_OK                                       0
  94:Src/main.c    **** #define UAVCAN_NODE_HEALTH_WARNING                                  1
  95:Src/main.c    **** #define UAVCAN_NODE_HEALTH_ERROR                                    2
  96:Src/main.c    **** #define UAVCAN_NODE_HEALTH_CRITICAL                                 3
  97:Src/main.c    **** 
  98:Src/main.c    **** #define UAVCAN_NODE_MODE_OPERATIONAL                                0
  99:Src/main.c    **** #define UAVCAN_NODE_MODE_INITIALIZATION                             1
 100:Src/main.c    **** 
 101:Src/main.c    **** #define UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE                      ((3015 + 7) / 8)
 102:Src/main.c    **** #define UAVCAN_GET_NODE_INFO_DATA_TYPE_SIGNATURE                    0xee468a8121c46a9e
 103:Src/main.c    **** #define UAVCAN_GET_NODE_INFO_DATA_TYPE_ID                           1
 104:Src/main.c    **** 
 105:Src/main.c    **** #define UAVCAN_PROTOCOL_PARAM_GETSET_MAX_SIZE 			    ((2967+ 7) / 8)
 106:Src/main.c    **** #define UAVCAN_PROTOCOL_PARAM_GETSET_SIGNATURE			    0xa7b622f939d1a4d5
 107:Src/main.c    **** #define UAVCAN_PROTOCOL_PARAM_GETSET_ID				    11
 108:Src/main.c    **** 
 109:Src/main.c    **** 
 110:Src/main.c    **** 
 111:Src/main.c    **** #define UNIQUE_ID_LENGTH_BYTES 16
 112:Src/main.c    **** 
 113:Src/main.c    **** #define CANARD_SPIN_PERIOD   1000
 114:Src/main.c    **** 
 115:Src/main.c    **** #define FIRMWARE_GIT_HASH					    0x875ac4f289834e31f6e09c1886e38172ea73011c
 116:Src/main.c    **** #define UAVCAN_NODE_ID						    10
 117:Src/main.c    **** 
 118:Src/main.c    **** 
 119:Src/main.c    **** 
 120:Src/main.c    **** 
 121:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
 122:Src/main.c    **** /* USER CODE BEGIN PM */
 123:Src/main.c    **** #define ARRAY_SIZE(x) ((sizeof(x)/sizeof(0[x])) / ((size_t)(!(sizeof(x) % sizeof(0[x])))))
 124:Src/main.c    **** 
 125:Src/main.c    **** 
 126:Src/main.c    **** /*USER CODE END PM */
 127:Src/main.c    **** 
 128:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 129:Src/main.c    **** 
 130:Src/main.c    **** /* USER CODE BEGIN PV */
 131:Src/main.c    **** static param_t parameters[] =
 132:Src/main.c    **** {
 133:Src/main.c    **** 	    {"drivers", 0, 0b0000000000, 0b1111111111, 0b0000000000}
 134:Src/main.c    **** };
 135:Src/main.c    **** /* USER CODE END PV */
 136:Src/main.c    **** 
 137:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 138:Src/main.c    **** void SystemClock_Config(void);
 139:Src/main.c    **** 
 140:Src/main.c    **** 
 141:Src/main.c    **** 
 142:Src/main.c    **** 
 143:Src/main.c    **** /*
 144:Src/main.c    ****  * Node status variables
ARM GAS  /tmp/ccnv1VBl.s 			page 4


 145:Src/main.c    ****  */
 146:Src/main.c    **** static uint8_t node_health = UAVCAN_NODE_HEALTH_OK;
 147:Src/main.c    **** static uint8_t node_mode   = UAVCAN_NODE_MODE_INITIALIZATION;
 148:Src/main.c    **** 
 149:Src/main.c    **** 
 150:Src/main.c    **** static uint16_t makeNodeInfoMessage(uint8_t buffer[UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE]);
 151:Src/main.c    **** static void makeNodeStatusMessage(uint8_t buffer[UAVCAN_NODE_STATUS_MESSAGE_SIZE]);
 152:Src/main.c    **** 
 153:Src/main.c    **** static bool shouldAcceptTransfer(const CanardInstance* ins,
 154:Src/main.c    ****                                  uint64_t* out_data_type_signature,
 155:Src/main.c    ****                                  uint16_t data_type_id,
 156:Src/main.c    ****                                  CanardTransferType transfer_type,
 157:Src/main.c    ****                                  uint8_t source_node_id);
 158:Src/main.c    **** static void readUniqueID(uint8_t* out_uid);
 159:Src/main.c    **** 
 160:Src/main.c    **** static uint16_t encodeParamCanard(param_t * p, uint8_t * buffer);
 161:Src/main.c    **** 
 162:Src/main.c    **** static void getNodeInfoHandleCanard(CanardRxTransfer* transfer);
 163:Src/main.c    **** void getsetHandleCanard(CanardRxTransfer* transfer);
 164:Src/main.c    **** static inline param_t* getParamByIndex(uint16_t index);
 165:Src/main.c    **** static inline param_t* getParamByName(uint8_t * name);
 166:Src/main.c    **** 
 167:Src/main.c    **** 
 168:Src/main.c    **** 
 169:Src/main.c    **** /////////////////////////////////////////////////////////////////////
 170:Src/main.c    **** 
 171:Src/main.c    **** 
 172:Src/main.c    **** static CanardInstance g_canard;             // The library instance
 173:Src/main.c    **** static uint8_t g_canard_memory_pool[1024];  // Arena for memory allocation, used by the library
 174:Src/main.c    **** static uint32_t g_uptime = 0;
 175:Src/main.c    **** 
 176:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 177:Src/main.c    **** /* USER CODE BEGIN 0 */
 178:Src/main.c    **** bool shouldAcceptTransfer(const CanardInstance* ins,
 179:Src/main.c    ****                           uint64_t* out_data_type_signature,
 180:Src/main.c    ****                           uint16_t data_type_id,
 181:Src/main.c    ****                           CanardTransferType transfer_type,
 182:Src/main.c    ****                           uint8_t source_node_id)
 183:Src/main.c    **** {
  29              		.loc 1 183 1 view -0
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 184:Src/main.c    ****     if ((transfer_type == CanardTransferTypeRequest) &&
  34              		.loc 1 184 5 view .LVU1
  35              		.loc 1 184 8 is_stmt 0 view .LVU2
  36 0000 012B     		cmp	r3, #1
  37 0002 03D0     		beq	.L6
  38              	.L2:
 185:Src/main.c    ****         (data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 186:Src/main.c    ****     {
 187:Src/main.c    ****         *out_data_type_signature = UAVCAN_GET_NODE_INFO_DATA_TYPE_SIGNATURE;
 188:Src/main.c    ****         return true;
 189:Src/main.c    ****     }
 190:Src/main.c    **** 
 191:Src/main.c    ****     if ((transfer_type == CanardTransferTypeRequest) &&
ARM GAS  /tmp/ccnv1VBl.s 			page 5


  39              		.loc 1 191 5 is_stmt 1 view .LVU3
  40              		.loc 1 191 8 is_stmt 0 view .LVU4
  41 0004 012B     		cmp	r3, #1
  42 0006 0AD0     		beq	.L7
 192:Src/main.c    ****         (data_type_id ==  UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 193:Src/main.c    ****     {
 194:Src/main.c    ****         *out_data_type_signature =  UAVCAN_PROTOCOL_PARAM_GETSET_SIGNATURE;
 195:Src/main.c    ****         return true;
 196:Src/main.c    ****     }
 197:Src/main.c    **** 
 198:Src/main.c    **** 	
 199:Src/main.c    **** 
 200:Src/main.c    **** 
 201:Src/main.c    ****     return false;
  43              		.loc 1 201 12 view .LVU5
  44 0008 0020     		movs	r0, #0
  45              	.LVL1:
  46              		.loc 1 201 12 view .LVU6
  47 000a 7047     		bx	lr
  48              	.LVL2:
  49              	.L6:
 184:Src/main.c    ****         (data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
  50              		.loc 1 184 54 discriminator 1 view .LVU7
  51 000c 012A     		cmp	r2, #1
  52 000e F9D1     		bne	.L2
 187:Src/main.c    ****         return true;
  53              		.loc 1 187 9 is_stmt 1 view .LVU8
 187:Src/main.c    ****         return true;
  54              		.loc 1 187 34 is_stmt 0 view .LVU9
  55 0010 09A3     		adr	r3, .L9
  56 0012 D3E90023 		ldrd	r2, [r3]
  57              	.LVL3:
 187:Src/main.c    ****         return true;
  58              		.loc 1 187 34 view .LVU10
  59 0016 C1E90023 		strd	r2, [r1]
 188:Src/main.c    ****     }
  60              		.loc 1 188 9 is_stmt 1 view .LVU11
 188:Src/main.c    ****     }
  61              		.loc 1 188 16 is_stmt 0 view .LVU12
  62 001a 0120     		movs	r0, #1
  63              	.LVL4:
 188:Src/main.c    ****     }
  64              		.loc 1 188 16 view .LVU13
  65 001c 7047     		bx	lr
  66              	.LVL5:
  67              	.L7:
 191:Src/main.c    ****         (data_type_id ==  UAVCAN_PROTOCOL_PARAM_GETSET_ID))
  68              		.loc 1 191 54 discriminator 1 view .LVU14
  69 001e 0B2A     		cmp	r2, #11
  70 0020 01D0     		beq	.L8
  71              		.loc 1 201 12 view .LVU15
  72 0022 0020     		movs	r0, #0
  73              	.LVL6:
 202:Src/main.c    **** }
  74              		.loc 1 202 1 view .LVU16
  75 0024 7047     		bx	lr
  76              	.LVL7:
ARM GAS  /tmp/ccnv1VBl.s 			page 6


  77              	.L8:
 194:Src/main.c    ****         return true;
  78              		.loc 1 194 9 is_stmt 1 view .LVU17
 194:Src/main.c    ****         return true;
  79              		.loc 1 194 34 is_stmt 0 view .LVU18
  80 0026 06A3     		adr	r3, .L9+8
  81 0028 D3E90023 		ldrd	r2, [r3]
  82              	.LVL8:
 194:Src/main.c    ****         return true;
  83              		.loc 1 194 34 view .LVU19
  84 002c C1E90023 		strd	r2, [r1]
 195:Src/main.c    ****     }
  85              		.loc 1 195 9 is_stmt 1 view .LVU20
 195:Src/main.c    ****     }
  86              		.loc 1 195 16 is_stmt 0 view .LVU21
  87 0030 0120     		movs	r0, #1
  88              	.LVL9:
 195:Src/main.c    ****     }
  89              		.loc 1 195 16 view .LVU22
  90 0032 7047     		bx	lr
  91              	.L10:
  92 0034 AFF30080 		.align	3
  93              	.L9:
  94 0038 9E6AC421 		.word	566520478
  95 003c 818A46EE 		.word	-297366911
  96 0040 D5A4D139 		.word	970040533
  97 0044 F922B6A7 		.word	-1481235719
  98              		.cfi_endproc
  99              	.LFE127:
 101              		.section	.text.readUniqueID,"ax",%progbits
 102              		.align	1
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	readUniqueID:
 109              	.LVL10:
 110              	.LFB132:
 203:Src/main.c    **** 
 204:Src/main.c    **** static void onTransferReceived(CanardInstance* ins, CanardRxTransfer* transfer)
 205:Src/main.c    **** {
 206:Src/main.c    ****     if ((transfer->transfer_type == CanardTransferTypeRequest) &&
 207:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 208:Src/main.c    ****     {    
 209:Src/main.c    **** 	    getNodeInfoHandleCanard(transfer);
 210:Src/main.c    ****     }
 211:Src/main.c    **** 
 212:Src/main.c    **** 
 213:Src/main.c    **** 
 214:Src/main.c    ****     if ((transfer->transfer_type == CanardTransferTypeRequest) &&
 215:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 216:Src/main.c    ****     {       
 217:Src/main.c    ****             getsetHandleCanard(transfer); 
 218:Src/main.c    ****     }
 219:Src/main.c    ****     
 220:Src/main.c    **** 
 221:Src/main.c    **** }
ARM GAS  /tmp/ccnv1VBl.s 			page 7


 222:Src/main.c    **** 
 223:Src/main.c    **** static void swInit(void)
 224:Src/main.c    **** {
 225:Src/main.c    ****     CanardSTM32CANTimings timings;
 226:Src/main.c    ****     int result = canardSTM32ComputeCANTimings(HAL_RCC_GetPCLK1Freq(), 1000000, &timings);
 227:Src/main.c    ****     if (result)
 228:Src/main.c    ****     {
 229:Src/main.c    ****         //__ASM volatile("BKPT #01");
 230:Src/main.c    ****     }
 231:Src/main.c    ****     canardSTM32Init(&timings, CanardSTM32IfaceModeNormal);
 232:Src/main.c    ****     result = canardSTM32Init(&timings, CanardSTM32IfaceModeNormal);
 233:Src/main.c    ****     if (result)
 234:Src/main.c    ****     {
 235:Src/main.c    ****     
 236:Src/main.c    **** /*	      for(int i=0;i<10;i++){
 237:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 238:Src/main.c    ****                              HAL_Delay(15);
 239:Src/main.c    ****                      }
 240:Src/main.c    **** */                                                                                  
 241:Src/main.c    ****              
 242:Src/main.c    **** 
 243:Src/main.c    **** 	    
 244:Src/main.c    **** 	    //__ASM volatile("BKPT #01");
 245:Src/main.c    ****     }
 246:Src/main.c    **** 
 247:Src/main.c    ****     canardInit(&g_canard,                         // Uninitialized library instance
 248:Src/main.c    ****                g_canard_memory_pool,              // Raw memory chunk used for dynamic allocation
 249:Src/main.c    ****                sizeof(g_canard_memory_pool),      // Size of the above, in bytes
 250:Src/main.c    ****                onTransferReceived,                // Callback, see CanardOnTransferReception
 251:Src/main.c    ****                shouldAcceptTransfer,              // Callback, see CanardShouldAcceptTransfer
 252:Src/main.c    ****                NULL);
 253:Src/main.c    **** 
 254:Src/main.c    ****     canardSetLocalNodeID(&g_canard, UAVCAN_NODE_ID);
 255:Src/main.c    **** }
 256:Src/main.c    **** 
 257:Src/main.c    **** 
 258:Src/main.c    **** 
 259:Src/main.c    **** static void spinCanard(void)
 260:Src/main.c    **** {
 261:Src/main.c    **** 
 262:Src/main.c    **** 
 263:Src/main.c    **** 	static uint32_t spin_time = 0;
 264:Src/main.c    ****     if (HAL_GetTick() < spin_time + CANARD_SPIN_PERIOD) {
 265:Src/main.c    **** 	    return; }  // rate limiting
 266:Src/main.c    ****     spin_time = HAL_GetTick();
 267:Src/main.c    ****          HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 268:Src/main.c    **** 
 269:Src/main.c    ****     
 270:Src/main.c    ****     
 271:Src/main.c    **** 
 272:Src/main.c    ****     uint8_t buffer[UAVCAN_NODE_STATUS_MESSAGE_SIZE];
 273:Src/main.c    ****     static uint8_t transfer_id = 0;                          // This variable MUST BE STATIC; refer
 274:Src/main.c    ****      HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 275:Src/main.c    **** 
 276:Src/main.c    ****      makeNodeStatusMessage(buffer);
 277:Src/main.c    **** 
 278:Src/main.c    ****      canardBroadcast(&g_canard,
ARM GAS  /tmp/ccnv1VBl.s 			page 8


 279:Src/main.c    ****                     UAVCAN_NODE_STATUS_DATA_TYPE_SIGNATURE,
 280:Src/main.c    ****                     UAVCAN_NODE_STATUS_DATA_TYPE_ID,
 281:Src/main.c    ****                     &transfer_id,
 282:Src/main.c    ****                     CANARD_TRANSFER_PRIORITY_LOW,
 283:Src/main.c    ****                     buffer,
 284:Src/main.c    ****                     UAVCAN_NODE_STATUS_MESSAGE_SIZE);
 285:Src/main.c    **** 
 286:Src/main.c    ****   /*   if(cb > 0){     
 287:Src/main.c    **** 	     for(int i=0;i<10;i++){
 288:Src/main.c    **** 	                     HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 289:Src/main.c    **** 			     HAL_Delay(300);
 290:Src/main.c    **** 	     }
 291:Src/main.c    ****      }
 292:Src/main.c    ****      
 293:Src/main.c    ****      if(cb <= 0){
 294:Src/main.c    ****              for(int i=0;i<10;i++){                                             
 295:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 296:Src/main.c    ****                              HAL_Delay(150);
 297:Src/main.c    ****              }        
 298:Src/main.c    ****      }                                                                          
 299:Src/main.c    ****      
 300:Src/main.c    **** */
 301:Src/main.c    **** 
 302:Src/main.c    **** 
 303:Src/main.c    **** 
 304:Src/main.c    **** }
 305:Src/main.c    **** 
 306:Src/main.c    **** 
 307:Src/main.c    **** 
 308:Src/main.c    **** static void makeNodeStatusMessage(uint8_t buffer[UAVCAN_NODE_STATUS_MESSAGE_SIZE])
 309:Src/main.c    **** {
 310:Src/main.c    ****     const uint8_t node_health = UAVCAN_NODE_HEALTH_OK;
 311:Src/main.c    ****     const uint8_t node_mode   = UAVCAN_NODE_MODE_OPERATIONAL;
 312:Src/main.c    ****     memset(buffer, 0, UAVCAN_NODE_STATUS_MESSAGE_SIZE);
 313:Src/main.c    ****     const uint32_t uptime_sec = HAL_GetTick() / 1000;
 314:Src/main.c    ****     canardEncodeScalar(buffer,  0, 32, &uptime_sec);
 315:Src/main.c    ****     canardEncodeScalar(buffer, 32,  2, &node_health);
 316:Src/main.c    ****     canardEncodeScalar(buffer, 34,  3, &node_mode);
 317:Src/main.c    **** }
 318:Src/main.c    **** 
 319:Src/main.c    **** 
 320:Src/main.c    **** 
 321:Src/main.c    **** 
 322:Src/main.c    **** static void readUniqueID(uint8_t* out_uid)
 323:Src/main.c    **** {
 111              		.loc 1 323 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 116              		.loc 1 324 5 view .LVU24
 117              	.LBB12:
 118              		.loc 1 324 10 view .LVU25
 119              		.loc 1 324 18 is_stmt 0 view .LVU26
 120 0000 0023     		movs	r3, #0
 121              	.LVL11:
ARM GAS  /tmp/ccnv1VBl.s 			page 9


 122              	.L12:
 123              		.loc 1 324 5 discriminator 1 view .LVU27
 124 0002 0F2B     		cmp	r3, #15
 125 0004 03D8     		bhi	.L14
 325:Src/main.c    ****     {
 326:Src/main.c    ****         out_uid[i] = i;
 126              		.loc 1 326 9 is_stmt 1 discriminator 3 view .LVU28
 127              		.loc 1 326 20 is_stmt 0 discriminator 3 view .LVU29
 128 0006 C354     		strb	r3, [r0, r3]
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 129              		.loc 1 324 54 discriminator 3 view .LVU30
 130 0008 0133     		adds	r3, r3, #1
 131              	.LVL12:
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 132              		.loc 1 324 54 discriminator 3 view .LVU31
 133 000a DBB2     		uxtb	r3, r3
 134              	.LVL13:
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 135              		.loc 1 324 54 discriminator 3 view .LVU32
 136 000c F9E7     		b	.L12
 137              	.L14:
 324:Src/main.c    ****     for (uint8_t i = 0; i < UNIQUE_ID_LENGTH_BYTES; i++)
 138              		.loc 1 324 54 discriminator 3 view .LVU33
 139              	.LBE12:
 327:Src/main.c    ****     }
 328:Src/main.c    **** }
 140              		.loc 1 328 1 view .LVU34
 141 000e 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE132:
 145              		.section	.text.makeNodeStatusMessage,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	makeNodeStatusMessage:
 153              	.LVL14:
 154              	.LFB131:
 309:Src/main.c    ****     const uint8_t node_health = UAVCAN_NODE_HEALTH_OK;
 155              		.loc 1 309 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 8
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 309:Src/main.c    ****     const uint8_t node_health = UAVCAN_NODE_HEALTH_OK;
 159              		.loc 1 309 1 is_stmt 0 view .LVU36
 160 0000 30B5     		push	{r4, r5, lr}
 161              	.LCFI0:
 162              		.cfi_def_cfa_offset 12
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              	.LCFI1:
 168              		.cfi_def_cfa_offset 24
 169 0004 0446     		mov	r4, r0
 310:Src/main.c    ****     const uint8_t node_mode   = UAVCAN_NODE_MODE_OPERATIONAL;
ARM GAS  /tmp/ccnv1VBl.s 			page 10


 170              		.loc 1 310 5 is_stmt 1 view .LVU37
 310:Src/main.c    ****     const uint8_t node_mode   = UAVCAN_NODE_MODE_OPERATIONAL;
 171              		.loc 1 310 19 is_stmt 0 view .LVU38
 172 0006 0025     		movs	r5, #0
 173 0008 8DF80750 		strb	r5, [sp, #7]
 311:Src/main.c    ****     memset(buffer, 0, UAVCAN_NODE_STATUS_MESSAGE_SIZE);
 174              		.loc 1 311 5 is_stmt 1 view .LVU39
 311:Src/main.c    ****     memset(buffer, 0, UAVCAN_NODE_STATUS_MESSAGE_SIZE);
 175              		.loc 1 311 19 is_stmt 0 view .LVU40
 176 000c 8DF80650 		strb	r5, [sp, #6]
 312:Src/main.c    ****     const uint32_t uptime_sec = HAL_GetTick() / 1000;
 177              		.loc 1 312 5 is_stmt 1 view .LVU41
 178 0010 0560     		str	r5, [r0]	@ unaligned
 179 0012 C0F80350 		str	r5, [r0, #3]	@ unaligned
 313:Src/main.c    ****     canardEncodeScalar(buffer,  0, 32, &uptime_sec);
 180              		.loc 1 313 5 view .LVU42
 313:Src/main.c    ****     canardEncodeScalar(buffer,  0, 32, &uptime_sec);
 181              		.loc 1 313 33 is_stmt 0 view .LVU43
 182 0016 FFF7FEFF 		bl	HAL_GetTick
 183              	.LVL15:
 313:Src/main.c    ****     canardEncodeScalar(buffer,  0, 32, &uptime_sec);
 184              		.loc 1 313 47 view .LVU44
 185 001a 0D4B     		ldr	r3, .L17
 186 001c A3FB0030 		umull	r3, r0, r3, r0
 187 0020 8009     		lsrs	r0, r0, #6
 313:Src/main.c    ****     canardEncodeScalar(buffer,  0, 32, &uptime_sec);
 188              		.loc 1 313 20 view .LVU45
 189 0022 0090     		str	r0, [sp]
 314:Src/main.c    ****     canardEncodeScalar(buffer, 32,  2, &node_health);
 190              		.loc 1 314 5 is_stmt 1 view .LVU46
 191 0024 6B46     		mov	r3, sp
 192 0026 2022     		movs	r2, #32
 193 0028 2946     		mov	r1, r5
 194 002a 2046     		mov	r0, r4
 195 002c FFF7FEFF 		bl	canardEncodeScalar
 196              	.LVL16:
 315:Src/main.c    ****     canardEncodeScalar(buffer, 34,  3, &node_mode);
 197              		.loc 1 315 5 view .LVU47
 198 0030 0DF10703 		add	r3, sp, #7
 199 0034 0222     		movs	r2, #2
 200 0036 2021     		movs	r1, #32
 201 0038 2046     		mov	r0, r4
 202 003a FFF7FEFF 		bl	canardEncodeScalar
 203              	.LVL17:
 316:Src/main.c    **** }
 204              		.loc 1 316 5 view .LVU48
 205 003e 0DF10603 		add	r3, sp, #6
 206 0042 0322     		movs	r2, #3
 207 0044 2221     		movs	r1, #34
 208 0046 2046     		mov	r0, r4
 209 0048 FFF7FEFF 		bl	canardEncodeScalar
 210              	.LVL18:
 317:Src/main.c    **** 
 211              		.loc 1 317 1 is_stmt 0 view .LVU49
 212 004c 03B0     		add	sp, sp, #12
 213              	.LCFI2:
 214              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccnv1VBl.s 			page 11


 215              		@ sp needed
 216 004e 30BD     		pop	{r4, r5, pc}
 217              	.LVL19:
 218              	.L18:
 317:Src/main.c    **** 
 219              		.loc 1 317 1 view .LVU50
 220              		.align	2
 221              	.L17:
 222 0050 D34D6210 		.word	274877907
 223              		.cfi_endproc
 224              	.LFE131:
 226              		.section	.text.makeNodeInfoMessage,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv4-sp-d16
 233              	makeNodeInfoMessage:
 234              	.LVL20:
 235              	.LFB139:
 329:Src/main.c    **** 
 330:Src/main.c    **** static void sendCanard(void)
 331:Src/main.c    **** {
 332:Src/main.c    ****     const CanardCANFrame* txf = canardPeekTxQueue(&g_canard);
 333:Src/main.c    **** while(txf)
 334:Src/main.c    ****     {
 335:Src/main.c    ****         const int tx_res = canardSTM32Transmit(txf);
 336:Src/main.c    **** 	
 337:Src/main.c    **** 	/*if(tx_res >= 0){
 338:Src/main.c    **** 	for(int i=0;i<10;i++){
 339:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 340:Src/main.c    ****                              HAL_Delay(70);
 341:Src/main.c    ****                      }
 342:Src/main.c    **** 	}                                                           
 343:Src/main.c    ****              
 344:Src/main.c    **** 
 345:Src/main.c    ****         if (tx_res < 0)         // Failure - drop the frame and report
 346:Src/main.c    ****         {
 347:Src/main.c    ****         
 348:Src/main.c    **** 		
 349:Src/main.c    **** 	             for(int i=0;i<10;i++){                                             
 350:Src/main.c    ****                              HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 351:Src/main.c    ****                              HAL_Delay(555);
 352:Src/main.c    ****         	     }        
 353:Src/main.c    ****                                                                           
 354:Src/main.c    ****      
 355:Src/main.c    **** 
 356:Src/main.c    **** 		
 357:Src/main.c    **** 		//__ASM volatile("BKPT #01");   // TODO: handle the error properly
 358:Src/main.c    ****         }
 359:Src/main.c    **** 	*/
 360:Src/main.c    **** 
 361:Src/main.c    ****         if(tx_res > 0)
 362:Src/main.c    ****         {
 363:Src/main.c    ****             canardPopTxQueue(&g_canard);
 364:Src/main.c    ****         }
 365:Src/main.c    ****         txf = canardPeekTxQueue(&g_canard);
ARM GAS  /tmp/ccnv1VBl.s 			page 12


 366:Src/main.c    ****     }
 367:Src/main.c    **** }
 368:Src/main.c    **** 
 369:Src/main.c    **** static void receiveCanard(void)
 370:Src/main.c    **** {
 371:Src/main.c    ****     CanardCANFrame rx_frame;
 372:Src/main.c    ****     int res = canardSTM32Receive(&rx_frame);
 373:Src/main.c    ****     if(res)
 374:Src/main.c    **** {
 375:Src/main.c    ****         canardHandleRxFrame(&g_canard, &rx_frame, HAL_GetTick() * 1000);
 376:Src/main.c    ****     }
 377:Src/main.c    **** }
 378:Src/main.c    **** 
 379:Src/main.c    **** 
 380:Src/main.c    **** /* USER CODE END 0 */
 381:Src/main.c    **** 
 382:Src/main.c    **** /**
 383:Src/main.c    ****   * @brief  The application entry point.
 384:Src/main.c    ****   * @retval int
 385:Src/main.c    ****   */
 386:Src/main.c    **** 
 387:Src/main.c    **** /**
 388:Src/main.c    ****   * @brief System Clock Configuration
 389:Src/main.c    ****   * @retval None
 390:Src/main.c    ****   */
 391:Src/main.c    **** void SystemClock_Config(void)
 392:Src/main.c    **** {
 393:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 394:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 395:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 396:Src/main.c    **** 
 397:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 398:Src/main.c    ****   */
 399:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 400:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 401:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 402:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 403:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 404:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 405:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 406:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 407:Src/main.c    ****   {
 408:Src/main.c    ****     Error_Handler();
 409:Src/main.c    ****   }
 410:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 411:Src/main.c    ****   */
 412:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 413:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 414:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 415:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 416:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 417:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 418:Src/main.c    **** 
 419:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 420:Src/main.c    ****   {
 421:Src/main.c    ****     Error_Handler();
 422:Src/main.c    ****   }
ARM GAS  /tmp/ccnv1VBl.s 			page 13


 423:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_ADC12;
 424:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 425:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 426:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 427:Src/main.c    ****   {
 428:Src/main.c    ****     Error_Handler();
 429:Src/main.c    ****   }
 430:Src/main.c    **** }
 431:Src/main.c    **** 
 432:Src/main.c    **** /* USER CODE BEGIN 4 */
 433:Src/main.c    **** void setDriver(GPIO_TypeDef * gpioBank, int pin, int driverBit, int driverState){              
 434:Src/main.c    ****       if(driverState & (1<<driverBit)){
 435:Src/main.c    ****          HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_SET);
 436:Src/main.c    ****       }else{          
 437:Src/main.c    ****         HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_RESET);   
 438:Src/main.c    ****       }                           
 439:Src/main.c    **** }
 440:Src/main.c    **** 
 441:Src/main.c    **** 
 442:Src/main.c    **** 
 443:Src/main.c    **** int main(void)
 444:Src/main.c    **** {
 445:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 446:Src/main.c    ****   HAL_Init();
 447:Src/main.c    ****  
 448:Src/main.c    ****   /* Configure the system clock */
 449:Src/main.c    ****   SystemClock_Config();
 450:Src/main.c    ****   SysTick_Config(SystemCoreClock / 1000); // To make systick event happen every 1 ms
 451:Src/main.c    **** 
 452:Src/main.c    ****   /* Initialize all configured peripherals */
 453:Src/main.c    ****   MX_GPIO_Init();
 454:Src/main.c    ****   MX_ADC1_Init();
 455:Src/main.c    ****   MX_ADC2_Init();
 456:Src/main.c    ****   MX_CAN_Init();
 457:Src/main.c    ****   MX_USART3_UART_Init();
 458:Src/main.c    ****   
 459:Src/main.c    ****   
 460:Src/main.c    ****   //turn on TCAN330
 461:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, CAN_S_Pin, GPIO_PIN_RESET);
 462:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, CAN_SHTD_Pin, GPIO_PIN_RESET);
 463:Src/main.c    **** 
 464:Src/main.c    ****   for (int i=0; i<6;i++){
 465:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 466:Src/main.c    **** 	  HAL_Delay(50);
 467:Src/main.c    ****   }
 468:Src/main.c    **** 
 469:Src/main.c    ****   swInit();
 470:Src/main.c    ****   /* USER CODE END 2 */
 471:Src/main.c    **** 
 472:Src/main.c    ****   /* Infinite loop */
 473:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 474:Src/main.c    ****   param_t* p = NULL;
 475:Src/main.c    **** 
 476:Src/main.c    ****   while (1)
 477:Src/main.c    ****   {
 478:Src/main.c    ****   //   HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 479:Src/main.c    ****      // HAL_Delay(100);
ARM GAS  /tmp/ccnv1VBl.s 			page 14


 480:Src/main.c    ****       sendCanard();
 481:Src/main.c    ****       receiveCanard();
 482:Src/main.c    ****       spinCanard();
 483:Src/main.c    ****      
 484:Src/main.c    ****       //set switches 
 485:Src/main.c    ****       p = getParamByName("drivers");
 486:Src/main.c    **** 
 487:Src/main.c    ****       setDriver(GPIOB, In1_Pin, 0, p->val);
 488:Src/main.c    ****       setDriver(GPIOB, In2_Pin, 1, p->val);
 489:Src/main.c    ****       setDriver(GPIOA, In3_Pin, 2, p->val);
 490:Src/main.c    ****       setDriver(GPIOA, In4_Pin, 3, p->val);
 491:Src/main.c    ****       setDriver(GPIOA, In5_Pin, 4, p->val);
 492:Src/main.c    ****       setDriver(GPIOA, In6_Pin, 5, p->val);
 493:Src/main.c    ****       setDriver(GPIOA, In7_Pin, 6, p->val);
 494:Src/main.c    ****       setDriver(GPIOC, In8_Pin, 7, p->val);
 495:Src/main.c    ****       setDriver(GPIOB, In9_Pin, 8, p->val);
 496:Src/main.c    ****       setDriver(GPIOA, In10_Pin, 9, p->val);
 497:Src/main.c    ****   
 498:Src/main.c    ****   }
 499:Src/main.c    **** 
 500:Src/main.c    **** }
 501:Src/main.c    **** 
 502:Src/main.c    **** 
 503:Src/main.c    **** 
 504:Src/main.c    **** void getsetHandleCanard(CanardRxTransfer* transfer){
 505:Src/main.c    **** 
 506:Src/main.c    ****     uint16_t index = 0xFFFF;
 507:Src/main.c    ****     uint8_t tag    = 0;
 508:Src/main.c    ****     int offset     = 0;
 509:Src/main.c    ****     int64_t val    = 0;
 510:Src/main.c    ****  
 511:Src/main.c    ****     canardDecodeScalar(transfer, offset,  13, false, &index);
 512:Src/main.c    ****     offset += 13;
 513:Src/main.c    ****     canardDecodeScalar(transfer, offset, 3, false, &tag);
 514:Src/main.c    ****     offset += 3;
 515:Src/main.c    ****  
 516:Src/main.c    ****     if (tag == 1)
 517:Src/main.c    ****     {
 518:Src/main.c    ****         canardDecodeScalar(transfer, offset, 64, false, &val);
 519:Src/main.c    ****         offset += 64;
 520:Src/main.c    ****     }
 521:Src/main.c    ****  
 522:Src/main.c    ****     uint16_t n = transfer->payload_len - offset / 8 ;
 523:Src/main.c    ****     uint8_t name[16] = "";
 524:Src/main.c    ****     for (int i = 0; i < n; i++)
 525:Src/main.c    ****     {
 526:Src/main.c    ****         canardDecodeScalar(transfer, offset, 8, false, &name[i]);
 527:Src/main.c    ****         offset += 8;
 528:Src/main.c    ****     }
 529:Src/main.c    ****  
 530:Src/main.c    ****     param_t* p = NULL;
 531:Src/main.c    ****  
 532:Src/main.c    ****     if (strlen((char const*)name))
 533:Src/main.c    ****     {
 534:Src/main.c    ****         p = getParamByName(name);
 535:Src/main.c    ****     }
 536:Src/main.c    ****     else
ARM GAS  /tmp/ccnv1VBl.s 			page 15


 537:Src/main.c    ****     {
 538:Src/main.c    ****         p = getParamByIndex(index);
 539:Src/main.c    ****     }
 540:Src/main.c    ****  
 541:Src/main.c    ****     if ((p)&&(tag == 1))
 542:Src/main.c    ****     {
 543:Src/main.c    ****         p->val = val;
 544:Src/main.c    ****     }
 545:Src/main.c    ****  
 546:Src/main.c    ****     uint8_t  buffer[64] = "";
 547:Src/main.c    ****     uint16_t len = encodeParamCanard(p, buffer);
 548:Src/main.c    ****     int result = canardRequestOrRespond(&g_canard,
 549:Src/main.c    ****                                         transfer->source_node_id,
 550:Src/main.c    ****                                         UAVCAN_PROTOCOL_PARAM_GETSET_SIGNATURE,
 551:Src/main.c    ****                                         UAVCAN_PROTOCOL_PARAM_GETSET_ID,
 552:Src/main.c    ****                                         &transfer->transfer_id,
 553:Src/main.c    ****                                         transfer->priority,
 554:Src/main.c    ****                                         CanardResponse,
 555:Src/main.c    ****                                         &buffer[0],
 556:Src/main.c    ****                                         (uint16_t)len);
 557:Src/main.c    ****  
 558:Src/main.c    **** 
 559:Src/main.c    **** 
 560:Src/main.c    **** 
 561:Src/main.c    **** 
 562:Src/main.c    **** }
 563:Src/main.c    **** 
 564:Src/main.c    **** static uint16_t makeNodeInfoMessage(uint8_t buffer[UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE])
 565:Src/main.c    **** {
 236              		.loc 1 565 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		.loc 1 565 1 is_stmt 0 view .LVU52
 241 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 20
 244              		.cfi_offset 4, -20
 245              		.cfi_offset 5, -16
 246              		.cfi_offset 6, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              	.LCFI4:
 251              		.cfi_def_cfa_offset 32
 252 0004 0446     		mov	r4, r0
 566:Src/main.c    ****     memset(buffer, 0, UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE);
 253              		.loc 1 566 5 is_stmt 1 view .LVU53
 254 0006 40F27912 		movw	r2, #377
 255 000a 0021     		movs	r1, #0
 256 000c FFF7FEFF 		bl	memset
 257              	.LVL21:
 567:Src/main.c    ****     makeNodeStatusMessage(buffer);
 258              		.loc 1 567 5 view .LVU54
 259 0010 2046     		mov	r0, r4
 260 0012 FFF7FEFF 		bl	makeNodeStatusMessage
 261              	.LVL22:
ARM GAS  /tmp/ccnv1VBl.s 			page 16


 568:Src/main.c    ****  
 569:Src/main.c    ****     buffer[7] = APP_VERSION_MAJOR;
 262              		.loc 1 569 5 view .LVU55
 263              		.loc 1 569 15 is_stmt 0 view .LVU56
 264 0016 0123     		movs	r3, #1
 265 0018 E371     		strb	r3, [r4, #7]
 570:Src/main.c    ****     buffer[8] = APP_VERSION_MINOR;
 266              		.loc 1 570 5 is_stmt 1 view .LVU57
 267              		.loc 1 570 15 is_stmt 0 view .LVU58
 268 001a 0022     		movs	r2, #0
 269 001c 2272     		strb	r2, [r4, #8]
 571:Src/main.c    ****     buffer[9] = 1;  // Optional field flags, VCS commit is set
 270              		.loc 1 571 5 is_stmt 1 view .LVU59
 271              		.loc 1 571 15 is_stmt 0 view .LVU60
 272 001e 6372     		strb	r3, [r4, #9]
 572:Src/main.c    ****     const uint32_t git_hash = FIRMWARE_GIT_HASH;
 273              		.loc 1 572 5 is_stmt 1 view .LVU61
 274              		.loc 1 572 20 is_stmt 0 view .LVU62
 275 0020 104B     		ldr	r3, .L22
 276 0022 0193     		str	r3, [sp, #4]
 573:Src/main.c    ****     canardEncodeScalar(buffer, 80, 32, &git_hash);
 277              		.loc 1 573 5 is_stmt 1 view .LVU63
 278 0024 01AB     		add	r3, sp, #4
 279 0026 2022     		movs	r2, #32
 280 0028 5021     		movs	r1, #80
 281 002a 2046     		mov	r0, r4
 282 002c FFF7FEFF 		bl	canardEncodeScalar
 283              	.LVL23:
 574:Src/main.c    ****  
 575:Src/main.c    ****     readUniqueID(&buffer[24]);
 284              		.loc 1 575 5 view .LVU64
 285 0030 04F11800 		add	r0, r4, #24
 286 0034 FFF7FEFF 		bl	readUniqueID
 287              	.LVL24:
 576:Src/main.c    ****     const size_t name_len = strlen(APP_NODE_NAME);
 288              		.loc 1 576 5 view .LVU65
 577:Src/main.c    ****     memcpy(&buffer[41], APP_NODE_NAME, name_len);
 289              		.loc 1 577 5 view .LVU66
 290 0038 0B4D     		ldr	r5, .L22+4
 291 003a 2934     		adds	r4, r4, #41
 292              	.LVL25:
 293              		.loc 1 577 5 is_stmt 0 view .LVU67
 294 003c 05F12007 		add	r7, r5, #32
 295              	.LVL26:
 296              	.L20:
 297              		.loc 1 577 5 view .LVU68
 298 0040 2E46     		mov	r6, r5
 299 0042 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 300 0044 2060     		str	r0, [r4]	@ unaligned
 301 0046 6160     		str	r1, [r4, #4]	@ unaligned
 302 0048 A260     		str	r2, [r4, #8]	@ unaligned
 303 004a E360     		str	r3, [r4, #12]	@ unaligned
 304 004c 3546     		mov	r5, r6
 305 004e 1034     		adds	r4, r4, #16
 306 0050 BE42     		cmp	r6, r7
 307 0052 F5D1     		bne	.L20
 308 0054 3068     		ldr	r0, [r6]
ARM GAS  /tmp/ccnv1VBl.s 			page 17


 309 0056 2060     		str	r0, [r4]	@ unaligned
 310 0058 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 311 005a 2371     		strb	r3, [r4, #4]
 578:Src/main.c    ****     return 41 + name_len ;
 312              		.loc 1 578 5 is_stmt 1 view .LVU69
 579:Src/main.c    **** }
 313              		.loc 1 579 1 is_stmt 0 view .LVU70
 314 005c 4E20     		movs	r0, #78
 315 005e 03B0     		add	sp, sp, #12
 316              	.LCFI5:
 317              		.cfi_def_cfa_offset 20
 318              		@ sp needed
 319 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 320              	.L23:
 321 0062 00BF     		.align	2
 322              	.L22:
 323 0064 1C0173EA 		.word	-361561828
 324 0068 00000000 		.word	.LC0
 325              		.cfi_endproc
 326              	.LFE139:
 328              		.section	.text.getNodeInfoHandleCanard,"ax",%progbits
 329              		.align	1
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	getNodeInfoHandleCanard:
 336              	.LVL27:
 337              	.LFB140:
 580:Src/main.c    ****  
 581:Src/main.c    **** static void getNodeInfoHandleCanard(CanardRxTransfer* transfer)
 582:Src/main.c    **** {
 338              		.loc 1 582 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 384
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		.loc 1 582 1 is_stmt 0 view .LVU72
 343 0000 30B5     		push	{r4, r5, lr}
 344              	.LCFI6:
 345              		.cfi_def_cfa_offset 12
 346              		.cfi_offset 4, -12
 347              		.cfi_offset 5, -8
 348              		.cfi_offset 14, -4
 349 0002 E7B0     		sub	sp, sp, #412
 350              	.LCFI7:
 351              		.cfi_def_cfa_offset 424
 352 0004 0446     		mov	r4, r0
 583:Src/main.c    ****     uint8_t buffer[UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE];
 353              		.loc 1 583 5 is_stmt 1 view .LVU73
 584:Src/main.c    ****     memset(buffer, 0, UAVCAN_GET_NODE_INFO_RESPONSE_MAX_SIZE);
 354              		.loc 1 584 5 view .LVU74
 355 0006 07AD     		add	r5, sp, #28
 356 0008 40F27912 		movw	r2, #377
 357 000c 0021     		movs	r1, #0
 358 000e 2846     		mov	r0, r5
 359              	.LVL28:
 360              		.loc 1 584 5 is_stmt 0 view .LVU75
ARM GAS  /tmp/ccnv1VBl.s 			page 18


 361 0010 FFF7FEFF 		bl	memset
 362              	.LVL29:
 585:Src/main.c    ****     const uint16_t len = makeNodeInfoMessage(buffer);
 363              		.loc 1 585 5 is_stmt 1 view .LVU76
 364              		.loc 1 585 26 is_stmt 0 view .LVU77
 365 0014 2846     		mov	r0, r5
 366 0016 FFF7FEFF 		bl	makeNodeInfoMessage
 367              	.LVL30:
 586:Src/main.c    ****     int result = canardRequestOrRespond(&g_canard,
 368              		.loc 1 586 5 is_stmt 1 view .LVU78
 369              		.loc 1 586 18 is_stmt 0 view .LVU79
 370 001a 0590     		str	r0, [sp, #20]
 371 001c 0495     		str	r5, [sp, #16]
 372 001e 0023     		movs	r3, #0
 373 0020 0393     		str	r3, [sp, #12]
 374 0022 A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 375 0024 0293     		str	r3, [sp, #8]
 376 0026 04F11903 		add	r3, r4, #25
 377 002a 0193     		str	r3, [sp, #4]
 378 002c 0123     		movs	r3, #1
 379 002e 0093     		str	r3, [sp]
 380 0030 06A3     		adr	r3, .L26+4
 381 0032 D3E90023 		ldrd	r2, [r3]
 382 0036 E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 383 0038 0348     		ldr	r0, .L26
 384              	.LVL31:
 385              		.loc 1 586 18 view .LVU80
 386 003a FFF7FEFF 		bl	canardRequestOrRespond
 387              	.LVL32:
 587:Src/main.c    ****                                         transfer->source_node_id,
 588:Src/main.c    ****                                         UAVCAN_GET_NODE_INFO_DATA_TYPE_SIGNATURE,
 589:Src/main.c    ****                                         UAVCAN_GET_NODE_INFO_DATA_TYPE_ID,
 590:Src/main.c    ****                                         &transfer->transfer_id,
 591:Src/main.c    ****                                         transfer->priority,
 592:Src/main.c    ****                                         CanardResponse,
 593:Src/main.c    ****                                         &buffer[0],
 594:Src/main.c    ****                                         (uint16_t)len);
 595:Src/main.c    ****     if (result < 0)
 388              		.loc 1 595 5 is_stmt 1 view .LVU81
 596:Src/main.c    ****     {
 597:Src/main.c    ****         // TODO: handle the error
 598:Src/main.c    ****     }
 389              		.loc 1 598 5 view .LVU82
 599:Src/main.c    **** }
 390              		.loc 1 599 1 is_stmt 0 view .LVU83
 391 003e 67B0     		add	sp, sp, #412
 392              	.LCFI8:
 393              		.cfi_def_cfa_offset 12
 394              		@ sp needed
 395 0040 30BD     		pop	{r4, r5, pc}
 396              	.LVL33:
 397              	.L27:
 398              		.loc 1 599 1 view .LVU84
 399 0042 00BFAFF3 		.align	3
 399      0080
 400              	.L26:
 401 0048 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccnv1VBl.s 			page 19


 402 004c 9E6AC421 		.word	566520478
 403 0050 818A46EE 		.word	-297366911
 404              		.cfi_endproc
 405              	.LFE140:
 407              		.section	.text.swInit,"ax",%progbits
 408              		.align	1
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	swInit:
 415              	.LFB129:
 224:Src/main.c    ****     CanardSTM32CANTimings timings;
 416              		.loc 1 224 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 8
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 421              	.LCFI9:
 422              		.cfi_def_cfa_offset 20
 423              		.cfi_offset 4, -20
 424              		.cfi_offset 5, -16
 425              		.cfi_offset 6, -12
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 85B0     		sub	sp, sp, #20
 429              	.LCFI10:
 430              		.cfi_def_cfa_offset 40
 225:Src/main.c    ****     int result = canardSTM32ComputeCANTimings(HAL_RCC_GetPCLK1Freq(), 1000000, &timings);
 431              		.loc 1 225 5 view .LVU86
 226:Src/main.c    ****     if (result)
 432              		.loc 1 226 5 view .LVU87
 226:Src/main.c    ****     if (result)
 433              		.loc 1 226 18 is_stmt 0 view .LVU88
 434 0004 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 435              	.LVL34:
 436              	.LBB16:
 437              	.LBI16:
 438              		.file 2 "Lib/libcanard/drivers/stm32/canard_stm32.h"
   1:Lib/libcanard/drivers/stm32/canard_stm32.h **** /*
   2:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Copyright (c) 2017 UAVCAN Team
   3:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
   4:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Distributed under the MIT License, available in the file LICENSE.
   5:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
   6:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Author: Pavel Kirienko <pavel.kirienko@zubax.com>
   7:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
   8:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
   9:Lib/libcanard/drivers/stm32/canard_stm32.h **** #ifndef CANARD_STM32_H
  10:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_H
  11:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  12:Lib/libcanard/drivers/stm32/canard_stm32.h **** #include <canard.h>
  13:Lib/libcanard/drivers/stm32/canard_stm32.h **** #include <string.h>     // NOLINT
  14:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  15:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  16:Lib/libcanard/drivers/stm32/canard_stm32.h **** #ifdef __cplusplus
  17:Lib/libcanard/drivers/stm32/canard_stm32.h **** extern "C"
  18:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
ARM GAS  /tmp/ccnv1VBl.s 			page 20


  19:Lib/libcanard/drivers/stm32/canard_stm32.h **** #endif
  20:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  21:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  22:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Set this build config macro to 1 to use CAN2 instead of CAN1, if available.
  23:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Setting this parameter when CAN2 is not available may not be detected at compile time!
  24:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  25:Lib/libcanard/drivers/stm32/canard_stm32.h **** #if !defined(CANARD_STM32_USE_CAN2)
  26:Lib/libcanard/drivers/stm32/canard_stm32.h **** # define CANARD_STM32_USE_CAN2                                  0
  27:Lib/libcanard/drivers/stm32/canard_stm32.h **** #endif
  28:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  29:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  30:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Trigger an assertion failure if inner priority inversion is detected at run time.
  31:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This setting has no effect in release builds, where NDEBUG is defined.
  32:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  33:Lib/libcanard/drivers/stm32/canard_stm32.h **** #if !defined(CANARD_STM32_DEBUG_INNER_PRIORITY_INVERSION)
  34:Lib/libcanard/drivers/stm32/canard_stm32.h **** # define CANARD_STM32_DEBUG_INNER_PRIORITY_INVERSION            1
  35:Lib/libcanard/drivers/stm32/canard_stm32.h **** #endif
  36:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  37:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  38:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Driver error codes.
  39:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * These values are returned negated from API functions that return int.
  40:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  41:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE                         1000
  42:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_MSR_INAK_NOT_SET                             1001
  43:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_MSR_INAK_NOT_CLEARED                         1002
  44:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_ERROR_UNSUPPORTED_FRAME_FORMAT                     1003
  45:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  46:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  47:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This is defined by the bxCAN hardware.
  48:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Devices with only one CAN interface have 14 filters (e.g. F103).
  49:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Devices with two CAN interfaces have 28 filters, which are shared between two interfaces (e.g. F
  50:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The filters are distributed between CAN1 and CAN2 by means of the CAN2 start filter bank selecti
  51:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * which is a number from 1 to 27 inclusive. Seeing as the start bank cannot be set to 0, CAN2 has 
  52:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * to use.
  53:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  54:Lib/libcanard/drivers/stm32/canard_stm32.h **** #define CANARD_STM32_NUM_ACCEPTANCE_FILTERS                            14U
  55:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  56:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  57:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The interface can be initialized in either of these modes.
  58:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
  59:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The Silent mode is useful for automatic CAN bit rate detection, where the interface is initializ
  60:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * arbitrarily guessed CAN bit rate (typically either 1 Mbps, 500 Kbps, 250 Kbps, or 125 Kbps, thes
  61:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * standard values defined by the UAVCAN specification), and the bus is then listened for 1 second 
  62:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * determine whether the bit rate was guessed correctly. It is paramount to use the silent mode in 
  63:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * as to not interfere with ongoing communications on the bus if the guess was incorrect.
  64:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
  65:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The automatic TX abort on error mode should be used during dynamic node ID allocation. The reaso
  66:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * is well explained in the UAVCAN specification, please read it.
  67:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
  68:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The normal mode should be used for all other use cases, particularly for the normal operation of
  69:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * hence the name.
  70:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  71:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef enum
  72:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
  73:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CanardSTM32IfaceModeNormal,                         //!< Normal mode
  74:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CanardSTM32IfaceModeSilent,                         //!< Do not affect the bus, only listen
  75:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CanardSTM32IfaceModeAutomaticTxAbortOnError         //!< Abort pending TX if a bus error has oc
ARM GAS  /tmp/ccnv1VBl.s 			page 21


  76:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32IfaceMode;
  77:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  78:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  79:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Interface statistics; these values can be queried using a dedicated API call.
  80:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  81:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef struct
  82:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
  83:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint64_t rx_overflow_count;
  84:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint64_t error_count;
  85:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32Stats;
  86:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  87:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  88:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * ID and Mask of a hardware acceptance filter.
  89:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The ID and Mask fields support flags @ref CANARD_CAN_FRAME_EFF and @ref CANARD_CAN_FRAME_RTR.
  90:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
  91:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef struct
  92:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
  93:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint32_t id;
  94:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint32_t mask;
  95:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32AcceptanceFilterConfiguration;
  96:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
  97:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
  98:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * These parameters define the timings of the CAN controller.
  99:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Please refer to the documentation of the bxCAN macrocell for explanation.
 100:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * These values can be computed by the developed beforehand if ROM size is of a concern,
 101:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * or they can be computed at run time using the function defined below.
 102:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 103:Lib/libcanard/drivers/stm32/canard_stm32.h **** typedef struct
 104:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
 105:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint16_t bit_rate_prescaler;                        /// [1, 1024]
 106:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bit_segment_1;                              /// [1, 16]
 107:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bit_segment_2;                              /// [1, 8]
 108:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t max_resynchronization_jump_width;           /// [1, 4] (recommended value is 1)
 109:Lib/libcanard/drivers/stm32/canard_stm32.h **** } CanardSTM32CANTimings;
 110:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 111:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 112:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Initializes the CAN controller at the specified bit rate.
 113:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The mode can be either normal, silent, or auto-abort on error;
 114:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * in silent mode the controller will be only listening, not affecting the state of the bus;
 115:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * in the auto abort mode the controller will cancel the pending transmissions if a bus error is en
 116:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The auto abort mode is needed for dynamic node ID allocation procedure; please refer to the UAVC
 117:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * for more information about this topic.
 118:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 119:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function can be invoked any number of times; every invocation re-initializes everything fro
 120:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 121:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * WARNING: The clock of the CAN module must be enabled before this function is invoked!
 122:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *          If CAN2 is used, CAN1 must be also enabled!
 123:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 124:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * WARNING: The driver is not thread-safe!
 125:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *          It does not use IRQ or critical sections though, so it is safe to invoke its API functi
 126:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *          IRQ context from the application.
 127:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 128:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               Success
 129:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 130:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 131:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32Init(const CanardSTM32CANTimings* const timings,
 132:Lib/libcanard/drivers/stm32/canard_stm32.h ****                         const CanardSTM32IfaceMode iface_mode);
ARM GAS  /tmp/ccnv1VBl.s 			page 22


 133:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 134:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 135:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Pushes one frame into the TX buffer, if there is space.
 136:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Note that proper care is taken to ensure that no inner priority inversion is taking place.
 137:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function does never block.
 138:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 139:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      1               Transmitted successfully
 140:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               No space in the buffer
 141:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 142:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 143:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32Transmit(const CanardCANFrame* const frame);
 144:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 145:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 146:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Reads one frame from the hardware RX FIFO, unless all FIFO are empty.
 147:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function does never block.
 148:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 149:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      1               Read successfully
 150:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               The buffer is empty
 151:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 152:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 153:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32Receive(CanardCANFrame* const out_frame);
 154:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 155:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 156:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Sets up acceptance filters according to the provided list of ID and masks.
 157:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Note that when the interface is reinitialized, hardware acceptance filters are reset.
 158:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Also note that during filter reconfiguration, some RX frames may be lost.
 159:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 160:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Setting zero filters will result in rejection of all frames.
 161:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * In order to accept all frames, set one filter with ID = Mask = 0, which is also the default conf
 162:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 163:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      0               Success
 164:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval      negative        Error
 165:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 166:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32ConfigureAcceptanceFilters(const CanardSTM32AcceptanceFilterConfiguration* const
 167:Lib/libcanard/drivers/stm32/canard_stm32.h ****                                               const uint8_t num_filter_configs);
 168:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 169:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 170:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Returns the running interface statistics.
 171:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 172:Lib/libcanard/drivers/stm32/canard_stm32.h **** CanardSTM32Stats canardSTM32GetStats(void);
 173:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 174:Lib/libcanard/drivers/stm32/canard_stm32.h **** /**
 175:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Given the rate of the clock supplied to the bxCAN macrocell (typically PCLK1) and the desired bi
 176:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * this function iteratively solves for the best possible timing settings. The CAN bus timing param
 177:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * such as the sample point location, the number of time quantas per bit, etc., are optimized accor
 178:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * recommendations provided in the specifications of UAVCAN, DeviceNet, and CANOpen.
 179:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 180:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * Unless noted otherwise, all units are SI units; particularly, frequency is specified in hertz.
 181:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 182:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * The implementation is adapted from libuavcan.
 183:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 184:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * This function is defined in the header in order to encourage the linker to discard it if it is n
 185:Lib/libcanard/drivers/stm32/canard_stm32.h ****  *
 186:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval 0            Success
 187:Lib/libcanard/drivers/stm32/canard_stm32.h ****  * @retval negative     Solution could not be found for the provided inputs.
 188:Lib/libcanard/drivers/stm32/canard_stm32.h ****  */
 189:Lib/libcanard/drivers/stm32/canard_stm32.h **** static inline
ARM GAS  /tmp/ccnv1VBl.s 			page 23


 190:Lib/libcanard/drivers/stm32/canard_stm32.h **** int16_t canardSTM32ComputeCANTimings(const uint32_t peripheral_clock_rate,
 439              		.loc 2 190 9 is_stmt 1 view .LVU89
 440              	.LBB17:
 191:Lib/libcanard/drivers/stm32/canard_stm32.h ****                                      const uint32_t target_bitrate,
 192:Lib/libcanard/drivers/stm32/canard_stm32.h ****                                      CanardSTM32CANTimings* const out_timings)
 193:Lib/libcanard/drivers/stm32/canard_stm32.h **** {
 194:Lib/libcanard/drivers/stm32/canard_stm32.h ****     if (target_bitrate < 1000)
 441              		.loc 2 194 5 view .LVU90
 195:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 196:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
 197:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 198:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 199:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CANARD_ASSERT(out_timings != NULL);  // NOLINT
 442              		.loc 2 199 5 view .LVU91
 200:Lib/libcanard/drivers/stm32/canard_stm32.h ****     memset(out_timings, 0, sizeof(*out_timings));
 443              		.loc 2 200 5 view .LVU92
 444 0008 0023     		movs	r3, #0
 445 000a 0293     		str	r3, [sp, #8]
 446 000c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 201:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 202:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 203:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Hardware configuration
 204:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 205:Lib/libcanard/drivers/stm32/canard_stm32.h ****     static const uint8_t MaxBS1 = 16;
 447              		.loc 2 205 5 view .LVU93
 206:Lib/libcanard/drivers/stm32/canard_stm32.h ****     static const uint8_t MaxBS2 = 8;
 448              		.loc 2 206 5 view .LVU94
 207:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 208:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 209:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Ref. "Automatic Baudrate Detection in CANopen Networks", U. Koppe, MicroControl GmbH & Co. K
 210:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *      CAN in Automation, 2003
 211:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 212:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * According to the source, optimal quanta per bit are:
 213:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   Bitrate        Optimal Maximum
 214:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   1000 kbps      8       10
 215:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   500  kbps      16      17
 216:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   250  kbps      16      17
 217:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   125  kbps      16      17
 218:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 219:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const uint8_t max_quanta_per_bit = (uint8_t)((target_bitrate >= 1000000) ? 10 : 17);    // NOLI
 449              		.loc 2 219 5 view .LVU95
 220:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CANARD_ASSERT(max_quanta_per_bit <= (MaxBS1 + MaxBS2));
 221:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 222:Lib/libcanard/drivers/stm32/canard_stm32.h ****     static const uint16_t MaxSamplePointLocationPermill = 900;
 450              		.loc 2 222 5 view .LVU96
 223:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 224:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 225:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Computing (prescaler * BS):
 226:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   BITRATE = 1 / (PRESCALER * (1 / PCLK) * (1 + BS1 + BS2))       -- See the Reference Manual
 227:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   BITRATE = PCLK / (PRESCALER * (1 + BS1 + BS2))                 -- Simplified
 228:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * let:
 229:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   BS = 1 + BS1 + BS2                                             -- Number of time quanta pe
 230:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   PRESCALER_BS = PRESCALER * BS
 231:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * ==>
 232:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   PRESCALER_BS = PCLK / BITRATE
 233:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 234:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const uint32_t prescaler_bs = peripheral_clock_rate / target_bitrate;
ARM GAS  /tmp/ccnv1VBl.s 			page 24


 451              		.loc 2 234 5 view .LVU97
 452              		.loc 2 234 20 is_stmt 0 view .LVU98
 453 0010 3F4A     		ldr	r2, .L47
 454 0012 A2FB0032 		umull	r3, r2, r2, r0
 455 0016 920C     		lsrs	r2, r2, #18
 456              	.LVL35:
 235:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 236:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 237:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Searching for such prescaler value so that the number of quanta per bit is highest.
 238:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 239:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bs1_bs2_sum = (uint8_t)(max_quanta_per_bit - 1);    // NOLINT
 457              		.loc 2 239 5 is_stmt 1 view .LVU99
 240:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 241:Lib/libcanard/drivers/stm32/canard_stm32.h ****     while ((prescaler_bs % (1U + bs1_bs2_sum)) != 0)
 458              		.loc 2 241 5 view .LVU100
 239:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 459              		.loc 2 239 13 is_stmt 0 view .LVU101
 460 0018 0923     		movs	r3, #9
 461              	.LVL36:
 462              	.L29:
 463              		.loc 2 241 32 view .LVU102
 464 001a 5C1C     		adds	r4, r3, #1
 465              		.loc 2 241 26 view .LVU103
 466 001c B2FBF4F1 		udiv	r1, r2, r4
 467 0020 04FB1121 		mls	r1, r4, r1, r2
 468              		.loc 2 241 11 view .LVU104
 469 0024 21B1     		cbz	r1, .L43
 242:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 243:Lib/libcanard/drivers/stm32/canard_stm32.h ****         if (bs1_bs2_sum <= 2)
 470              		.loc 2 243 9 is_stmt 1 view .LVU105
 471              		.loc 2 243 12 is_stmt 0 view .LVU106
 472 0026 022B     		cmp	r3, #2
 473 0028 4DD9     		bls	.L30
 244:Lib/libcanard/drivers/stm32/canard_stm32.h ****         {
 245:Lib/libcanard/drivers/stm32/canard_stm32.h ****             return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;          // No solution
 246:Lib/libcanard/drivers/stm32/canard_stm32.h ****         }
 247:Lib/libcanard/drivers/stm32/canard_stm32.h ****         bs1_bs2_sum--;
 474              		.loc 2 247 9 is_stmt 1 view .LVU107
 475              		.loc 2 247 20 is_stmt 0 view .LVU108
 476 002a 013B     		subs	r3, r3, #1
 477              	.LVL37:
 478              		.loc 2 247 20 view .LVU109
 479 002c DBB2     		uxtb	r3, r3
 480              	.LVL38:
 481              		.loc 2 247 20 view .LVU110
 482 002e F4E7     		b	.L29
 483              	.L43:
 248:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 249:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 250:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const uint32_t prescaler = prescaler_bs / (1U + bs1_bs2_sum);
 484              		.loc 2 250 5 is_stmt 1 view .LVU111
 485              		.loc 2 250 20 is_stmt 0 view .LVU112
 486 0030 B2FBF4F2 		udiv	r2, r2, r4
 487              	.LVL39:
 251:Lib/libcanard/drivers/stm32/canard_stm32.h ****     if ((prescaler < 1U) || (prescaler > 1024U))
 488              		.loc 2 251 5 is_stmt 1 view .LVU113
 489              		.loc 2 251 26 is_stmt 0 view .LVU114
ARM GAS  /tmp/ccnv1VBl.s 			page 25


 490 0034 511E     		subs	r1, r2, #1
 491              		.loc 2 251 8 view .LVU115
 492 0036 B1F5806F 		cmp	r1, #1024
 493 003a 44D2     		bcs	.L30
 252:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 253:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;              // No solution
 254:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 255:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 256:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 257:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Now we have a constraint: (BS1 + BS2) == bs1_bs2_sum.
 258:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * We need to find such values so that the sample point is as close as possible to the optimal 
 259:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * which is 87.5%, which is 7/8.
 260:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 261:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   Solve[(1 + bs1)/(1 + bs1 + bs2) == 7/8, bs2]  (* Where 7/8 is 0.875, the recommended sampl
 262:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   {{bs2 -> (1 + bs1)/7}}
 263:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 264:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Hence:
 265:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   bs2 = (1 + bs1) / 7
 266:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   bs1 = (7 * bs1_bs2_sum - 1) / 8
 267:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 268:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Sample point location can be computed as follows:
 269:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   Sample point location = (1 + bs1) / (1 + bs1 + bs2)
 270:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *
 271:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Since the optimal solution is so close to the maximum, we prepare two solutions, and then pi
 272:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   - With rounding to nearest
 273:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *   - With rounding to zero
 274:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 275:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bs1 = (uint8_t)(((7 * bs1_bs2_sum - 1) + 4) / 8);       // Trying rounding to nearest f
 494              		.loc 2 275 5 is_stmt 1 view .LVU116
 495              		.loc 2 275 33 is_stmt 0 view .LVU117
 496 003c C3EBC306 		rsb	r6, r3, r3, lsl #3
 497              		.loc 2 275 57 view .LVU118
 498 0040 F11C     		adds	r1, r6, #3
 499 0042 22D4     		bmi	.L44
 500              	.L32:
 501 0044 C910     		asrs	r1, r1, #3
 502              		.loc 2 275 13 view .LVU119
 503 0046 CDB2     		uxtb	r5, r1
 504              	.LVL40:
 276:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bs2 = (uint8_t)(bs1_bs2_sum - bs1);  // NOLINT
 505              		.loc 2 276 5 is_stmt 1 view .LVU120
 506              		.loc 2 276 13 is_stmt 0 view .LVU121
 507 0048 5F1B     		subs	r7, r3, r5
 508 004a FFB2     		uxtb	r7, r7
 509              	.LVL41:
 277:Lib/libcanard/drivers/stm32/canard_stm32.h ****     CANARD_ASSERT(bs1_bs2_sum > bs1);
 510              		.loc 2 277 5 is_stmt 1 view .LVU122
 511 004c AB42     		cmp	r3, r5
 512 004e 1ED9     		bls	.L45
 513              	.LBB18:
 278:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 279:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 280:Lib/libcanard/drivers/stm32/canard_stm32.h ****         const uint16_t sample_point_permill = (uint16_t)(1000U * (1U + bs1) / (1U + bs1 + bs2));  /
 514              		.loc 2 280 9 view .LVU123
 515              		.loc 2 280 64 is_stmt 0 view .LVU124
 516 0050 C9B2     		uxtb	r1, r1
 517 0052 4FF47A74 		mov	r4, #1000
ARM GAS  /tmp/ccnv1VBl.s 			page 26


 518 0056 01FB0444 		mla	r4, r1, r4, r4
 519              		.loc 2 280 89 view .LVU125
 520 005a 3944     		add	r1, r1, r7
 521 005c 0131     		adds	r1, r1, #1
 522              		.loc 2 280 77 view .LVU126
 523 005e B4FBF1F1 		udiv	r1, r4, r1
 524              		.loc 2 280 24 view .LVU127
 525 0062 89B2     		uxth	r1, r1
 526              	.LVL42:
 281:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 282:Lib/libcanard/drivers/stm32/canard_stm32.h ****         if (sample_point_permill > MaxSamplePointLocationPermill)   // Strictly more!
 527              		.loc 2 282 9 is_stmt 1 view .LVU128
 528              		.loc 2 282 12 is_stmt 0 view .LVU129
 529 0064 B1F5617F 		cmp	r1, #900
 530 0068 05D9     		bls	.L34
 283:Lib/libcanard/drivers/stm32/canard_stm32.h ****         {
 284:Lib/libcanard/drivers/stm32/canard_stm32.h ****             bs1 = (uint8_t)((7 * bs1_bs2_sum - 1) / 8);             // Nope, too far; now rounding 
 531              		.loc 2 284 13 is_stmt 1 view .LVU130
 532              		.loc 2 284 51 is_stmt 0 view .LVU131
 533 006a 751E     		subs	r5, r6, #1
 534              	.LVL43:
 535              		.loc 2 284 51 view .LVU132
 536 006c 16D4     		bmi	.L46
 537              	.L35:
 538              		.loc 2 284 17 view .LVU133
 539 006e C5F3C705 		ubfx	r5, r5, #3, #8
 540              	.LVL44:
 285:Lib/libcanard/drivers/stm32/canard_stm32.h ****             bs2 = (uint8_t)(bs1_bs2_sum - bs1);
 541              		.loc 2 285 13 is_stmt 1 view .LVU134
 542              		.loc 2 285 17 is_stmt 0 view .LVU135
 543 0072 5B1B     		subs	r3, r3, r5
 544              	.LVL45:
 545              		.loc 2 285 17 view .LVU136
 546 0074 DFB2     		uxtb	r7, r3
 547              	.LVL46:
 548              	.L34:
 549              		.loc 2 285 17 view .LVU137
 550              	.LBE18:
 286:Lib/libcanard/drivers/stm32/canard_stm32.h ****         }
 287:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 288:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 289:Lib/libcanard/drivers/stm32/canard_stm32.h ****     const bool valid = (bs1 >= 1) && (bs1 <= MaxBS1) && (bs2 >= 1) && (bs2 <= MaxBS2);
 551              		.loc 2 289 5 is_stmt 1 view .LVU138
 552              		.loc 2 289 35 is_stmt 0 view .LVU139
 553 0076 6B1E     		subs	r3, r5, #1
 554 0078 DBB2     		uxtb	r3, r3
 555              		.loc 2 289 68 view .LVU140
 556 007a 0F2B     		cmp	r3, #15
 557 007c 10D8     		bhi	.L39
 558              		.loc 2 289 54 view .LVU141
 559 007e 002F     		cmp	r7, #0
 560 0080 3BD0     		beq	.L40
 561              		.loc 2 289 68 view .LVU142
 562 0082 082F     		cmp	r7, #8
 563 0084 3BD9     		bls	.L41
 564 0086 0021     		movs	r1, #0
 565              	.LVL47:
ARM GAS  /tmp/ccnv1VBl.s 			page 27


 566              		.loc 2 289 68 view .LVU143
 567 0088 0BE0     		b	.L36
 568              	.LVL48:
 569              	.L44:
 275:Lib/libcanard/drivers/stm32/canard_stm32.h ****     uint8_t bs2 = (uint8_t)(bs1_bs2_sum - bs1);  // NOLINT
 570              		.loc 2 275 57 view .LVU144
 571 008a 0731     		adds	r1, r1, #7
 572 008c DAE7     		b	.L32
 573              	.LVL49:
 574              	.L45:
 277:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 575              		.loc 2 277 5 view .LVU145
 576 008e 214B     		ldr	r3, .L47+4
 577              	.LVL50:
 277:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 578              		.loc 2 277 5 view .LVU146
 579 0090 214A     		ldr	r2, .L47+8
 580              	.LVL51:
 277:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 581              		.loc 2 277 5 view .LVU147
 582 0092 40F21511 		movw	r1, #277
 583 0096 2148     		ldr	r0, .L47+12
 584              	.LVL52:
 277:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 585              		.loc 2 277 5 view .LVU148
 586 0098 FFF7FEFF 		bl	__assert_func
 587              	.LVL53:
 588              	.L46:
 589              	.LBB19:
 284:Lib/libcanard/drivers/stm32/canard_stm32.h ****             bs2 = (uint8_t)(bs1_bs2_sum - bs1);
 590              		.loc 2 284 51 view .LVU149
 591 009c 0735     		adds	r5, r5, #7
 592 009e E6E7     		b	.L35
 593              	.LVL54:
 594              	.L39:
 284:Lib/libcanard/drivers/stm32/canard_stm32.h ****             bs2 = (uint8_t)(bs1_bs2_sum - bs1);
 595              		.loc 2 284 51 view .LVU150
 596              	.LBE19:
 597              		.loc 2 289 68 view .LVU151
 598 00a0 0021     		movs	r1, #0
 599              	.LVL55:
 600              	.L36:
 290:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 291:Lib/libcanard/drivers/stm32/canard_stm32.h ****     /*
 292:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Final validation
 293:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * Helpful Python:
 294:Lib/libcanard/drivers/stm32/canard_stm32.h ****      * def sample_point_from_btr(x):
 295:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *     assert 0b0011110010000000111111000000000 & x == 0
 296:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *     ts2,ts1,brp = (x>>20)&7, (x>>16)&15, x&511
 297:Lib/libcanard/drivers/stm32/canard_stm32.h ****      *     return (1+ts1+1)/(1+ts1+1+ts2+1)
 298:Lib/libcanard/drivers/stm32/canard_stm32.h ****      */
 299:Lib/libcanard/drivers/stm32/canard_stm32.h ****     if ((target_bitrate != (peripheral_clock_rate / (prescaler * (1U + bs1 + bs2)))) ||
 601              		.loc 2 299 5 is_stmt 1 view .LVU152
 602              		.loc 2 299 76 is_stmt 0 view .LVU153
 603 00a2 EB19     		adds	r3, r5, r7
 604              		.loc 2 299 64 view .LVU154
 605 00a4 03FB0223 		mla	r3, r3, r2, r2
ARM GAS  /tmp/ccnv1VBl.s 			page 28


 606              		.loc 2 299 51 view .LVU155
 607 00a8 B0FBF3F0 		udiv	r0, r0, r3
 608              	.LVL56:
 609              		.loc 2 299 8 view .LVU156
 610 00ac 1C4B     		ldr	r3, .L47+16
 611 00ae 9842     		cmp	r0, r3
 612 00b0 27D1     		bne	.L37
 613              		.loc 2 299 86 view .LVU157
 614 00b2 31B3     		cbz	r1, .L37
 300:Lib/libcanard/drivers/stm32/canard_stm32.h ****         !valid)
 301:Lib/libcanard/drivers/stm32/canard_stm32.h ****     {
 302:Lib/libcanard/drivers/stm32/canard_stm32.h ****         // This actually means that the algorithm has a logic error, hence assert(0).
 303:Lib/libcanard/drivers/stm32/canard_stm32.h ****         CANARD_ASSERT(0);  // NOLINT
 304:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
 305:Lib/libcanard/drivers/stm32/canard_stm32.h ****     }
 306:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 307:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->bit_rate_prescaler = (uint16_t) prescaler;
 615              		.loc 2 307 5 is_stmt 1 view .LVU158
 616              		.loc 2 307 37 is_stmt 0 view .LVU159
 617 00b4 ADF80820 		strh	r2, [sp, #8]	@ movhi
 308:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->max_resynchronization_jump_width = 1;      // One is recommended by UAVCAN, CANOpe
 618              		.loc 2 308 5 is_stmt 1 view .LVU160
 619              		.loc 2 308 51 is_stmt 0 view .LVU161
 620 00b8 0123     		movs	r3, #1
 621 00ba 8DF80C30 		strb	r3, [sp, #12]
 309:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->bit_segment_1 = bs1;
 622              		.loc 2 309 5 is_stmt 1 view .LVU162
 623              		.loc 2 309 32 is_stmt 0 view .LVU163
 624 00be 8DF80A50 		strb	r5, [sp, #10]
 310:Lib/libcanard/drivers/stm32/canard_stm32.h ****     out_timings->bit_segment_2 = bs2;
 625              		.loc 2 310 5 is_stmt 1 view .LVU164
 626              		.loc 2 310 32 is_stmt 0 view .LVU165
 627 00c2 8DF80B70 		strb	r7, [sp, #11]
 311:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 312:Lib/libcanard/drivers/stm32/canard_stm32.h ****     return 0;
 628              		.loc 2 312 5 is_stmt 1 view .LVU166
 629              	.LVL57:
 630              	.L30:
 631              		.loc 2 312 5 is_stmt 0 view .LVU167
 632              	.LBE17:
 633              	.LBE16:
 227:Src/main.c    ****     {
 634              		.loc 1 227 5 is_stmt 1 view .LVU168
 230:Src/main.c    ****     canardSTM32Init(&timings, CanardSTM32IfaceModeNormal);
 635              		.loc 1 230 5 view .LVU169
 231:Src/main.c    ****     result = canardSTM32Init(&timings, CanardSTM32IfaceModeNormal);
 636              		.loc 1 231 5 view .LVU170
 637 00c6 0021     		movs	r1, #0
 638 00c8 02A8     		add	r0, sp, #8
 639 00ca FFF7FEFF 		bl	canardSTM32Init
 640              	.LVL58:
 232:Src/main.c    ****     if (result)
 641              		.loc 1 232 5 view .LVU171
 232:Src/main.c    ****     if (result)
 642              		.loc 1 232 14 is_stmt 0 view .LVU172
 643 00ce 0021     		movs	r1, #0
 644 00d0 02A8     		add	r0, sp, #8
ARM GAS  /tmp/ccnv1VBl.s 			page 29


 645 00d2 FFF7FEFF 		bl	canardSTM32Init
 646              	.LVL59:
 233:Src/main.c    ****     {
 647              		.loc 1 233 5 is_stmt 1 view .LVU173
 245:Src/main.c    **** 
 648              		.loc 1 245 5 view .LVU174
 247:Src/main.c    ****                g_canard_memory_pool,              // Raw memory chunk used for dynamic allocation
 649              		.loc 1 247 5 view .LVU175
 650 00d6 134C     		ldr	r4, .L47+20
 651 00d8 0023     		movs	r3, #0
 652 00da 0193     		str	r3, [sp, #4]
 653 00dc 124B     		ldr	r3, .L47+24
 654 00de 0093     		str	r3, [sp]
 655 00e0 124B     		ldr	r3, .L47+28
 656 00e2 4FF48062 		mov	r2, #1024
 657 00e6 1249     		ldr	r1, .L47+32
 658 00e8 2046     		mov	r0, r4
 659 00ea FFF7FEFF 		bl	canardInit
 660              	.LVL60:
 254:Src/main.c    **** }
 661              		.loc 1 254 5 view .LVU176
 662 00ee 0A21     		movs	r1, #10
 663 00f0 2046     		mov	r0, r4
 664 00f2 FFF7FEFF 		bl	canardSetLocalNodeID
 665              	.LVL61:
 255:Src/main.c    **** 
 666              		.loc 1 255 1 is_stmt 0 view .LVU177
 667 00f6 05B0     		add	sp, sp, #20
 668              	.LCFI11:
 669              		.cfi_remember_state
 670              		.cfi_def_cfa_offset 20
 671              		@ sp needed
 672 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 673              	.LVL62:
 674              	.L40:
 675              	.LCFI12:
 676              		.cfi_restore_state
 677              	.LBB21:
 678              	.LBB20:
 289:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 679              		.loc 2 289 68 view .LVU178
 680 00fa 0021     		movs	r1, #0
 681              	.LVL63:
 289:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 682              		.loc 2 289 68 view .LVU179
 683 00fc D1E7     		b	.L36
 684              	.LVL64:
 685              	.L41:
 289:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 686              		.loc 2 289 68 view .LVU180
 687 00fe 0121     		movs	r1, #1
 688              	.LVL65:
 289:Lib/libcanard/drivers/stm32/canard_stm32.h **** 
 689              		.loc 2 289 68 view .LVU181
 690 0100 CFE7     		b	.L36
 691              	.LVL66:
 692              	.L37:
ARM GAS  /tmp/ccnv1VBl.s 			page 30


 303:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
 693              		.loc 2 303 9 is_stmt 1 view .LVU182
 694 0102 0C4B     		ldr	r3, .L47+36
 695 0104 044A     		ldr	r2, .L47+8
 696              	.LVL67:
 303:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
 697              		.loc 2 303 9 is_stmt 0 view .LVU183
 698 0106 40F22F11 		movw	r1, #303
 699              	.LVL68:
 303:Lib/libcanard/drivers/stm32/canard_stm32.h ****         return -CANARD_STM32_ERROR_UNSUPPORTED_BIT_RATE;
 700              		.loc 2 303 9 view .LVU184
 701 010a 0448     		ldr	r0, .L47+12
 702 010c FFF7FEFF 		bl	__assert_func
 703              	.LVL69:
 704              	.L48:
 705              		.align	2
 706              	.L47:
 707 0110 83DE1B43 		.word	1125899907
 708 0114 00000000 		.word	.LC1
 709 0118 00000000 		.word	.LANCHOR1
 710 011c 14000000 		.word	.LC2
 711 0120 40420F00 		.word	1000000
 712 0124 00000000 		.word	.LANCHOR0
 713 0128 00000000 		.word	shouldAcceptTransfer
 714 012c 00000000 		.word	onTransferReceived
 715 0130 00000000 		.word	.LANCHOR2
 716 0134 40000000 		.word	.LC3
 717              	.LBE20:
 718              	.LBE21:
 719              		.cfi_endproc
 720              	.LFE129:
 722              		.section	.text.sendCanard,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	sendCanard:
 730              	.LFB133:
 331:Src/main.c    ****     const CanardCANFrame* txf = canardPeekTxQueue(&g_canard);
 731              		.loc 1 331 1 is_stmt 1 view -0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735 0000 08B5     		push	{r3, lr}
 736              	.LCFI13:
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 3, -8
 739              		.cfi_offset 14, -4
 332:Src/main.c    **** while(txf)
 740              		.loc 1 332 5 view .LVU186
 332:Src/main.c    **** while(txf)
 741              		.loc 1 332 33 is_stmt 0 view .LVU187
 742 0002 0848     		ldr	r0, .L55
 743 0004 FFF7FEFF 		bl	canardPeekTxQueue
 744              	.LVL70:
 333:Src/main.c    ****     {
ARM GAS  /tmp/ccnv1VBl.s 			page 31


 745              		.loc 1 333 1 is_stmt 1 view .LVU188
 333:Src/main.c    ****     {
 746              		.loc 1 333 6 is_stmt 0 view .LVU189
 747 0008 02E0     		b	.L50
 748              	.LVL71:
 749              	.L51:
 750              	.LBB22:
 365:Src/main.c    ****     }
 751              		.loc 1 365 9 is_stmt 1 view .LVU190
 365:Src/main.c    ****     }
 752              		.loc 1 365 15 is_stmt 0 view .LVU191
 753 000a 0648     		ldr	r0, .L55
 754 000c FFF7FEFF 		bl	canardPeekTxQueue
 755              	.LVL72:
 756              	.L50:
 365:Src/main.c    ****     }
 757              		.loc 1 365 15 view .LVU192
 758              	.LBE22:
 333:Src/main.c    ****     {
 759              		.loc 1 333 6 view .LVU193
 760 0010 38B1     		cbz	r0, .L54
 761              	.LBB23:
 335:Src/main.c    **** 	
 762              		.loc 1 335 9 is_stmt 1 view .LVU194
 335:Src/main.c    **** 	
 763              		.loc 1 335 28 is_stmt 0 view .LVU195
 764 0012 FFF7FEFF 		bl	canardSTM32Transmit
 765              	.LVL73:
 361:Src/main.c    ****         {
 766              		.loc 1 361 9 is_stmt 1 view .LVU196
 361:Src/main.c    ****         {
 767              		.loc 1 361 11 is_stmt 0 view .LVU197
 768 0016 0028     		cmp	r0, #0
 769 0018 F7DD     		ble	.L51
 363:Src/main.c    ****         }
 770              		.loc 1 363 13 is_stmt 1 view .LVU198
 771 001a 0248     		ldr	r0, .L55
 772              	.LVL74:
 363:Src/main.c    ****         }
 773              		.loc 1 363 13 is_stmt 0 view .LVU199
 774 001c FFF7FEFF 		bl	canardPopTxQueue
 775              	.LVL75:
 776 0020 F3E7     		b	.L51
 777              	.LVL76:
 778              	.L54:
 363:Src/main.c    ****         }
 779              		.loc 1 363 13 view .LVU200
 780              	.LBE23:
 367:Src/main.c    **** 
 781              		.loc 1 367 1 view .LVU201
 782 0022 08BD     		pop	{r3, pc}
 783              	.L56:
 784              		.align	2
 785              	.L55:
 786 0024 00000000 		.word	.LANCHOR0
 787              		.cfi_endproc
 788              	.LFE133:
ARM GAS  /tmp/ccnv1VBl.s 			page 32


 790              		.section	.text.receiveCanard,"ax",%progbits
 791              		.align	1
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
 797              	receiveCanard:
 798              	.LFB134:
 370:Src/main.c    ****     CanardCANFrame rx_frame;
 799              		.loc 1 370 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 16
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803 0000 00B5     		push	{lr}
 804              	.LCFI14:
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 14, -4
 807 0002 85B0     		sub	sp, sp, #20
 808              	.LCFI15:
 809              		.cfi_def_cfa_offset 24
 371:Src/main.c    ****     int res = canardSTM32Receive(&rx_frame);
 810              		.loc 1 371 5 view .LVU203
 372:Src/main.c    ****     if(res)
 811              		.loc 1 372 5 view .LVU204
 372:Src/main.c    ****     if(res)
 812              		.loc 1 372 15 is_stmt 0 view .LVU205
 813 0004 6846     		mov	r0, sp
 814 0006 FFF7FEFF 		bl	canardSTM32Receive
 815              	.LVL77:
 373:Src/main.c    **** {
 816              		.loc 1 373 5 is_stmt 1 view .LVU206
 373:Src/main.c    **** {
 817              		.loc 1 373 7 is_stmt 0 view .LVU207
 818 000a 10B9     		cbnz	r0, .L60
 819              	.LVL78:
 820              	.L57:
 377:Src/main.c    **** 
 821              		.loc 1 377 1 view .LVU208
 822 000c 05B0     		add	sp, sp, #20
 823              	.LCFI16:
 824              		.cfi_remember_state
 825              		.cfi_def_cfa_offset 4
 826              		@ sp needed
 827 000e 5DF804FB 		ldr	pc, [sp], #4
 828              	.LVL79:
 829              	.L60:
 830              	.LCFI17:
 831              		.cfi_restore_state
 375:Src/main.c    ****     }
 832              		.loc 1 375 9 is_stmt 1 view .LVU209
 375:Src/main.c    ****     }
 833              		.loc 1 375 51 is_stmt 0 view .LVU210
 834 0012 FFF7FEFF 		bl	HAL_GetTick
 835              	.LVL80:
 375:Src/main.c    ****     }
 836              		.loc 1 375 9 view .LVU211
 837 0016 4FF47A72 		mov	r2, #1000
ARM GAS  /tmp/ccnv1VBl.s 			page 33


 838 001a 02FB00F2 		mul	r2, r2, r0
 839 001e 0023     		movs	r3, #0
 840 0020 6946     		mov	r1, sp
 841 0022 0248     		ldr	r0, .L61
 842 0024 FFF7FEFF 		bl	canardHandleRxFrame
 843              	.LVL81:
 377:Src/main.c    **** 
 844              		.loc 1 377 1 view .LVU212
 845 0028 F0E7     		b	.L57
 846              	.L62:
 847 002a 00BF     		.align	2
 848              	.L61:
 849 002c 00000000 		.word	.LANCHOR0
 850              		.cfi_endproc
 851              	.LFE134:
 853              		.section	.text.spinCanard,"ax",%progbits
 854              		.align	1
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv4-sp-d16
 860              	spinCanard:
 861              	.LFB130:
 260:Src/main.c    **** 
 862              		.loc 1 260 1 is_stmt 1 view -0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 8
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866 0000 10B5     		push	{r4, lr}
 867              	.LCFI18:
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 4, -8
 870              		.cfi_offset 14, -4
 871 0002 88B0     		sub	sp, sp, #32
 872              	.LCFI19:
 873              		.cfi_def_cfa_offset 40
 263:Src/main.c    ****     if (HAL_GetTick() < spin_time + CANARD_SPIN_PERIOD) {
 874              		.loc 1 263 2 view .LVU214
 264:Src/main.c    **** 	    return; }  // rate limiting
 875              		.loc 1 264 5 view .LVU215
 264:Src/main.c    **** 	    return; }  // rate limiting
 876              		.loc 1 264 9 is_stmt 0 view .LVU216
 877 0004 FFF7FEFF 		bl	HAL_GetTick
 878              	.LVL82:
 264:Src/main.c    **** 	    return; }  // rate limiting
 879              		.loc 1 264 35 view .LVU217
 880 0008 174B     		ldr	r3, .L68+8
 881 000a 1B68     		ldr	r3, [r3]
 882 000c 03F57A73 		add	r3, r3, #1000
 264:Src/main.c    **** 	    return; }  // rate limiting
 883              		.loc 1 264 8 view .LVU218
 884 0010 9842     		cmp	r0, r3
 885 0012 01D2     		bcs	.L67
 886              	.L63:
 304:Src/main.c    **** 
 887              		.loc 1 304 1 view .LVU219
 888 0014 08B0     		add	sp, sp, #32
ARM GAS  /tmp/ccnv1VBl.s 			page 34


 889              	.LCFI20:
 890              		.cfi_remember_state
 891              		.cfi_def_cfa_offset 8
 892              		@ sp needed
 893 0016 10BD     		pop	{r4, pc}
 894              	.L67:
 895              	.LCFI21:
 896              		.cfi_restore_state
 266:Src/main.c    ****          HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 897              		.loc 1 266 5 is_stmt 1 view .LVU220
 266:Src/main.c    ****          HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 898              		.loc 1 266 17 is_stmt 0 view .LVU221
 899 0018 FFF7FEFF 		bl	HAL_GetTick
 900              	.LVL83:
 266:Src/main.c    ****          HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 901              		.loc 1 266 15 view .LVU222
 902 001c 124B     		ldr	r3, .L68+8
 903 001e 1860     		str	r0, [r3]
 267:Src/main.c    **** 
 904              		.loc 1 267 10 is_stmt 1 view .LVU223
 905 0020 0121     		movs	r1, #1
 906 0022 4FF09040 		mov	r0, #1207959552
 907 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 908              	.LVL84:
 272:Src/main.c    ****     static uint8_t transfer_id = 0;                          // This variable MUST BE STATIC; refer
 909              		.loc 1 272 5 view .LVU224
 273:Src/main.c    ****      HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 910              		.loc 1 273 5 view .LVU225
 274:Src/main.c    **** 
 911              		.loc 1 274 6 view .LVU226
 912 002a 0121     		movs	r1, #1
 913 002c 4FF09040 		mov	r0, #1207959552
 914 0030 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 915              	.LVL85:
 276:Src/main.c    **** 
 916              		.loc 1 276 6 view .LVU227
 917 0034 06AC     		add	r4, sp, #24
 918 0036 2046     		mov	r0, r4
 919 0038 FFF7FEFF 		bl	makeNodeStatusMessage
 920              	.LVL86:
 278:Src/main.c    ****                     UAVCAN_NODE_STATUS_DATA_TYPE_SIGNATURE,
 921              		.loc 1 278 6 view .LVU228
 922 003c 0723     		movs	r3, #7
 923 003e 0493     		str	r3, [sp, #16]
 924 0040 0394     		str	r4, [sp, #12]
 925 0042 1823     		movs	r3, #24
 926 0044 0293     		str	r3, [sp, #8]
 927 0046 094B     		ldr	r3, .L68+12
 928 0048 0193     		str	r3, [sp, #4]
 929 004a 40F25513 		movw	r3, #341
 930 004e 0093     		str	r3, [sp]
 931 0050 03A3     		adr	r3, .L68
 932 0052 D3E90023 		ldrd	r2, [r3]
 933 0056 0648     		ldr	r0, .L68+16
 934 0058 FFF7FEFF 		bl	canardBroadcast
 935              	.LVL87:
 936 005c DAE7     		b	.L63
ARM GAS  /tmp/ccnv1VBl.s 			page 35


 937              	.L69:
 938 005e 00BF     		.align	3
 939              	.L68:
 940 0060 F1C6A7C1 		.word	-1045969167
 941 0064 D068080F 		.word	252209360
 942 0068 00000000 		.word	.LANCHOR3
 943 006c 00000000 		.word	.LANCHOR4
 944 0070 00000000 		.word	.LANCHOR0
 945              		.cfi_endproc
 946              	.LFE130:
 948              		.section	.text.encodeParamCanard,"ax",%progbits
 949              		.align	1
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	encodeParamCanard:
 956              	.LVL88:
 957              	.LFB143:
 600:Src/main.c    **** 
 601:Src/main.c    **** 
 602:Src/main.c    **** 
 603:Src/main.c    **** 
 604:Src/main.c    **** //helpers
 605:Src/main.c    **** static inline param_t* getParamByIndex(uint16_t index)
 606:Src/main.c    **** {
 607:Src/main.c    ****     if (index >= ARRAY_SIZE(parameters))
 608:Src/main.c    ****     {
 609:Src/main.c    ****         return NULL;
 610:Src/main.c    ****     }
 611:Src/main.c    ****     return &parameters[index];
 612:Src/main.c    **** }
 613:Src/main.c    ****  
 614:Src/main.c    ****  
 615:Src/main.c    **** static inline param_t* getParamByName(uint8_t * name)
 616:Src/main.c    **** {
 617:Src/main.c    ****     for (uint16_t i = 0; i < ARRAY_SIZE(parameters); i++)
 618:Src/main.c    ****     {
 619:Src/main.c    ****         if (strncmp(name, parameters[i].name, strlen(parameters[i].name)) == 0)
 620:Src/main.c    ****         {
 621:Src/main.c    ****               return &parameters[i];
 622:Src/main.c    ****         }
 623:Src/main.c    ****     } 
 624:Src/main.c    ****     return NULL;
 625:Src/main.c    **** }
 626:Src/main.c    **** 
 627:Src/main.c    **** static uint16_t encodeParamCanard(param_t * p, uint8_t * buffer)
 628:Src/main.c    **** {
 958              		.loc 1 628 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 8
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              		.loc 1 628 1 is_stmt 0 view .LVU230
 963 0000 70B5     		push	{r4, r5, r6, lr}
 964              	.LCFI22:
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 4, -16
ARM GAS  /tmp/ccnv1VBl.s 			page 36


 967              		.cfi_offset 5, -12
 968              		.cfi_offset 6, -8
 969              		.cfi_offset 14, -4
 970 0002 82B0     		sub	sp, sp, #8
 971              	.LCFI23:
 972              		.cfi_def_cfa_offset 24
 973 0004 0C46     		mov	r4, r1
 629:Src/main.c    ****     uint8_t n     = 0;
 974              		.loc 1 629 5 is_stmt 1 view .LVU231
 975              		.loc 1 629 13 is_stmt 0 view .LVU232
 976 0006 0023     		movs	r3, #0
 977 0008 8DF80730 		strb	r3, [sp, #7]
 630:Src/main.c    ****     int offset    = 0;
 978              		.loc 1 630 5 is_stmt 1 view .LVU233
 979              	.LVL89:
 631:Src/main.c    ****     uint8_t tag   = 1;
 980              		.loc 1 631 5 view .LVU234
 981              		.loc 1 631 13 is_stmt 0 view .LVU235
 982 000c 0123     		movs	r3, #1
 983 000e 8DF80630 		strb	r3, [sp, #6]
 632:Src/main.c    ****  
 633:Src/main.c    ****     if (p == NULL)
 984              		.loc 1 633 5 is_stmt 1 view .LVU236
 985              		.loc 1 633 8 is_stmt 0 view .LVU237
 986 0012 0028     		cmp	r0, #0
 987 0014 65D0     		beq	.L74
 988 0016 0546     		mov	r5, r0
 634:Src/main.c    ****     {  
 635:Src/main.c    ****         tag = 0;
 636:Src/main.c    ****         canardEncodeScalar(buffer, offset, 5, &n);
 637:Src/main.c    ****         offset += 5;
 638:Src/main.c    ****         canardEncodeScalar(buffer, offset,3, &tag);
 639:Src/main.c    ****         offset += 3;
 640:Src/main.c    ****      
 641:Src/main.c    ****         canardEncodeScalar(buffer, offset, 6, &n);
 642:Src/main.c    ****         offset += 6;
 643:Src/main.c    ****         canardEncodeScalar(buffer, offset,2, &tag);
 644:Src/main.c    ****         offset += 2;
 645:Src/main.c    ****      
 646:Src/main.c    ****         canardEncodeScalar(buffer, offset, 6, &n);
 647:Src/main.c    ****         offset += 6;
 648:Src/main.c    ****         canardEncodeScalar(buffer, offset, 2, &tag);
 649:Src/main.c    ****         offset += 2;
 650:Src/main.c    ****         buffer[offset / 8] = 0;
 651:Src/main.c    ****         return ( offset / 8 + 1 );
 652:Src/main.c    ****     }
 653:Src/main.c    ****  
 654:Src/main.c    ****     canardEncodeScalar(buffer, offset, 5,&n);
 989              		.loc 1 654 5 is_stmt 1 view .LVU238
 990 0018 0DF10703 		add	r3, sp, #7
 991 001c 0522     		movs	r2, #5
 992 001e 0021     		movs	r1, #0
 993              	.LVL90:
 994              		.loc 1 654 5 is_stmt 0 view .LVU239
 995 0020 2046     		mov	r0, r4
 996              	.LVL91:
 997              		.loc 1 654 5 view .LVU240
ARM GAS  /tmp/ccnv1VBl.s 			page 37


 998 0022 FFF7FEFF 		bl	canardEncodeScalar
 999              	.LVL92:
 655:Src/main.c    ****     offset += 5;
 1000              		.loc 1 655 5 is_stmt 1 view .LVU241
 656:Src/main.c    ****     canardEncodeScalar(buffer, offset, 3, &tag);
 1001              		.loc 1 656 5 view .LVU242
 1002 0026 0DF10603 		add	r3, sp, #6
 1003 002a 0322     		movs	r2, #3
 1004 002c 0521     		movs	r1, #5
 1005 002e 2046     		mov	r0, r4
 1006 0030 FFF7FEFF 		bl	canardEncodeScalar
 1007              	.LVL93:
 657:Src/main.c    ****     offset += 3;
 1008              		.loc 1 657 5 view .LVU243
 658:Src/main.c    ****     canardEncodeScalar(buffer, offset, 64, &p->val);
 1009              		.loc 1 658 5 view .LVU244
 1010 0034 05F10803 		add	r3, r5, #8
 1011 0038 4022     		movs	r2, #64
 1012 003a 0821     		movs	r1, #8
 1013 003c 2046     		mov	r0, r4
 1014 003e FFF7FEFF 		bl	canardEncodeScalar
 1015              	.LVL94:
 659:Src/main.c    ****     offset += 64;
 1016              		.loc 1 659 5 view .LVU245
 660:Src/main.c    ****  
 661:Src/main.c    ****     canardEncodeScalar(buffer, offset, 5, &n);
 1017              		.loc 1 661 5 view .LVU246
 1018 0042 0DF10703 		add	r3, sp, #7
 1019 0046 0522     		movs	r2, #5
 1020 0048 4821     		movs	r1, #72
 1021 004a 2046     		mov	r0, r4
 1022 004c FFF7FEFF 		bl	canardEncodeScalar
 1023              	.LVL95:
 662:Src/main.c    ****     offset += 5;
 1024              		.loc 1 662 5 view .LVU247
 663:Src/main.c    ****     canardEncodeScalar(buffer, offset, 3, &tag);
 1025              		.loc 1 663 5 view .LVU248
 1026 0050 0DF10603 		add	r3, sp, #6
 1027 0054 0322     		movs	r2, #3
 1028 0056 4D21     		movs	r1, #77
 1029 0058 2046     		mov	r0, r4
 1030 005a FFF7FEFF 		bl	canardEncodeScalar
 1031              	.LVL96:
 664:Src/main.c    ****     offset += 3;
 1032              		.loc 1 664 5 view .LVU249
 665:Src/main.c    ****     canardEncodeScalar(buffer, offset, 64, &p->defval);
 1033              		.loc 1 665 5 view .LVU250
 1034 005e 05F12003 		add	r3, r5, #32
 1035 0062 4022     		movs	r2, #64
 1036 0064 5021     		movs	r1, #80
 1037 0066 2046     		mov	r0, r4
 1038 0068 FFF7FEFF 		bl	canardEncodeScalar
 1039              	.LVL97:
 666:Src/main.c    ****     offset += 64;
 1040              		.loc 1 666 5 view .LVU251
 667:Src/main.c    ****  
 668:Src/main.c    ****     canardEncodeScalar(buffer, offset, 6, &n);
ARM GAS  /tmp/ccnv1VBl.s 			page 38


 1041              		.loc 1 668 5 view .LVU252
 1042 006c 0DF10703 		add	r3, sp, #7
 1043 0070 0622     		movs	r2, #6
 1044 0072 9021     		movs	r1, #144
 1045 0074 2046     		mov	r0, r4
 1046 0076 FFF7FEFF 		bl	canardEncodeScalar
 1047              	.LVL98:
 669:Src/main.c    ****     offset += 6;
 1048              		.loc 1 669 5 view .LVU253
 670:Src/main.c    ****     canardEncodeScalar(buffer, offset, 2, &tag);
 1049              		.loc 1 670 5 view .LVU254
 1050 007a 0DF10603 		add	r3, sp, #6
 1051 007e 0222     		movs	r2, #2
 1052 0080 9621     		movs	r1, #150
 1053 0082 2046     		mov	r0, r4
 1054 0084 FFF7FEFF 		bl	canardEncodeScalar
 1055              	.LVL99:
 671:Src/main.c    ****     offset += 2;
 1056              		.loc 1 671 5 view .LVU255
 672:Src/main.c    ****     canardEncodeScalar(buffer, offset, 64, &p->max);
 1057              		.loc 1 672 5 view .LVU256
 1058 0088 05F11803 		add	r3, r5, #24
 1059 008c 4022     		movs	r2, #64
 1060 008e 9821     		movs	r1, #152
 1061 0090 2046     		mov	r0, r4
 1062 0092 FFF7FEFF 		bl	canardEncodeScalar
 1063              	.LVL100:
 673:Src/main.c    ****     offset += 64;
 1064              		.loc 1 673 5 view .LVU257
 674:Src/main.c    ****  
 675:Src/main.c    ****     canardEncodeScalar(buffer, offset, 6, &n);
 1065              		.loc 1 675 5 view .LVU258
 1066 0096 0DF10703 		add	r3, sp, #7
 1067 009a 0622     		movs	r2, #6
 1068 009c D821     		movs	r1, #216
 1069 009e 2046     		mov	r0, r4
 1070 00a0 FFF7FEFF 		bl	canardEncodeScalar
 1071              	.LVL101:
 676:Src/main.c    ****     offset += 6;
 1072              		.loc 1 676 5 view .LVU259
 677:Src/main.c    ****     canardEncodeScalar(buffer, offset,2,&tag);
 1073              		.loc 1 677 5 view .LVU260
 1074 00a4 0DF10603 		add	r3, sp, #6
 1075 00a8 0222     		movs	r2, #2
 1076 00aa DE21     		movs	r1, #222
 1077 00ac 2046     		mov	r0, r4
 1078 00ae FFF7FEFF 		bl	canardEncodeScalar
 1079              	.LVL102:
 678:Src/main.c    ****     offset += 2;
 1080              		.loc 1 678 5 view .LVU261
 679:Src/main.c    ****     canardEncodeScalar(buffer, offset,64,&p->min);
 1081              		.loc 1 679 5 view .LVU262
 1082 00b2 05F11003 		add	r3, r5, #16
 1083 00b6 4022     		movs	r2, #64
 1084 00b8 E021     		movs	r1, #224
 1085 00ba 2046     		mov	r0, r4
 1086 00bc FFF7FEFF 		bl	canardEncodeScalar
ARM GAS  /tmp/ccnv1VBl.s 			page 39


 1087              	.LVL103:
 680:Src/main.c    ****     offset += 64;
 1088              		.loc 1 680 5 view .LVU263
 681:Src/main.c    ****  
 682:Src/main.c    ****     memcpy(&buffer[offset / 8], p->name, strlen((char const*)p->name));
 1089              		.loc 1 682 5 view .LVU264
 1090              		.loc 1 682 12 is_stmt 0 view .LVU265
 1091 00c0 2434     		adds	r4, r4, #36
 1092              	.LVL104:
 1093              		.loc 1 682 34 view .LVU266
 1094 00c2 2E68     		ldr	r6, [r5]
 1095              		.loc 1 682 5 view .LVU267
 1096 00c4 3046     		mov	r0, r6
 1097 00c6 FFF7FEFF 		bl	strlen
 1098              	.LVL105:
 1099 00ca 0246     		mov	r2, r0
 1100 00cc 3146     		mov	r1, r6
 1101 00ce 2046     		mov	r0, r4
 1102 00d0 FFF7FEFF 		bl	memcpy
 1103              	.LVL106:
 683:Src/main.c    ****     /* See important note below */
 684:Src/main.c    ****     return  (offset/8 + strlen((char const*)p->name));
 1104              		.loc 1 684 5 is_stmt 1 view .LVU268
 1105              		.loc 1 684 25 is_stmt 0 view .LVU269
 1106 00d4 2868     		ldr	r0, [r5]
 1107 00d6 FFF7FEFF 		bl	strlen
 1108              	.LVL107:
 1109              		.loc 1 684 23 view .LVU270
 1110 00da 2430     		adds	r0, r0, #36
 1111 00dc 80B2     		uxth	r0, r0
 1112              	.LVL108:
 1113              	.L72:
 685:Src/main.c    **** 
 686:Src/main.c    **** }
 1114              		.loc 1 686 1 view .LVU271
 1115 00de 02B0     		add	sp, sp, #8
 1116              	.LCFI24:
 1117              		.cfi_remember_state
 1118              		.cfi_def_cfa_offset 16
 1119              		@ sp needed
 1120 00e0 70BD     		pop	{r4, r5, r6, pc}
 1121              	.LVL109:
 1122              	.L74:
 1123              	.LCFI25:
 1124              		.cfi_restore_state
 635:Src/main.c    ****         canardEncodeScalar(buffer, offset, 5, &n);
 1125              		.loc 1 635 9 is_stmt 1 view .LVU272
 635:Src/main.c    ****         canardEncodeScalar(buffer, offset, 5, &n);
 1126              		.loc 1 635 13 is_stmt 0 view .LVU273
 1127 00e2 0025     		movs	r5, #0
 1128 00e4 8DF80650 		strb	r5, [sp, #6]
 636:Src/main.c    ****         offset += 5;
 1129              		.loc 1 636 9 is_stmt 1 view .LVU274
 1130 00e8 0DF10703 		add	r3, sp, #7
 1131 00ec 0522     		movs	r2, #5
 1132 00ee 2946     		mov	r1, r5
 1133              	.LVL110:
ARM GAS  /tmp/ccnv1VBl.s 			page 40


 636:Src/main.c    ****         offset += 5;
 1134              		.loc 1 636 9 is_stmt 0 view .LVU275
 1135 00f0 2046     		mov	r0, r4
 1136              	.LVL111:
 636:Src/main.c    ****         offset += 5;
 1137              		.loc 1 636 9 view .LVU276
 1138 00f2 FFF7FEFF 		bl	canardEncodeScalar
 1139              	.LVL112:
 637:Src/main.c    ****         canardEncodeScalar(buffer, offset,3, &tag);
 1140              		.loc 1 637 9 is_stmt 1 view .LVU277
 638:Src/main.c    ****         offset += 3;
 1141              		.loc 1 638 9 view .LVU278
 1142 00f6 0DF10603 		add	r3, sp, #6
 1143 00fa 0322     		movs	r2, #3
 1144 00fc 0521     		movs	r1, #5
 1145 00fe 2046     		mov	r0, r4
 1146 0100 FFF7FEFF 		bl	canardEncodeScalar
 1147              	.LVL113:
 639:Src/main.c    ****      
 1148              		.loc 1 639 9 view .LVU279
 641:Src/main.c    ****         offset += 6;
 1149              		.loc 1 641 9 view .LVU280
 1150 0104 0DF10703 		add	r3, sp, #7
 1151 0108 0622     		movs	r2, #6
 1152 010a 0821     		movs	r1, #8
 1153 010c 2046     		mov	r0, r4
 1154 010e FFF7FEFF 		bl	canardEncodeScalar
 1155              	.LVL114:
 642:Src/main.c    ****         canardEncodeScalar(buffer, offset,2, &tag);
 1156              		.loc 1 642 9 view .LVU281
 643:Src/main.c    ****         offset += 2;
 1157              		.loc 1 643 9 view .LVU282
 1158 0112 0DF10603 		add	r3, sp, #6
 1159 0116 0222     		movs	r2, #2
 1160 0118 0E21     		movs	r1, #14
 1161 011a 2046     		mov	r0, r4
 1162 011c FFF7FEFF 		bl	canardEncodeScalar
 1163              	.LVL115:
 644:Src/main.c    ****      
 1164              		.loc 1 644 9 view .LVU283
 646:Src/main.c    ****         offset += 6;
 1165              		.loc 1 646 9 view .LVU284
 1166 0120 0DF10703 		add	r3, sp, #7
 1167 0124 0622     		movs	r2, #6
 1168 0126 1021     		movs	r1, #16
 1169 0128 2046     		mov	r0, r4
 1170 012a FFF7FEFF 		bl	canardEncodeScalar
 1171              	.LVL116:
 647:Src/main.c    ****         canardEncodeScalar(buffer, offset, 2, &tag);
 1172              		.loc 1 647 9 view .LVU285
 648:Src/main.c    ****         offset += 2;
 1173              		.loc 1 648 9 view .LVU286
 1174 012e 0DF10603 		add	r3, sp, #6
 1175 0132 0222     		movs	r2, #2
 1176 0134 1621     		movs	r1, #22
 1177 0136 2046     		mov	r0, r4
 1178 0138 FFF7FEFF 		bl	canardEncodeScalar
ARM GAS  /tmp/ccnv1VBl.s 			page 41


 1179              	.LVL117:
 649:Src/main.c    ****         buffer[offset / 8] = 0;
 1180              		.loc 1 649 9 view .LVU287
 650:Src/main.c    ****         return ( offset / 8 + 1 );
 1181              		.loc 1 650 9 view .LVU288
 650:Src/main.c    ****         return ( offset / 8 + 1 );
 1182              		.loc 1 650 28 is_stmt 0 view .LVU289
 1183 013c E570     		strb	r5, [r4, #3]
 651:Src/main.c    ****     }
 1184              		.loc 1 651 9 is_stmt 1 view .LVU290
 651:Src/main.c    ****     }
 1185              		.loc 1 651 29 is_stmt 0 view .LVU291
 1186 013e 0420     		movs	r0, #4
 1187 0140 CDE7     		b	.L72
 1188              		.cfi_endproc
 1189              	.LFE143:
 1191              		.section	.text.SystemClock_Config,"ax",%progbits
 1192              		.align	1
 1193              		.global	SystemClock_Config
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1197              		.fpu fpv4-sp-d16
 1199              	SystemClock_Config:
 1200              	.LFB135:
 392:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1201              		.loc 1 392 1 is_stmt 1 view -0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 120
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205 0000 30B5     		push	{r4, r5, lr}
 1206              	.LCFI26:
 1207              		.cfi_def_cfa_offset 12
 1208              		.cfi_offset 4, -12
 1209              		.cfi_offset 5, -8
 1210              		.cfi_offset 14, -4
 1211 0002 9FB0     		sub	sp, sp, #124
 1212              	.LCFI27:
 1213              		.cfi_def_cfa_offset 136
 393:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1214              		.loc 1 393 3 view .LVU293
 393:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1215              		.loc 1 393 22 is_stmt 0 view .LVU294
 1216 0004 0024     		movs	r4, #0
 1217 0006 1794     		str	r4, [sp, #92]
 1218 0008 1994     		str	r4, [sp, #100]
 1219 000a 1A94     		str	r4, [sp, #104]
 394:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1220              		.loc 1 394 3 is_stmt 1 view .LVU295
 394:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1221              		.loc 1 394 22 is_stmt 0 view .LVU296
 1222 000c 0F94     		str	r4, [sp, #60]
 1223 000e 1094     		str	r4, [sp, #64]
 1224 0010 1194     		str	r4, [sp, #68]
 1225 0012 1294     		str	r4, [sp, #72]
 1226 0014 1394     		str	r4, [sp, #76]
 395:Src/main.c    **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 42


 1227              		.loc 1 395 3 is_stmt 1 view .LVU297
 395:Src/main.c    **** 
 1228              		.loc 1 395 28 is_stmt 0 view .LVU298
 1229 0016 3C22     		movs	r2, #60
 1230 0018 2146     		mov	r1, r4
 1231 001a 6846     		mov	r0, sp
 1232 001c FFF7FEFF 		bl	memset
 1233              	.LVL118:
 399:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1234              		.loc 1 399 3 is_stmt 1 view .LVU299
 399:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1235              		.loc 1 399 36 is_stmt 0 view .LVU300
 1236 0020 0125     		movs	r5, #1
 1237 0022 1495     		str	r5, [sp, #80]
 400:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 1238              		.loc 1 400 3 is_stmt 1 view .LVU301
 400:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 1239              		.loc 1 400 30 is_stmt 0 view .LVU302
 1240 0024 4FF48033 		mov	r3, #65536
 1241 0028 1593     		str	r3, [sp, #84]
 401:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1242              		.loc 1 401 3 is_stmt 1 view .LVU303
 401:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1243              		.loc 1 401 36 is_stmt 0 view .LVU304
 1244 002a 1695     		str	r5, [sp, #88]
 402:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1245              		.loc 1 402 3 is_stmt 1 view .LVU305
 402:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1246              		.loc 1 402 30 is_stmt 0 view .LVU306
 1247 002c 1895     		str	r5, [sp, #96]
 403:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1248              		.loc 1 403 3 is_stmt 1 view .LVU307
 403:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1249              		.loc 1 403 34 is_stmt 0 view .LVU308
 1250 002e 0222     		movs	r2, #2
 1251 0030 1B92     		str	r2, [sp, #108]
 404:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1252              		.loc 1 404 3 is_stmt 1 view .LVU309
 404:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1253              		.loc 1 404 35 is_stmt 0 view .LVU310
 1254 0032 1C93     		str	r3, [sp, #112]
 405:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1255              		.loc 1 405 3 is_stmt 1 view .LVU311
 405:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1256              		.loc 1 405 32 is_stmt 0 view .LVU312
 1257 0034 4FF4E013 		mov	r3, #1835008
 1258 0038 1D93     		str	r3, [sp, #116]
 406:Src/main.c    ****   {
 1259              		.loc 1 406 3 is_stmt 1 view .LVU313
 406:Src/main.c    ****   {
 1260              		.loc 1 406 7 is_stmt 0 view .LVU314
 1261 003a 14A8     		add	r0, sp, #80
 1262 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1263              	.LVL119:
 412:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1264              		.loc 1 412 3 is_stmt 1 view .LVU315
 412:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccnv1VBl.s 			page 43


 1265              		.loc 1 412 31 is_stmt 0 view .LVU316
 1266 0040 0F23     		movs	r3, #15
 1267 0042 0F93     		str	r3, [sp, #60]
 414:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1268              		.loc 1 414 3 is_stmt 1 view .LVU317
 414:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1269              		.loc 1 414 34 is_stmt 0 view .LVU318
 1270 0044 1095     		str	r5, [sp, #64]
 415:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1271              		.loc 1 415 3 is_stmt 1 view .LVU319
 415:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1272              		.loc 1 415 35 is_stmt 0 view .LVU320
 1273 0046 1194     		str	r4, [sp, #68]
 416:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1274              		.loc 1 416 3 is_stmt 1 view .LVU321
 416:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1275              		.loc 1 416 36 is_stmt 0 view .LVU322
 1276 0048 4FF48063 		mov	r3, #1024
 1277 004c 1293     		str	r3, [sp, #72]
 417:Src/main.c    **** 
 1278              		.loc 1 417 3 is_stmt 1 view .LVU323
 417:Src/main.c    **** 
 1279              		.loc 1 417 36 is_stmt 0 view .LVU324
 1280 004e 1394     		str	r4, [sp, #76]
 419:Src/main.c    ****   {
 1281              		.loc 1 419 3 is_stmt 1 view .LVU325
 419:Src/main.c    ****   {
 1282              		.loc 1 419 7 is_stmt 0 view .LVU326
 1283 0050 2146     		mov	r1, r4
 1284 0052 0FA8     		add	r0, sp, #60
 1285 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1286              	.LVL120:
 423:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 1287              		.loc 1 423 3 is_stmt 1 view .LVU327
 423:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 1288              		.loc 1 423 38 is_stmt 0 view .LVU328
 1289 0058 8423     		movs	r3, #132
 1290 005a 0093     		str	r3, [sp]
 424:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 1291              		.loc 1 424 3 is_stmt 1 view .LVU329
 424:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 1292              		.loc 1 424 38 is_stmt 0 view .LVU330
 1293 005c 0494     		str	r4, [sp, #16]
 425:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1294              		.loc 1 425 3 is_stmt 1 view .LVU331
 425:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1295              		.loc 1 425 37 is_stmt 0 view .LVU332
 1296 005e 4FF48073 		mov	r3, #256
 1297 0062 0993     		str	r3, [sp, #36]
 426:Src/main.c    ****   {
 1298              		.loc 1 426 3 is_stmt 1 view .LVU333
 426:Src/main.c    ****   {
 1299              		.loc 1 426 7 is_stmt 0 view .LVU334
 1300 0064 6846     		mov	r0, sp
 1301 0066 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1302              	.LVL121:
 430:Src/main.c    **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 44


 1303              		.loc 1 430 1 view .LVU335
 1304 006a 1FB0     		add	sp, sp, #124
 1305              	.LCFI28:
 1306              		.cfi_def_cfa_offset 12
 1307              		@ sp needed
 1308 006c 30BD     		pop	{r4, r5, pc}
 1309              		.cfi_endproc
 1310              	.LFE135:
 1312              		.section	.text.setDriver,"ax",%progbits
 1313              		.align	1
 1314              		.global	setDriver
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	setDriver:
 1321              	.LVL122:
 1322              	.LFB136:
 433:Src/main.c    ****       if(driverState & (1<<driverBit)){
 1323              		.loc 1 433 81 is_stmt 1 view -0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 433:Src/main.c    ****       if(driverState & (1<<driverBit)){
 1327              		.loc 1 433 81 is_stmt 0 view .LVU337
 1328 0000 08B5     		push	{r3, lr}
 1329              	.LCFI29:
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 3, -8
 1332              		.cfi_offset 14, -4
 434:Src/main.c    ****          HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_SET);
 1333              		.loc 1 434 7 is_stmt 1 view .LVU338
 434:Src/main.c    ****          HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_SET);
 1334              		.loc 1 434 10 is_stmt 0 view .LVU339
 1335 0002 1341     		asrs	r3, r3, r2
 1336              	.LVL123:
 434:Src/main.c    ****          HAL_GPIO_WritePin(gpioBank, pin, GPIO_PIN_SET);
 1337              		.loc 1 434 9 view .LVU340
 1338 0004 13F0010F 		tst	r3, #1
 1339 0008 04D0     		beq	.L78
 435:Src/main.c    ****       }else{          
 1340              		.loc 1 435 10 is_stmt 1 view .LVU341
 1341 000a 0122     		movs	r2, #1
 1342              	.LVL124:
 435:Src/main.c    ****       }else{          
 1343              		.loc 1 435 10 is_stmt 0 view .LVU342
 1344 000c 89B2     		uxth	r1, r1
 1345              	.LVL125:
 435:Src/main.c    ****       }else{          
 1346              		.loc 1 435 10 view .LVU343
 1347 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1348              	.LVL126:
 1349              	.L77:
 439:Src/main.c    **** 
 1350              		.loc 1 439 1 view .LVU344
 1351 0012 08BD     		pop	{r3, pc}
 1352              	.LVL127:
ARM GAS  /tmp/ccnv1VBl.s 			page 45


 1353              	.L78:
 437:Src/main.c    ****       }                           
 1354              		.loc 1 437 9 is_stmt 1 view .LVU345
 1355 0014 0022     		movs	r2, #0
 1356              	.LVL128:
 437:Src/main.c    ****       }                           
 1357              		.loc 1 437 9 is_stmt 0 view .LVU346
 1358 0016 89B2     		uxth	r1, r1
 1359              	.LVL129:
 437:Src/main.c    ****       }                           
 1360              		.loc 1 437 9 view .LVU347
 1361 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1362              	.LVL130:
 439:Src/main.c    **** 
 1363              		.loc 1 439 1 view .LVU348
 1364 001c F9E7     		b	.L77
 1365              		.cfi_endproc
 1366              	.LFE136:
 1368              		.section	.text.main,"ax",%progbits
 1369              		.align	1
 1370              		.global	main
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1374              		.fpu fpv4-sp-d16
 1376              	main:
 1377              	.LFB137:
 444:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 1378              		.loc 1 444 1 is_stmt 1 view -0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 1382 0000 70B5     		push	{r4, r5, r6, lr}
 1383              	.LCFI30:
 1384              		.cfi_def_cfa_offset 16
 1385              		.cfi_offset 4, -16
 1386              		.cfi_offset 5, -12
 1387              		.cfi_offset 6, -8
 1388              		.cfi_offset 14, -4
 446:Src/main.c    ****  
 1389              		.loc 1 446 3 view .LVU350
 1390 0002 FFF7FEFF 		bl	HAL_Init
 1391              	.LVL131:
 449:Src/main.c    ****   SysTick_Config(SystemCoreClock / 1000); // To make systick event happen every 1 ms
 1392              		.loc 1 449 3 view .LVU351
 1393 0006 FFF7FEFF 		bl	SystemClock_Config
 1394              	.LVL132:
 450:Src/main.c    **** 
 1395              		.loc 1 450 3 view .LVU352
 1396 000a 534B     		ldr	r3, .L92
 1397 000c 1B68     		ldr	r3, [r3]
 1398 000e 534A     		ldr	r2, .L92+4
 1399 0010 A2FB0323 		umull	r2, r3, r2, r3
 1400 0014 9B09     		lsrs	r3, r3, #6
 1401              	.LVL133:
 1402              	.LBB32:
 1403              	.LBI32:
ARM GAS  /tmp/ccnv1VBl.s 			page 46


 1404              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm4.h **** 
   9:Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm4.h ****    *
  21:Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** 
  35:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm4.h **** #endif
  40:Drivers/CMSIS/Include/core_cm4.h **** 
  41:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm4.h **** 
  46:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm4.h **** #endif
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h **** /**
  51:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 47


  57:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm4.h **** 
  60:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm4.h ****  */
  63:Drivers/CMSIS/Include/core_cm4.h **** 
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm4.h **** /**
  69:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  70:Drivers/CMSIS/Include/core_cm4.h ****   @{
  71:Drivers/CMSIS/Include/core_cm4.h ****  */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm4.h **** 
  79:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm4.h **** 
  81:Drivers/CMSIS/Include/core_cm4.h **** 
  82:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm4.h **** 
  87:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm4.h **** 
  92:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm4.h **** 
  97:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm4.h **** 
 102:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm4.h **** 
 106:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm4.h **** 
 111:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm4.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
ARM GAS  /tmp/ccnv1VBl.s 			page 48


 114:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm4.h **** 
 117:Drivers/CMSIS/Include/core_cm4.h **** #else
 118:Drivers/CMSIS/Include/core_cm4.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm4.h **** #endif
 120:Drivers/CMSIS/Include/core_cm4.h **** 
 121:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:Drivers/CMSIS/Include/core_cm4.h **** */
 124:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 162:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:Drivers/CMSIS/Include/core_cm4.h ****     #else
 165:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 168:Drivers/CMSIS/Include/core_cm4.h ****   #else
 169:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:Drivers/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  /tmp/ccnv1VBl.s 			page 49


 171:Drivers/CMSIS/Include/core_cm4.h **** 
 172:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 173:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 176:Drivers/CMSIS/Include/core_cm4.h ****     #else
 177:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 179:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 180:Drivers/CMSIS/Include/core_cm4.h ****   #else
 181:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 182:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 183:Drivers/CMSIS/Include/core_cm4.h **** 
 184:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 185:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 186:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 188:Drivers/CMSIS/Include/core_cm4.h ****     #else
 189:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 191:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 192:Drivers/CMSIS/Include/core_cm4.h ****   #else
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 194:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 195:Drivers/CMSIS/Include/core_cm4.h **** 
 196:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 197:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 200:Drivers/CMSIS/Include/core_cm4.h ****     #else
 201:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 203:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 204:Drivers/CMSIS/Include/core_cm4.h ****   #else
 205:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 206:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** #endif
 209:Drivers/CMSIS/Include/core_cm4.h **** 
 210:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:Drivers/CMSIS/Include/core_cm4.h **** 
 214:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 215:Drivers/CMSIS/Include/core_cm4.h **** }
 216:Drivers/CMSIS/Include/core_cm4.h **** #endif
 217:Drivers/CMSIS/Include/core_cm4.h **** 
 218:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:Drivers/CMSIS/Include/core_cm4.h **** 
 220:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:Drivers/CMSIS/Include/core_cm4.h **** 
 222:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:Drivers/CMSIS/Include/core_cm4.h **** 
 225:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 226:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 227:Drivers/CMSIS/Include/core_cm4.h **** #endif
ARM GAS  /tmp/ccnv1VBl.s 			page 50


 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 230:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 232:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 240:Drivers/CMSIS/Include/core_cm4.h **** 
 241:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 245:Drivers/CMSIS/Include/core_cm4.h **** 
 246:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 250:Drivers/CMSIS/Include/core_cm4.h **** 
 251:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 255:Drivers/CMSIS/Include/core_cm4.h **** #endif
 256:Drivers/CMSIS/Include/core_cm4.h **** 
 257:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:Drivers/CMSIS/Include/core_cm4.h **** /**
 259:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:Drivers/CMSIS/Include/core_cm4.h **** */
 265:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 266:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:Drivers/CMSIS/Include/core_cm4.h **** #else
 268:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:Drivers/CMSIS/Include/core_cm4.h **** #endif
 270:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:Drivers/CMSIS/Include/core_cm4.h **** 
 273:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 274:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:Drivers/CMSIS/Include/core_cm4.h **** 
 278:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** 
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 283:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 284:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
ARM GAS  /tmp/ccnv1VBl.s 			page 51


 285:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 286:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 287:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 288:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 289:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 290:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 291:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 292:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 293:Drivers/CMSIS/Include/core_cm4.h **** /**
 294:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:Drivers/CMSIS/Include/core_cm4.h **** */
 297:Drivers/CMSIS/Include/core_cm4.h **** 
 298:Drivers/CMSIS/Include/core_cm4.h **** /**
 299:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 302:Drivers/CMSIS/Include/core_cm4.h ****   @{
 303:Drivers/CMSIS/Include/core_cm4.h ****  */
 304:Drivers/CMSIS/Include/core_cm4.h **** 
 305:Drivers/CMSIS/Include/core_cm4.h **** /**
 306:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:Drivers/CMSIS/Include/core_cm4.h ****  */
 308:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 309:Drivers/CMSIS/Include/core_cm4.h **** {
 310:Drivers/CMSIS/Include/core_cm4.h ****   struct
 311:Drivers/CMSIS/Include/core_cm4.h ****   {
 312:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 323:Drivers/CMSIS/Include/core_cm4.h **** 
 324:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 325:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:Drivers/CMSIS/Include/core_cm4.h **** 
 328:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:Drivers/CMSIS/Include/core_cm4.h **** 
 331:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:Drivers/CMSIS/Include/core_cm4.h **** 
 334:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:Drivers/CMSIS/Include/core_cm4.h **** 
 337:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
ARM GAS  /tmp/ccnv1VBl.s 			page 52


 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** 
 344:Drivers/CMSIS/Include/core_cm4.h **** /**
 345:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:Drivers/CMSIS/Include/core_cm4.h ****  */
 347:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 348:Drivers/CMSIS/Include/core_cm4.h **** {
 349:Drivers/CMSIS/Include/core_cm4.h ****   struct
 350:Drivers/CMSIS/Include/core_cm4.h ****   {
 351:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 358:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** 
 362:Drivers/CMSIS/Include/core_cm4.h **** /**
 363:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:Drivers/CMSIS/Include/core_cm4.h ****  */
 365:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 366:Drivers/CMSIS/Include/core_cm4.h **** {
 367:Drivers/CMSIS/Include/core_cm4.h ****   struct
 368:Drivers/CMSIS/Include/core_cm4.h ****   {
 369:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 383:Drivers/CMSIS/Include/core_cm4.h **** 
 384:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 385:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:Drivers/CMSIS/Include/core_cm4.h **** 
 391:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:Drivers/CMSIS/Include/core_cm4.h **** 
 394:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:Drivers/CMSIS/Include/core_cm4.h **** 
 397:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
ARM GAS  /tmp/ccnv1VBl.s 			page 53


 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:Drivers/CMSIS/Include/core_cm4.h **** 
 406:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:Drivers/CMSIS/Include/core_cm4.h **** 
 409:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:Drivers/CMSIS/Include/core_cm4.h **** 
 412:Drivers/CMSIS/Include/core_cm4.h **** 
 413:Drivers/CMSIS/Include/core_cm4.h **** /**
 414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:Drivers/CMSIS/Include/core_cm4.h ****  */
 416:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 417:Drivers/CMSIS/Include/core_cm4.h **** {
 418:Drivers/CMSIS/Include/core_cm4.h ****   struct
 419:Drivers/CMSIS/Include/core_cm4.h ****   {
 420:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:Drivers/CMSIS/Include/core_cm4.h **** 
 438:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:Drivers/CMSIS/Include/core_cm4.h **** 
 440:Drivers/CMSIS/Include/core_cm4.h **** 
 441:Drivers/CMSIS/Include/core_cm4.h **** /**
 442:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:Drivers/CMSIS/Include/core_cm4.h ****   @{
 446:Drivers/CMSIS/Include/core_cm4.h ****  */
 447:Drivers/CMSIS/Include/core_cm4.h **** 
 448:Drivers/CMSIS/Include/core_cm4.h **** /**
 449:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:Drivers/CMSIS/Include/core_cm4.h ****  */
 451:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 452:Drivers/CMSIS/Include/core_cm4.h **** {
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
ARM GAS  /tmp/ccnv1VBl.s 			page 54


 456:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 467:Drivers/CMSIS/Include/core_cm4.h **** 
 468:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** /**
 476:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:Drivers/CMSIS/Include/core_cm4.h ****   @{
 480:Drivers/CMSIS/Include/core_cm4.h ****  */
 481:Drivers/CMSIS/Include/core_cm4.h **** 
 482:Drivers/CMSIS/Include/core_cm4.h **** /**
 483:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:Drivers/CMSIS/Include/core_cm4.h ****  */
 485:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 486:Drivers/CMSIS/Include/core_cm4.h **** {
 487:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 509:Drivers/CMSIS/Include/core_cm4.h **** 
 510:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
ARM GAS  /tmp/ccnv1VBl.s 			page 55


 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** 
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** 
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** 
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
ARM GAS  /tmp/ccnv1VBl.s 			page 56


 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** 
 593:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** 
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
ARM GAS  /tmp/ccnv1VBl.s 			page 57


 627:Drivers/CMSIS/Include/core_cm4.h **** 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** 
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm4.h **** 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** 
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** 
 675:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
ARM GAS  /tmp/ccnv1VBl.s 			page 58


 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** 
 691:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:Drivers/CMSIS/Include/core_cm4.h **** 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** /**
 695:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:Drivers/CMSIS/Include/core_cm4.h ****   @{
 699:Drivers/CMSIS/Include/core_cm4.h ****  */
 700:Drivers/CMSIS/Include/core_cm4.h **** 
 701:Drivers/CMSIS/Include/core_cm4.h **** /**
 702:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:Drivers/CMSIS/Include/core_cm4.h ****  */
 704:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 705:Drivers/CMSIS/Include/core_cm4.h **** {
 706:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:Drivers/CMSIS/Include/core_cm4.h **** 
 715:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:Drivers/CMSIS/Include/core_cm4.h **** 
 719:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:Drivers/CMSIS/Include/core_cm4.h **** 
 722:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:Drivers/CMSIS/Include/core_cm4.h **** 
 725:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:Drivers/CMSIS/Include/core_cm4.h **** 
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:Drivers/CMSIS/Include/core_cm4.h **** 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** /**
 735:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:Drivers/CMSIS/Include/core_cm4.h ****   @{
 739:Drivers/CMSIS/Include/core_cm4.h ****  */
 740:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 59


 741:Drivers/CMSIS/Include/core_cm4.h **** /**
 742:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:Drivers/CMSIS/Include/core_cm4.h ****  */
 744:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 745:Drivers/CMSIS/Include/core_cm4.h **** {
 746:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 751:Drivers/CMSIS/Include/core_cm4.h **** 
 752:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:Drivers/CMSIS/Include/core_cm4.h **** 
 759:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:Drivers/CMSIS/Include/core_cm4.h **** 
 762:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:Drivers/CMSIS/Include/core_cm4.h **** 
 765:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:Drivers/CMSIS/Include/core_cm4.h **** 
 769:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 770:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** 
 773:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** 
 783:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** 
 786:Drivers/CMSIS/Include/core_cm4.h **** /**
 787:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:Drivers/CMSIS/Include/core_cm4.h ****   @{
 791:Drivers/CMSIS/Include/core_cm4.h ****  */
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /**
 794:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:Drivers/CMSIS/Include/core_cm4.h ****  */
 796:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 797:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/ccnv1VBl.s 			page 60


 798:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 799:Drivers/CMSIS/Include/core_cm4.h ****   {
 800:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 831:Drivers/CMSIS/Include/core_cm4.h **** 
 832:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm4.h **** 
 836:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:Drivers/CMSIS/Include/core_cm4.h **** 
 840:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:Drivers/CMSIS/Include/core_cm4.h **** 
 843:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:Drivers/CMSIS/Include/core_cm4.h **** 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 61


 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** 
 868:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
ARM GAS  /tmp/ccnv1VBl.s 			page 62


 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 63


 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
ARM GAS  /tmp/ccnv1VBl.s 			page 64


1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
ARM GAS  /tmp/ccnv1VBl.s 			page 65


1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:Drivers/CMSIS/Include/core_cm4.h **** 
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
ARM GAS  /tmp/ccnv1VBl.s 			page 66


1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:Drivers/CMSIS/Include/core_cm4.h **** 
1158:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** 
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** 
1188:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:Drivers/CMSIS/Include/core_cm4.h **** 
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:Drivers/CMSIS/Include/core_cm4.h **** /**
1193:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccnv1VBl.s 			page 67


1197:Drivers/CMSIS/Include/core_cm4.h ****  */
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /**
1200:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:Drivers/CMSIS/Include/core_cm4.h ****  */
1202:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1203:Drivers/CMSIS/Include/core_cm4.h **** {
1204:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1216:Drivers/CMSIS/Include/core_cm4.h **** 
1217:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1218:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm4.h **** 
1221:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm4.h **** 
1224:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm4.h **** 
1227:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm4.h **** 
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** 
1241:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:Drivers/CMSIS/Include/core_cm4.h **** 
1251:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
ARM GAS  /tmp/ccnv1VBl.s 			page 68


1254:Drivers/CMSIS/Include/core_cm4.h **** 
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** 
1282:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:Drivers/CMSIS/Include/core_cm4.h **** #endif
1284:Drivers/CMSIS/Include/core_cm4.h **** 
1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:Drivers/CMSIS/Include/core_cm4.h **** /**
1288:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:Drivers/CMSIS/Include/core_cm4.h ****   @{
1292:Drivers/CMSIS/Include/core_cm4.h ****  */
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:Drivers/CMSIS/Include/core_cm4.h ****  */
1297:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1298:Drivers/CMSIS/Include/core_cm4.h **** {
1299:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1306:Drivers/CMSIS/Include/core_cm4.h **** 
1307:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 69


1311:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:Drivers/CMSIS/Include/core_cm4.h **** 
1314:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:Drivers/CMSIS/Include/core_cm4.h **** 
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** 
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** 
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** 
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** 
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** 
1335:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:Drivers/CMSIS/Include/core_cm4.h **** 
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:Drivers/CMSIS/Include/core_cm4.h **** 
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 70


1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** 
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** 
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** 
1377:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:Drivers/CMSIS/Include/core_cm4.h **** #endif
1392:Drivers/CMSIS/Include/core_cm4.h **** 
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** /**
1395:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:Drivers/CMSIS/Include/core_cm4.h ****   @{
1399:Drivers/CMSIS/Include/core_cm4.h ****  */
1400:Drivers/CMSIS/Include/core_cm4.h **** 
1401:Drivers/CMSIS/Include/core_cm4.h **** /**
1402:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:Drivers/CMSIS/Include/core_cm4.h ****  */
1404:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1405:Drivers/CMSIS/Include/core_cm4.h **** {
1406:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1411:Drivers/CMSIS/Include/core_cm4.h **** 
1412:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:Drivers/CMSIS/Include/core_cm4.h **** 
1416:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:Drivers/CMSIS/Include/core_cm4.h **** 
1419:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:Drivers/CMSIS/Include/core_cm4.h **** 
1422:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 71


1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** 
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** 
1456:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** 
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
ARM GAS  /tmp/ccnv1VBl.s 			page 72


1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** /**
1500:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:Drivers/CMSIS/Include/core_cm4.h ****   @{
1504:Drivers/CMSIS/Include/core_cm4.h ****  */
1505:Drivers/CMSIS/Include/core_cm4.h **** 
1506:Drivers/CMSIS/Include/core_cm4.h **** /**
1507:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1511:Drivers/CMSIS/Include/core_cm4.h **** */
1512:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:Drivers/CMSIS/Include/core_cm4.h **** 
1514:Drivers/CMSIS/Include/core_cm4.h **** /**
1515:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register.
1518:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:Drivers/CMSIS/Include/core_cm4.h **** */
1520:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:Drivers/CMSIS/Include/core_cm4.h **** 
1522:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:Drivers/CMSIS/Include/core_cm4.h **** 
1524:Drivers/CMSIS/Include/core_cm4.h **** 
1525:Drivers/CMSIS/Include/core_cm4.h **** /**
1526:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:Drivers/CMSIS/Include/core_cm4.h ****   @{
1530:Drivers/CMSIS/Include/core_cm4.h ****  */
1531:Drivers/CMSIS/Include/core_cm4.h **** 
1532:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
ARM GAS  /tmp/ccnv1VBl.s 			page 73


1539:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:Drivers/CMSIS/Include/core_cm4.h **** 
1551:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:Drivers/CMSIS/Include/core_cm4.h **** #endif
1555:Drivers/CMSIS/Include/core_cm4.h **** 
1556:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:Drivers/CMSIS/Include/core_cm4.h **** #endif
1560:Drivers/CMSIS/Include/core_cm4.h **** 
1561:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** 
1564:Drivers/CMSIS/Include/core_cm4.h **** 
1565:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1566:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1567:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1568:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1569:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1570:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1571:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1572:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1573:Drivers/CMSIS/Include/core_cm4.h **** /**
1574:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:Drivers/CMSIS/Include/core_cm4.h **** */
1576:Drivers/CMSIS/Include/core_cm4.h **** 
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:Drivers/CMSIS/Include/core_cm4.h **** /**
1581:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:Drivers/CMSIS/Include/core_cm4.h ****   @{
1585:Drivers/CMSIS/Include/core_cm4.h ****  */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** /**
1588:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1589:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1592:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccnv1VBl.s 			page 74


1596:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:Drivers/CMSIS/Include/core_cm4.h **** {
1598:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1599:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:Drivers/CMSIS/Include/core_cm4.h **** 
1601:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:Drivers/CMSIS/Include/core_cm4.h **** }
1608:Drivers/CMSIS/Include/core_cm4.h **** 
1609:Drivers/CMSIS/Include/core_cm4.h **** 
1610:Drivers/CMSIS/Include/core_cm4.h **** /**
1611:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1612:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:Drivers/CMSIS/Include/core_cm4.h ****  */
1615:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:Drivers/CMSIS/Include/core_cm4.h **** {
1617:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:Drivers/CMSIS/Include/core_cm4.h **** }
1619:Drivers/CMSIS/Include/core_cm4.h **** 
1620:Drivers/CMSIS/Include/core_cm4.h **** 
1621:Drivers/CMSIS/Include/core_cm4.h **** /**
1622:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable External Interrupt
1623:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:Drivers/CMSIS/Include/core_cm4.h ****  */
1626:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:Drivers/CMSIS/Include/core_cm4.h **** {
1628:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:Drivers/CMSIS/Include/core_cm4.h **** }
1630:Drivers/CMSIS/Include/core_cm4.h **** 
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** /**
1633:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable External Interrupt
1634:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:Drivers/CMSIS/Include/core_cm4.h ****  */
1637:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:Drivers/CMSIS/Include/core_cm4.h **** {
1639:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:Drivers/CMSIS/Include/core_cm4.h **** }
1641:Drivers/CMSIS/Include/core_cm4.h **** 
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** /**
1644:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1645:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:Drivers/CMSIS/Include/core_cm4.h ****  */
1650:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:Drivers/CMSIS/Include/core_cm4.h **** {
1652:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
ARM GAS  /tmp/ccnv1VBl.s 			page 75


1653:Drivers/CMSIS/Include/core_cm4.h **** }
1654:Drivers/CMSIS/Include/core_cm4.h **** 
1655:Drivers/CMSIS/Include/core_cm4.h **** 
1656:Drivers/CMSIS/Include/core_cm4.h **** /**
1657:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1658:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:Drivers/CMSIS/Include/core_cm4.h ****  */
1661:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:Drivers/CMSIS/Include/core_cm4.h **** {
1663:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1684:Drivers/CMSIS/Include/core_cm4.h ****  */
1685:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:Drivers/CMSIS/Include/core_cm4.h **** {
1687:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:Drivers/CMSIS/Include/core_cm4.h **** }
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** 
1691:Drivers/CMSIS/Include/core_cm4.h **** /**
1692:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1693:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:Drivers/CMSIS/Include/core_cm4.h **** {
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:Drivers/CMSIS/Include/core_cm4.h ****   }
1708:Drivers/CMSIS/Include/core_cm4.h **** }
1709:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccnv1VBl.s 			page 76


1710:Drivers/CMSIS/Include/core_cm4.h **** 
1711:Drivers/CMSIS/Include/core_cm4.h **** /**
1712:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1713:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1718:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:Drivers/CMSIS/Include/core_cm4.h ****  */
1720:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:Drivers/CMSIS/Include/core_cm4.h **** {
1722:Drivers/CMSIS/Include/core_cm4.h **** 
1723:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:Drivers/CMSIS/Include/core_cm4.h ****   {
1725:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:Drivers/CMSIS/Include/core_cm4.h ****   }
1727:Drivers/CMSIS/Include/core_cm4.h ****   else
1728:Drivers/CMSIS/Include/core_cm4.h ****   {
1729:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:Drivers/CMSIS/Include/core_cm4.h ****   }
1731:Drivers/CMSIS/Include/core_cm4.h **** }
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** 
1734:Drivers/CMSIS/Include/core_cm4.h **** /**
1735:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1736:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:Drivers/CMSIS/Include/core_cm4.h ****  */
1745:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1746:Drivers/CMSIS/Include/core_cm4.h **** {
1747:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1748:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1749:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1750:Drivers/CMSIS/Include/core_cm4.h **** 
1751:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1752:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h ****   return (
1755:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1756:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1757:Drivers/CMSIS/Include/core_cm4.h ****          );
1758:Drivers/CMSIS/Include/core_cm4.h **** }
1759:Drivers/CMSIS/Include/core_cm4.h **** 
1760:Drivers/CMSIS/Include/core_cm4.h **** 
1761:Drivers/CMSIS/Include/core_cm4.h **** /**
1762:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1763:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1764:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1765:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1766:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
ARM GAS  /tmp/ccnv1VBl.s 			page 77


1767:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1768:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1769:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1770:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1771:Drivers/CMSIS/Include/core_cm4.h ****  */
1772:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1773:Drivers/CMSIS/Include/core_cm4.h **** {
1774:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1775:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1776:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1777:Drivers/CMSIS/Include/core_cm4.h **** 
1778:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1779:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1780:Drivers/CMSIS/Include/core_cm4.h **** 
1781:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1782:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1783:Drivers/CMSIS/Include/core_cm4.h **** }
1784:Drivers/CMSIS/Include/core_cm4.h **** 
1785:Drivers/CMSIS/Include/core_cm4.h **** 
1786:Drivers/CMSIS/Include/core_cm4.h **** /**
1787:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1788:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1789:Drivers/CMSIS/Include/core_cm4.h ****  */
1790:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1791:Drivers/CMSIS/Include/core_cm4.h **** {
1792:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1793:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1794:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1795:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1796:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1797:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1798:Drivers/CMSIS/Include/core_cm4.h **** 
1799:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1800:Drivers/CMSIS/Include/core_cm4.h ****   {
1801:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
1802:Drivers/CMSIS/Include/core_cm4.h ****   }
1803:Drivers/CMSIS/Include/core_cm4.h **** }
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1806:Drivers/CMSIS/Include/core_cm4.h **** 
1807:Drivers/CMSIS/Include/core_cm4.h **** 
1808:Drivers/CMSIS/Include/core_cm4.h **** 
1809:Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1810:Drivers/CMSIS/Include/core_cm4.h **** /**
1811:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1812:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1813:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
1814:Drivers/CMSIS/Include/core_cm4.h ****   @{
1815:Drivers/CMSIS/Include/core_cm4.h ****  */
1816:Drivers/CMSIS/Include/core_cm4.h **** 
1817:Drivers/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0U)
1818:Drivers/CMSIS/Include/core_cm4.h **** 
1819:Drivers/CMSIS/Include/core_cm4.h **** /**
1820:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
1821:Drivers/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1822:Drivers/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
1823:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
ARM GAS  /tmp/ccnv1VBl.s 			page 78


1824:Drivers/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
1825:Drivers/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
1826:Drivers/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1827:Drivers/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1828:Drivers/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
1829:Drivers/CMSIS/Include/core_cm4.h ****  */
1830:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 1405              		.loc 3 1830 26 view .LVU353
 1406              	.LBB33:
1831:Drivers/CMSIS/Include/core_cm4.h **** {
1832:Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 1407              		.loc 3 1832 3 view .LVU354
 1408              		.loc 3 1832 14 is_stmt 0 view .LVU355
 1409 0016 013B     		subs	r3, r3, #1
 1410              	.LVL134:
 1411              		.loc 3 1832 6 view .LVU356
 1412 0018 B3F1807F 		cmp	r3, #16777216
 1413 001c 09D2     		bcs	.L82
1833:Drivers/CMSIS/Include/core_cm4.h ****   {
1834:Drivers/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
1835:Drivers/CMSIS/Include/core_cm4.h ****   }
1836:Drivers/CMSIS/Include/core_cm4.h **** 
1837:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 1414              		.loc 3 1837 3 is_stmt 1 view .LVU357
 1415              		.loc 3 1837 18 is_stmt 0 view .LVU358
 1416 001e 504A     		ldr	r2, .L92+8
 1417 0020 5360     		str	r3, [r2, #4]
1838:Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 1418              		.loc 3 1838 3 is_stmt 1 view .LVU359
 1419              	.LVL135:
 1420              	.LBB34:
 1421              	.LBI34:
1698:Drivers/CMSIS/Include/core_cm4.h **** {
 1422              		.loc 3 1698 22 view .LVU360
 1423              	.LBB35:
1700:Drivers/CMSIS/Include/core_cm4.h ****   {
 1424              		.loc 3 1700 3 view .LVU361
1702:Drivers/CMSIS/Include/core_cm4.h ****   }
 1425              		.loc 3 1702 5 view .LVU362
1702:Drivers/CMSIS/Include/core_cm4.h ****   }
 1426              		.loc 3 1702 55 is_stmt 0 view .LVU363
 1427 0022 504B     		ldr	r3, .L92+12
 1428              	.LVL136:
1702:Drivers/CMSIS/Include/core_cm4.h ****   }
 1429              		.loc 3 1702 55 view .LVU364
 1430 0024 F021     		movs	r1, #240
 1431 0026 83F82310 		strb	r1, [r3, #35]
 1432              	.LVL137:
1702:Drivers/CMSIS/Include/core_cm4.h ****   }
 1433              		.loc 3 1702 55 view .LVU365
 1434              	.LBE35:
 1435              	.LBE34:
1839:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 1436              		.loc 3 1839 3 is_stmt 1 view .LVU366
 1437              		.loc 3 1839 18 is_stmt 0 view .LVU367
 1438 002a 0023     		movs	r3, #0
 1439 002c 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccnv1VBl.s 			page 79


1840:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 1440              		.loc 3 1840 3 is_stmt 1 view .LVU368
 1441              		.loc 3 1840 18 is_stmt 0 view .LVU369
 1442 002e 0723     		movs	r3, #7
 1443 0030 1360     		str	r3, [r2]
1841:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1842:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1843:Drivers/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 1444              		.loc 3 1843 3 is_stmt 1 view .LVU370
 1445              	.L82:
 1446              		.loc 3 1843 3 is_stmt 0 view .LVU371
 1447              	.LBE33:
 1448              	.LBE32:
 453:Src/main.c    ****   MX_ADC1_Init();
 1449              		.loc 1 453 3 is_stmt 1 view .LVU372
 1450 0032 FFF7FEFF 		bl	MX_GPIO_Init
 1451              	.LVL138:
 454:Src/main.c    ****   MX_ADC2_Init();
 1452              		.loc 1 454 3 view .LVU373
 1453 0036 FFF7FEFF 		bl	MX_ADC1_Init
 1454              	.LVL139:
 455:Src/main.c    ****   MX_CAN_Init();
 1455              		.loc 1 455 3 view .LVU374
 1456 003a FFF7FEFF 		bl	MX_ADC2_Init
 1457              	.LVL140:
 456:Src/main.c    ****   MX_USART3_UART_Init();
 1458              		.loc 1 456 3 view .LVU375
 1459 003e FFF7FEFF 		bl	MX_CAN_Init
 1460              	.LVL141:
 457:Src/main.c    ****   
 1461              		.loc 1 457 3 view .LVU376
 1462 0042 FFF7FEFF 		bl	MX_USART3_UART_Init
 1463              	.LVL142:
 461:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, CAN_SHTD_Pin, GPIO_PIN_RESET);
 1464              		.loc 1 461 3 view .LVU377
 1465 0046 484C     		ldr	r4, .L92+16
 1466 0048 0022     		movs	r2, #0
 1467 004a 4FF48051 		mov	r1, #4096
 1468 004e 2046     		mov	r0, r4
 1469 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1470              	.LVL143:
 462:Src/main.c    **** 
 1471              		.loc 1 462 3 view .LVU378
 1472 0054 0022     		movs	r2, #0
 1473 0056 4FF40051 		mov	r1, #8192
 1474 005a 2046     		mov	r0, r4
 1475 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1476              	.LVL144:
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1477              		.loc 1 464 3 view .LVU379
 1478              	.LBB36:
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1479              		.loc 1 464 8 view .LVU380
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1480              		.loc 1 464 12 is_stmt 0 view .LVU381
 1481 0060 0024     		movs	r4, #0
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
ARM GAS  /tmp/ccnv1VBl.s 			page 80


 1482              		.loc 1 464 3 view .LVU382
 1483 0062 08E0     		b	.L83
 1484              	.LVL145:
 1485              	.L84:
 465:Src/main.c    **** 	  HAL_Delay(50);
 1486              		.loc 1 465 4 is_stmt 1 discriminator 3 view .LVU383
 1487 0064 0121     		movs	r1, #1
 1488 0066 4FF09040 		mov	r0, #1207959552
 1489 006a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1490              	.LVL146:
 466:Src/main.c    ****   }
 1491              		.loc 1 466 4 discriminator 3 view .LVU384
 1492 006e 3220     		movs	r0, #50
 1493 0070 FFF7FEFF 		bl	HAL_Delay
 1494              	.LVL147:
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1495              		.loc 1 464 22 is_stmt 0 discriminator 3 view .LVU385
 1496 0074 0134     		adds	r4, r4, #1
 1497              	.LVL148:
 1498              	.L83:
 464:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1499              		.loc 1 464 3 discriminator 1 view .LVU386
 1500 0076 052C     		cmp	r4, #5
 1501 0078 F4DD     		ble	.L84
 1502              	.LBE36:
 469:Src/main.c    ****   /* USER CODE END 2 */
 1503              		.loc 1 469 3 is_stmt 1 view .LVU387
 1504 007a FFF7FEFF 		bl	swInit
 1505              	.LVL149:
 474:Src/main.c    **** 
 1506              		.loc 1 474 3 view .LVU388
 474:Src/main.c    **** 
 1507              		.loc 1 474 3 is_stmt 0 view .LVU389
 1508 007e 60E0     		b	.L89
 1509              	.LVL150:
 1510              	.L88:
 1511              	.LBB37:
 1512              	.LBB38:
 1513              	.LBB39:
 619:Src/main.c    ****         {
 1514              		.loc 1 619 9 is_stmt 1 view .LVU390
 619:Src/main.c    ****         {
 1515              		.loc 1 619 40 is_stmt 0 view .LVU391
 1516 0080 04EB8402 		add	r2, r4, r4, lsl #2
 1517 0084 D300     		lsls	r3, r2, #3
 1518 0086 394A     		ldr	r2, .L92+20
 1519 0088 D558     		ldr	r5, [r2, r3]
 619:Src/main.c    ****         {
 1520              		.loc 1 619 13 view .LVU392
 1521 008a 2846     		mov	r0, r5
 1522 008c FFF7FEFF 		bl	strlen
 1523              	.LVL151:
 1524 0090 0246     		mov	r2, r0
 1525 0092 2946     		mov	r1, r5
 1526 0094 3648     		ldr	r0, .L92+24
 1527 0096 FFF7FEFF 		bl	strncmp
 1528              	.LVL152:
ARM GAS  /tmp/ccnv1VBl.s 			page 81


 619:Src/main.c    ****         {
 1529              		.loc 1 619 12 view .LVU393
 1530 009a 10B1     		cbz	r0, .L91
 617:Src/main.c    ****     {
 1531              		.loc 1 617 55 view .LVU394
 1532 009c 0134     		adds	r4, r4, #1
 1533              	.LVL153:
 617:Src/main.c    ****     {
 1534              		.loc 1 617 55 view .LVU395
 1535 009e A4B2     		uxth	r4, r4
 1536              	.LVL154:
 617:Src/main.c    ****     {
 1537              		.loc 1 617 55 view .LVU396
 1538 00a0 56E0     		b	.L85
 1539              	.L91:
 621:Src/main.c    ****         }
 1540              		.loc 1 621 15 is_stmt 1 view .LVU397
 621:Src/main.c    ****         }
 1541              		.loc 1 621 22 is_stmt 0 view .LVU398
 1542 00a2 04EB8406 		add	r6, r4, r4, lsl #2
 1543 00a6 F300     		lsls	r3, r6, #3
 1544 00a8 304C     		ldr	r4, .L92+20
 1545              	.LVL155:
 621:Src/main.c    ****         }
 1546              		.loc 1 621 22 view .LVU399
 1547 00aa 1C44     		add	r4, r4, r3
 1548              	.L87:
 1549              	.LVL156:
 621:Src/main.c    ****         }
 1550              		.loc 1 621 22 view .LVU400
 1551              	.LBE39:
 1552              	.LBE38:
 1553              	.LBE37:
 487:Src/main.c    ****       setDriver(GPIOB, In2_Pin, 1, p->val);
 1554              		.loc 1 487 7 is_stmt 1 view .LVU401
 1555 00ac 2E4D     		ldr	r5, .L92+16
 1556 00ae A368     		ldr	r3, [r4, #8]
 1557 00b0 0022     		movs	r2, #0
 1558 00b2 4FF48041 		mov	r1, #16384
 1559 00b6 2846     		mov	r0, r5
 1560 00b8 FFF7FEFF 		bl	setDriver
 1561              	.LVL157:
 488:Src/main.c    ****       setDriver(GPIOA, In3_Pin, 2, p->val);
 1562              		.loc 1 488 7 view .LVU402
 1563 00bc A368     		ldr	r3, [r4, #8]
 1564 00be 0122     		movs	r2, #1
 1565 00c0 4FF40041 		mov	r1, #32768
 1566 00c4 2846     		mov	r0, r5
 1567 00c6 FFF7FEFF 		bl	setDriver
 1568              	.LVL158:
 489:Src/main.c    ****       setDriver(GPIOA, In4_Pin, 3, p->val);
 1569              		.loc 1 489 7 view .LVU403
 1570 00ca A368     		ldr	r3, [r4, #8]
 1571 00cc 0222     		movs	r2, #2
 1572 00ce 4FF48061 		mov	r1, #1024
 1573 00d2 4FF09040 		mov	r0, #1207959552
 1574 00d6 FFF7FEFF 		bl	setDriver
ARM GAS  /tmp/ccnv1VBl.s 			page 82


 1575              	.LVL159:
 490:Src/main.c    ****       setDriver(GPIOA, In5_Pin, 4, p->val);
 1576              		.loc 1 490 7 view .LVU404
 1577 00da A368     		ldr	r3, [r4, #8]
 1578 00dc 0322     		movs	r2, #3
 1579 00de 4FF40071 		mov	r1, #512
 1580 00e2 4FF09040 		mov	r0, #1207959552
 1581 00e6 FFF7FEFF 		bl	setDriver
 1582              	.LVL160:
 491:Src/main.c    ****       setDriver(GPIOA, In6_Pin, 5, p->val);
 1583              		.loc 1 491 7 view .LVU405
 1584 00ea A368     		ldr	r3, [r4, #8]
 1585 00ec 0422     		movs	r2, #4
 1586 00ee 4FF48071 		mov	r1, #256
 1587 00f2 4FF09040 		mov	r0, #1207959552
 1588 00f6 FFF7FEFF 		bl	setDriver
 1589              	.LVL161:
 492:Src/main.c    ****       setDriver(GPIOA, In7_Pin, 6, p->val);
 1590              		.loc 1 492 7 view .LVU406
 1591 00fa A368     		ldr	r3, [r4, #8]
 1592 00fc 0522     		movs	r2, #5
 1593 00fe 4FF48051 		mov	r1, #4096
 1594 0102 4FF09040 		mov	r0, #1207959552
 1595 0106 FFF7FEFF 		bl	setDriver
 1596              	.LVL162:
 493:Src/main.c    ****       setDriver(GPIOC, In8_Pin, 7, p->val);
 1597              		.loc 1 493 7 view .LVU407
 1598 010a A368     		ldr	r3, [r4, #8]
 1599 010c 0622     		movs	r2, #6
 1600 010e 4FF40061 		mov	r1, #2048
 1601 0112 4FF09040 		mov	r0, #1207959552
 1602 0116 FFF7FEFF 		bl	setDriver
 1603              	.LVL163:
 494:Src/main.c    ****       setDriver(GPIOB, In9_Pin, 8, p->val);
 1604              		.loc 1 494 7 view .LVU408
 1605 011a A368     		ldr	r3, [r4, #8]
 1606 011c 0722     		movs	r2, #7
 1607 011e 4FF40051 		mov	r1, #8192
 1608 0122 1448     		ldr	r0, .L92+28
 1609 0124 FFF7FEFF 		bl	setDriver
 1610              	.LVL164:
 495:Src/main.c    ****       setDriver(GPIOA, In10_Pin, 9, p->val);
 1611              		.loc 1 495 7 view .LVU409
 1612 0128 A368     		ldr	r3, [r4, #8]
 1613 012a 0822     		movs	r2, #8
 1614 012c 0121     		movs	r1, #1
 1615 012e 2846     		mov	r0, r5
 1616 0130 FFF7FEFF 		bl	setDriver
 1617              	.LVL165:
 496:Src/main.c    ****   
 1618              		.loc 1 496 7 view .LVU410
 1619 0134 A368     		ldr	r3, [r4, #8]
 1620 0136 0922     		movs	r2, #9
 1621 0138 0821     		movs	r1, #8
 1622 013a 4FF09040 		mov	r0, #1207959552
 1623 013e FFF7FEFF 		bl	setDriver
 1624              	.LVL166:
ARM GAS  /tmp/ccnv1VBl.s 			page 83


 1625              	.L89:
 476:Src/main.c    ****   {
 1626              		.loc 1 476 3 discriminator 1 view .LVU411
 480:Src/main.c    ****       receiveCanard();
 1627              		.loc 1 480 7 discriminator 1 view .LVU412
 1628 0142 FFF7FEFF 		bl	sendCanard
 1629              	.LVL167:
 481:Src/main.c    ****       spinCanard();
 1630              		.loc 1 481 7 discriminator 1 view .LVU413
 1631 0146 FFF7FEFF 		bl	receiveCanard
 1632              	.LVL168:
 482:Src/main.c    ****      
 1633              		.loc 1 482 7 discriminator 1 view .LVU414
 1634 014a FFF7FEFF 		bl	spinCanard
 1635              	.LVL169:
 485:Src/main.c    **** 
 1636              		.loc 1 485 7 discriminator 1 view .LVU415
 1637              	.LBB42:
 1638              	.LBI37:
 615:Src/main.c    **** {
 1639              		.loc 1 615 24 discriminator 1 view .LVU416
 1640              	.LBB41:
 617:Src/main.c    ****     {
 1641              		.loc 1 617 5 discriminator 1 view .LVU417
 1642              	.LBB40:
 617:Src/main.c    ****     {
 1643              		.loc 1 617 10 discriminator 1 view .LVU418
 617:Src/main.c    ****     {
 1644              		.loc 1 617 19 is_stmt 0 discriminator 1 view .LVU419
 1645 014e 0024     		movs	r4, #0
 1646              	.LVL170:
 1647              	.L85:
 617:Src/main.c    ****     {
 1648              		.loc 1 617 5 view .LVU420
 1649 0150 002C     		cmp	r4, #0
 1650 0152 95D0     		beq	.L88
 1651              	.LBE40:
 624:Src/main.c    **** }
 1652              		.loc 1 624 12 view .LVU421
 1653 0154 0024     		movs	r4, #0
 1654              	.LVL171:
 624:Src/main.c    **** }
 1655              		.loc 1 624 12 view .LVU422
 1656 0156 A9E7     		b	.L87
 1657              	.L93:
 1658              		.align	2
 1659              	.L92:
 1660 0158 00000000 		.word	SystemCoreClock
 1661 015c D34D6210 		.word	274877907
 1662 0160 10E000E0 		.word	-536813552
 1663 0164 00ED00E0 		.word	-536810240
 1664 0168 00040048 		.word	1207960576
 1665 016c 00000000 		.word	.LANCHOR5
 1666 0170 00000000 		.word	.LC4
 1667 0174 00080048 		.word	1207961600
 1668              	.LBE41:
 1669              	.LBE42:
ARM GAS  /tmp/ccnv1VBl.s 			page 84


 1670              		.cfi_endproc
 1671              	.LFE137:
 1673              		.section	.text.getsetHandleCanard,"ax",%progbits
 1674              		.align	1
 1675              		.global	getsetHandleCanard
 1676              		.syntax unified
 1677              		.thumb
 1678              		.thumb_func
 1679              		.fpu fpv4-sp-d16
 1681              	getsetHandleCanard:
 1682              	.LVL172:
 1683              	.LFB138:
 504:Src/main.c    **** 
 1684              		.loc 1 504 52 is_stmt 1 view -0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 96
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 504:Src/main.c    **** 
 1688              		.loc 1 504 52 is_stmt 0 view .LVU424
 1689 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1690              	.LCFI31:
 1691              		.cfi_def_cfa_offset 20
 1692              		.cfi_offset 4, -20
 1693              		.cfi_offset 5, -16
 1694              		.cfi_offset 6, -12
 1695              		.cfi_offset 7, -8
 1696              		.cfi_offset 14, -4
 1697 0002 9FB0     		sub	sp, sp, #124
 1698              	.LCFI32:
 1699              		.cfi_def_cfa_offset 144
 1700 0004 0746     		mov	r7, r0
 506:Src/main.c    ****     uint8_t tag    = 0;
 1701              		.loc 1 506 5 is_stmt 1 view .LVU425
 506:Src/main.c    ****     uint8_t tag    = 0;
 1702              		.loc 1 506 14 is_stmt 0 view .LVU426
 1703 0006 4FF6FF73 		movw	r3, #65535
 1704 000a ADF87630 		strh	r3, [sp, #118]	@ movhi
 507:Src/main.c    ****     int offset     = 0;
 1705              		.loc 1 507 5 is_stmt 1 view .LVU427
 507:Src/main.c    ****     int offset     = 0;
 1706              		.loc 1 507 13 is_stmt 0 view .LVU428
 1707 000e 0024     		movs	r4, #0
 1708 0010 8DF87540 		strb	r4, [sp, #117]
 508:Src/main.c    ****     int64_t val    = 0;
 1709              		.loc 1 508 5 is_stmt 1 view .LVU429
 1710              	.LVL173:
 509:Src/main.c    ****  
 1711              		.loc 1 509 5 view .LVU430
 509:Src/main.c    ****  
 1712              		.loc 1 509 13 is_stmt 0 view .LVU431
 1713 0014 0022     		movs	r2, #0
 1714 0016 0023     		movs	r3, #0
 1715 0018 CDE91A23 		strd	r2, [sp, #104]
 511:Src/main.c    ****     offset += 13;
 1716              		.loc 1 511 5 is_stmt 1 view .LVU432
 1717 001c 0DF17603 		add	r3, sp, #118
 1718 0020 0093     		str	r3, [sp]
ARM GAS  /tmp/ccnv1VBl.s 			page 85


 1719 0022 2346     		mov	r3, r4
 1720 0024 0D22     		movs	r2, #13
 1721 0026 2146     		mov	r1, r4
 1722 0028 FFF7FEFF 		bl	canardDecodeScalar
 1723              	.LVL174:
 512:Src/main.c    ****     canardDecodeScalar(transfer, offset, 3, false, &tag);
 1724              		.loc 1 512 5 view .LVU433
 513:Src/main.c    ****     offset += 3;
 1725              		.loc 1 513 5 view .LVU434
 1726 002c 0DF17503 		add	r3, sp, #117
 1727 0030 0093     		str	r3, [sp]
 1728 0032 2346     		mov	r3, r4
 1729 0034 0322     		movs	r2, #3
 1730 0036 0D21     		movs	r1, #13
 1731 0038 3846     		mov	r0, r7
 1732 003a FFF7FEFF 		bl	canardDecodeScalar
 1733              	.LVL175:
 514:Src/main.c    ****  
 1734              		.loc 1 514 5 view .LVU435
 516:Src/main.c    ****     {
 1735              		.loc 1 516 5 view .LVU436
 516:Src/main.c    ****     {
 1736              		.loc 1 516 13 is_stmt 0 view .LVU437
 1737 003e 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 516:Src/main.c    ****     {
 1738              		.loc 1 516 8 view .LVU438
 1739 0042 012B     		cmp	r3, #1
 1740 0044 1CD0     		beq	.L111
 514:Src/main.c    ****  
 1741              		.loc 1 514 12 view .LVU439
 1742 0046 1025     		movs	r5, #16
 1743              	.LVL176:
 1744              	.L95:
 522:Src/main.c    ****     uint8_t name[16] = "";
 1745              		.loc 1 522 5 is_stmt 1 view .LVU440
 522:Src/main.c    ****     uint8_t name[16] = "";
 1746              		.loc 1 522 26 is_stmt 0 view .LVU441
 1747 0048 BB8A     		ldrh	r3, [r7, #20]
 522:Src/main.c    ****     uint8_t name[16] = "";
 1748              		.loc 1 522 49 view .LVU442
 1749 004a 2E46     		mov	r6, r5
 1750 004c 002D     		cmp	r5, #0
 1751 004e 21DB     		blt	.L112
 1752              	.L96:
 522:Src/main.c    ****     uint8_t name[16] = "";
 1753              		.loc 1 522 49 view .LVU443
 1754 0050 F610     		asrs	r6, r6, #3
 1755 0052 7642     		rsbs	r6, r6, #0
 522:Src/main.c    ****     uint8_t name[16] = "";
 1756              		.loc 1 522 14 view .LVU444
 1757 0054 13FA86F6 		uxtah	r6, r3, r6
 1758 0058 B6B2     		uxth	r6, r6
 1759              	.LVL177:
 523:Src/main.c    ****     for (int i = 0; i < n; i++)
 1760              		.loc 1 523 5 is_stmt 1 view .LVU445
 523:Src/main.c    ****     for (int i = 0; i < n; i++)
 1761              		.loc 1 523 13 is_stmt 0 view .LVU446
ARM GAS  /tmp/ccnv1VBl.s 			page 86


 1762 005a 0024     		movs	r4, #0
 1763 005c 1694     		str	r4, [sp, #88]
 1764 005e 1794     		str	r4, [sp, #92]
 1765 0060 1894     		str	r4, [sp, #96]
 1766 0062 1994     		str	r4, [sp, #100]
 524:Src/main.c    ****     {
 1767              		.loc 1 524 5 is_stmt 1 view .LVU447
 1768              	.LBB49:
 524:Src/main.c    ****     {
 1769              		.loc 1 524 10 view .LVU448
 1770              	.LVL178:
 1771              	.L97:
 524:Src/main.c    ****     {
 1772              		.loc 1 524 5 is_stmt 0 discriminator 1 view .LVU449
 1773 0064 A642     		cmp	r6, r4
 1774 0066 17DD     		ble	.L113
 526:Src/main.c    ****         offset += 8;
 1775              		.loc 1 526 9 is_stmt 1 discriminator 3 view .LVU450
 526:Src/main.c    ****         offset += 8;
 1776              		.loc 1 526 56 is_stmt 0 discriminator 3 view .LVU451
 1777 0068 16AB     		add	r3, sp, #88
 1778 006a 2344     		add	r3, r3, r4
 526:Src/main.c    ****         offset += 8;
 1779              		.loc 1 526 9 discriminator 3 view .LVU452
 1780 006c 0093     		str	r3, [sp]
 1781 006e 0023     		movs	r3, #0
 1782 0070 0822     		movs	r2, #8
 1783 0072 2946     		mov	r1, r5
 1784 0074 3846     		mov	r0, r7
 1785 0076 FFF7FEFF 		bl	canardDecodeScalar
 1786              	.LVL179:
 527:Src/main.c    ****     }
 1787              		.loc 1 527 9 is_stmt 1 discriminator 3 view .LVU453
 527:Src/main.c    ****     }
 1788              		.loc 1 527 16 is_stmt 0 discriminator 3 view .LVU454
 1789 007a 0835     		adds	r5, r5, #8
 1790              	.LVL180:
 524:Src/main.c    ****     {
 1791              		.loc 1 524 29 discriminator 3 view .LVU455
 1792 007c 0134     		adds	r4, r4, #1
 1793              	.LVL181:
 524:Src/main.c    ****     {
 1794              		.loc 1 524 29 discriminator 3 view .LVU456
 1795 007e F1E7     		b	.L97
 1796              	.LVL182:
 1797              	.L111:
 524:Src/main.c    ****     {
 1798              		.loc 1 524 29 discriminator 3 view .LVU457
 1799              	.LBE49:
 518:Src/main.c    ****         offset += 64;
 1800              		.loc 1 518 9 is_stmt 1 view .LVU458
 1801 0080 1AAB     		add	r3, sp, #104
 1802 0082 0093     		str	r3, [sp]
 1803 0084 2346     		mov	r3, r4
 1804 0086 4022     		movs	r2, #64
 1805 0088 1021     		movs	r1, #16
 1806 008a 3846     		mov	r0, r7
ARM GAS  /tmp/ccnv1VBl.s 			page 87


 1807 008c FFF7FEFF 		bl	canardDecodeScalar
 1808              	.LVL183:
 519:Src/main.c    ****     }
 1809              		.loc 1 519 9 view .LVU459
 519:Src/main.c    ****     }
 1810              		.loc 1 519 16 is_stmt 0 view .LVU460
 1811 0090 5025     		movs	r5, #80
 1812 0092 D9E7     		b	.L95
 1813              	.LVL184:
 1814              	.L112:
 522:Src/main.c    ****     uint8_t name[16] = "";
 1815              		.loc 1 522 49 view .LVU461
 1816 0094 EE1D     		adds	r6, r5, #7
 1817 0096 DBE7     		b	.L96
 1818              	.LVL185:
 1819              	.L113:
 530:Src/main.c    ****  
 1820              		.loc 1 530 5 is_stmt 1 view .LVU462
 532:Src/main.c    ****     {
 1821              		.loc 1 532 5 view .LVU463
 532:Src/main.c    ****     {
 1822              		.loc 1 532 9 is_stmt 0 view .LVU464
 1823 0098 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 532:Src/main.c    ****     {
 1824              		.loc 1 532 8 view .LVU465
 1825 009c 002B     		cmp	r3, #0
 1826 009e 43D1     		bne	.L114
 538:Src/main.c    ****     }
 1827              		.loc 1 538 9 is_stmt 1 view .LVU466
 538:Src/main.c    ****     }
 1828              		.loc 1 538 13 is_stmt 0 view .LVU467
 1829 00a0 BDF87630 		ldrh	r3, [sp, #118]
 1830              	.LVL186:
 1831              	.LBB50:
 1832              	.LBI50:
 605:Src/main.c    **** {
 1833              		.loc 1 605 24 is_stmt 1 view .LVU468
 1834              	.LBB51:
 607:Src/main.c    ****     {
 1835              		.loc 1 607 5 view .LVU469
 607:Src/main.c    ****     {
 1836              		.loc 1 607 8 is_stmt 0 view .LVU470
 1837 00a4 002B     		cmp	r3, #0
 1838 00a6 49D1     		bne	.L108
 611:Src/main.c    **** }
 1839              		.loc 1 611 5 is_stmt 1 view .LVU471
 611:Src/main.c    **** }
 1840              		.loc 1 611 12 is_stmt 0 view .LVU472
 1841 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1842              	.LVL187:
 611:Src/main.c    **** }
 1843              		.loc 1 611 12 view .LVU473
 1844 00ac DA00     		lsls	r2, r3, #3
 1845 00ae 264C     		ldr	r4, .L117+8
 1846              	.LVL188:
 611:Src/main.c    **** }
 1847              		.loc 1 611 12 view .LVU474
ARM GAS  /tmp/ccnv1VBl.s 			page 88


 1848 00b0 1444     		add	r4, r4, r2
 1849              	.LVL189:
 1850              	.L104:
 611:Src/main.c    **** }
 1851              		.loc 1 611 12 view .LVU475
 1852              	.LBE51:
 1853              	.LBE50:
 541:Src/main.c    ****     {
 1854              		.loc 1 541 5 is_stmt 1 view .LVU476
 541:Src/main.c    ****     {
 1855              		.loc 1 541 8 is_stmt 0 view .LVU477
 1856 00b2 1CB1     		cbz	r4, .L105
 541:Src/main.c    ****     {
 1857              		.loc 1 541 19 discriminator 1 view .LVU478
 1858 00b4 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 541:Src/main.c    ****     {
 1859              		.loc 1 541 12 discriminator 1 view .LVU479
 1860 00b8 012B     		cmp	r3, #1
 1861 00ba 3AD0     		beq	.L115
 1862              	.LVL190:
 1863              	.L105:
 546:Src/main.c    ****     uint16_t len = encodeParamCanard(p, buffer);
 1864              		.loc 1 546 5 is_stmt 1 view .LVU480
 546:Src/main.c    ****     uint16_t len = encodeParamCanard(p, buffer);
 1865              		.loc 1 546 14 is_stmt 0 view .LVU481
 1866 00bc 0025     		movs	r5, #0
 1867 00be 0695     		str	r5, [sp, #24]
 1868 00c0 3C22     		movs	r2, #60
 1869 00c2 2946     		mov	r1, r5
 1870 00c4 07A8     		add	r0, sp, #28
 1871 00c6 FFF7FEFF 		bl	memset
 1872              	.LVL191:
 547:Src/main.c    ****     int result = canardRequestOrRespond(&g_canard,
 1873              		.loc 1 547 5 is_stmt 1 view .LVU482
 547:Src/main.c    ****     int result = canardRequestOrRespond(&g_canard,
 1874              		.loc 1 547 20 is_stmt 0 view .LVU483
 1875 00ca 06AE     		add	r6, sp, #24
 1876 00cc 3146     		mov	r1, r6
 1877 00ce 2046     		mov	r0, r4
 1878 00d0 FFF7FEFF 		bl	encodeParamCanard
 1879              	.LVL192:
 548:Src/main.c    ****                                         transfer->source_node_id,
 1880              		.loc 1 548 5 is_stmt 1 view .LVU484
 548:Src/main.c    ****                                         transfer->source_node_id,
 1881              		.loc 1 548 18 is_stmt 0 view .LVU485
 1882 00d4 0590     		str	r0, [sp, #20]
 1883 00d6 0496     		str	r6, [sp, #16]
 1884 00d8 0395     		str	r5, [sp, #12]
 1885 00da BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1886 00dc 0293     		str	r3, [sp, #8]
 1887 00de 07F11903 		add	r3, r7, #25
 1888 00e2 0193     		str	r3, [sp, #4]
 1889 00e4 0B23     		movs	r3, #11
 1890 00e6 0093     		str	r3, [sp]
 1891 00e8 15A3     		adr	r3, .L117
 1892 00ea D3E90023 		ldrd	r2, [r3]
 1893 00ee F97E     		ldrb	r1, [r7, #27]	@ zero_extendqisi2
ARM GAS  /tmp/ccnv1VBl.s 			page 89


 1894 00f0 1648     		ldr	r0, .L117+12
 1895              	.LVL193:
 548:Src/main.c    ****                                         transfer->source_node_id,
 1896              		.loc 1 548 18 view .LVU486
 1897 00f2 FFF7FEFF 		bl	canardRequestOrRespond
 1898              	.LVL194:
 562:Src/main.c    **** 
 1899              		.loc 1 562 1 view .LVU487
 1900 00f6 1FB0     		add	sp, sp, #124
 1901              	.LCFI33:
 1902              		.cfi_remember_state
 1903              		.cfi_def_cfa_offset 20
 1904              		@ sp needed
 1905 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1906              	.LVL195:
 1907              	.L103:
 1908              	.LCFI34:
 1909              		.cfi_restore_state
 1910              	.LBB53:
 1911              	.LBB54:
 1912              	.LBB55:
 619:Src/main.c    ****         {
 1913              		.loc 1 619 9 is_stmt 1 view .LVU488
 619:Src/main.c    ****         {
 1914              		.loc 1 619 40 is_stmt 0 view .LVU489
 1915 00fa 04EB8402 		add	r2, r4, r4, lsl #2
 1916 00fe D300     		lsls	r3, r2, #3
 1917 0100 114A     		ldr	r2, .L117+8
 1918 0102 D558     		ldr	r5, [r2, r3]
 619:Src/main.c    ****         {
 1919              		.loc 1 619 13 view .LVU490
 1920 0104 2846     		mov	r0, r5
 1921 0106 FFF7FEFF 		bl	strlen
 1922              	.LVL196:
 1923 010a 0246     		mov	r2, r0
 1924 010c 2946     		mov	r1, r5
 1925 010e 16A8     		add	r0, sp, #88
 1926 0110 FFF7FEFF 		bl	strncmp
 1927              	.LVL197:
 619:Src/main.c    ****         {
 1928              		.loc 1 619 12 view .LVU491
 1929 0114 10B1     		cbz	r0, .L116
 617:Src/main.c    ****     {
 1930              		.loc 1 617 55 view .LVU492
 1931 0116 0134     		adds	r4, r4, #1
 1932              	.LVL198:
 617:Src/main.c    ****     {
 1933              		.loc 1 617 55 view .LVU493
 1934 0118 A4B2     		uxth	r4, r4
 1935              	.LVL199:
 617:Src/main.c    ****     {
 1936              		.loc 1 617 55 view .LVU494
 1937 011a 06E0     		b	.L99
 1938              	.L116:
 621:Src/main.c    ****         }
 1939              		.loc 1 621 15 is_stmt 1 view .LVU495
 621:Src/main.c    ****         }
ARM GAS  /tmp/ccnv1VBl.s 			page 90


 1940              		.loc 1 621 22 is_stmt 0 view .LVU496
 1941 011c 04EB8406 		add	r6, r4, r4, lsl #2
 1942              	.LVL200:
 621:Src/main.c    ****         }
 1943              		.loc 1 621 22 view .LVU497
 1944 0120 F300     		lsls	r3, r6, #3
 1945 0122 094C     		ldr	r4, .L117+8
 1946              	.LVL201:
 621:Src/main.c    ****         }
 1947              		.loc 1 621 22 view .LVU498
 1948 0124 1C44     		add	r4, r4, r3
 1949 0126 C4E7     		b	.L104
 1950              	.LVL202:
 1951              	.L114:
 617:Src/main.c    ****     {
 1952              		.loc 1 617 19 view .LVU499
 1953 0128 0024     		movs	r4, #0
 1954              	.LVL203:
 1955              	.L99:
 617:Src/main.c    ****     {
 1956              		.loc 1 617 5 view .LVU500
 1957 012a 002C     		cmp	r4, #0
 1958 012c E5D0     		beq	.L103
 1959              	.LBE55:
 624:Src/main.c    **** }
 1960              		.loc 1 624 12 view .LVU501
 1961 012e 0024     		movs	r4, #0
 1962              	.LVL204:
 624:Src/main.c    **** }
 1963              		.loc 1 624 12 view .LVU502
 1964 0130 BFE7     		b	.L104
 1965              	.LVL205:
 1966              	.L115:
 624:Src/main.c    **** }
 1967              		.loc 1 624 12 view .LVU503
 1968              	.LBE54:
 1969              	.LBE53:
 543:Src/main.c    ****     }
 1970              		.loc 1 543 9 is_stmt 1 view .LVU504
 543:Src/main.c    ****     }
 1971              		.loc 1 543 16 is_stmt 0 view .LVU505
 1972 0132 DDE91A23 		ldrd	r2, [sp, #104]
 1973 0136 C4E90223 		strd	r2, [r4, #8]
 1974 013a BFE7     		b	.L105
 1975              	.LVL206:
 1976              	.L108:
 1977              	.LBB56:
 1978              	.LBB52:
 609:Src/main.c    ****     }
 1979              		.loc 1 609 16 view .LVU506
 1980 013c 0024     		movs	r4, #0
 1981              	.LVL207:
 609:Src/main.c    ****     }
 1982              		.loc 1 609 16 view .LVU507
 1983 013e BDE7     		b	.L105
 1984              	.L118:
 1985              		.align	3
ARM GAS  /tmp/ccnv1VBl.s 			page 91


 1986              	.L117:
 1987 0140 D5A4D139 		.word	970040533
 1988 0144 F922B6A7 		.word	-1481235719
 1989 0148 00000000 		.word	.LANCHOR5
 1990 014c 00000000 		.word	.LANCHOR0
 1991              	.LBE52:
 1992              	.LBE56:
 1993              		.cfi_endproc
 1994              	.LFE138:
 1996              		.section	.text.onTransferReceived,"ax",%progbits
 1997              		.align	1
 1998              		.syntax unified
 1999              		.thumb
 2000              		.thumb_func
 2001              		.fpu fpv4-sp-d16
 2003              	onTransferReceived:
 2004              	.LVL208:
 2005              	.LFB128:
 205:Src/main.c    ****     if ((transfer->transfer_type == CanardTransferTypeRequest) &&
 2006              		.loc 1 205 1 is_stmt 1 view -0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 0
 2009              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Src/main.c    ****     if ((transfer->transfer_type == CanardTransferTypeRequest) &&
 2010              		.loc 1 205 1 is_stmt 0 view .LVU509
 2011 0000 10B5     		push	{r4, lr}
 2012              	.LCFI35:
 2013              		.cfi_def_cfa_offset 8
 2014              		.cfi_offset 4, -8
 2015              		.cfi_offset 14, -4
 2016 0002 0C46     		mov	r4, r1
 206:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 2017              		.loc 1 206 5 is_stmt 1 view .LVU510
 206:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 2018              		.loc 1 206 18 is_stmt 0 view .LVU511
 2019 0004 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
 206:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 2020              		.loc 1 206 8 view .LVU512
 2021 0006 012B     		cmp	r3, #1
 2022 0008 03D0     		beq	.L123
 2023              	.LVL209:
 2024              	.L120:
 214:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 2025              		.loc 1 214 5 is_stmt 1 view .LVU513
 214:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 2026              		.loc 1 214 18 is_stmt 0 view .LVU514
 2027 000a 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 214:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 2028              		.loc 1 214 8 view .LVU515
 2029 000c 012B     		cmp	r3, #1
 2030 000e 07D0     		beq	.L124
 2031              	.L119:
 221:Src/main.c    **** 
 2032              		.loc 1 221 1 view .LVU516
 2033 0010 10BD     		pop	{r4, pc}
 2034              	.LVL210:
 2035              	.L123:
ARM GAS  /tmp/ccnv1VBl.s 			page 92


 207:Src/main.c    ****     {    
 2036              		.loc 1 207 14 discriminator 1 view .LVU517
 2037 0012 CB8A     		ldrh	r3, [r1, #22]
 206:Src/main.c    ****     (transfer->data_type_id == UAVCAN_GET_NODE_INFO_DATA_TYPE_ID))
 2038              		.loc 1 206 64 discriminator 1 view .LVU518
 2039 0014 012B     		cmp	r3, #1
 2040 0016 F8D1     		bne	.L120
 209:Src/main.c    ****     }
 2041              		.loc 1 209 6 is_stmt 1 view .LVU519
 2042 0018 0846     		mov	r0, r1
 2043              	.LVL211:
 209:Src/main.c    ****     }
 2044              		.loc 1 209 6 is_stmt 0 view .LVU520
 2045 001a FFF7FEFF 		bl	getNodeInfoHandleCanard
 2046              	.LVL212:
 209:Src/main.c    ****     }
 2047              		.loc 1 209 6 view .LVU521
 2048 001e F4E7     		b	.L120
 2049              	.L124:
 215:Src/main.c    ****     {       
 2050              		.loc 1 215 14 discriminator 1 view .LVU522
 2051 0020 E38A     		ldrh	r3, [r4, #22]
 214:Src/main.c    ****     (transfer->data_type_id == UAVCAN_PROTOCOL_PARAM_GETSET_ID))
 2052              		.loc 1 214 64 discriminator 1 view .LVU523
 2053 0022 0B2B     		cmp	r3, #11
 2054 0024 F4D1     		bne	.L119
 217:Src/main.c    ****     }
 2055              		.loc 1 217 13 is_stmt 1 view .LVU524
 2056 0026 2046     		mov	r0, r4
 2057 0028 FFF7FEFF 		bl	getsetHandleCanard
 2058              	.LVL213:
 221:Src/main.c    **** 
 2059              		.loc 1 221 1 is_stmt 0 view .LVU525
 2060 002c F0E7     		b	.L119
 2061              		.cfi_endproc
 2062              	.LFE128:
 2064              		.section	.text.Error_Handler,"ax",%progbits
 2065              		.align	1
 2066              		.global	Error_Handler
 2067              		.syntax unified
 2068              		.thumb
 2069              		.thumb_func
 2070              		.fpu fpv4-sp-d16
 2072              	Error_Handler:
 2073              	.LFB144:
 687:Src/main.c    **** 
 688:Src/main.c    **** /**
 689:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 690:Src/main.c    ****   * @retval None
 691:Src/main.c    ****   */
 692:Src/main.c    **** void Error_Handler(void)
 693:Src/main.c    **** {
 2074              		.loc 1 693 1 is_stmt 1 view -0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 0
 2077              		@ frame_needed = 0, uses_anonymous_args = 0
 2078              		@ link register save eliminated.
ARM GAS  /tmp/ccnv1VBl.s 			page 93


 694:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 695:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 696:Src/main.c    **** 
 697:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 698:Src/main.c    **** }
 2079              		.loc 1 698 1 view .LVU527
 2080 0000 7047     		bx	lr
 2081              		.cfi_endproc
 2082              	.LFE144:
 2084              		.section	.bss.g_canard,"aw",%nobits
 2085              		.align	2
 2086              		.set	.LANCHOR0,. + 0
 2089              	g_canard:
 2090 0000 00000000 		.space	36
 2090      00000000 
 2090      00000000 
 2090      00000000 
 2090      00000000 
 2091              		.section	.bss.g_canard_memory_pool,"aw",%nobits
 2092              		.align	2
 2093              		.set	.LANCHOR2,. + 0
 2096              	g_canard_memory_pool:
 2097 0000 00000000 		.space	1024
 2097      00000000 
 2097      00000000 
 2097      00000000 
 2097      00000000 
 2098              		.section	.bss.spin_time.9421,"aw",%nobits
 2099              		.align	2
 2100              		.set	.LANCHOR3,. + 0
 2103              	spin_time.9421:
 2104 0000 00000000 		.space	4
 2105              		.section	.bss.transfer_id.9423,"aw",%nobits
 2106              		.set	.LANCHOR4,. + 0
 2109              	transfer_id.9423:
 2110 0000 00       		.space	1
 2111              		.section	.data.parameters,"aw"
 2112              		.align	3
 2113              		.set	.LANCHOR5,. + 0
 2116              	parameters:
 2117 0000 00000000 		.word	.LC4
 2118 0004 00000000 		.space	4
 2119 0008 00000000 		.word	0
 2120 000c 00000000 		.word	0
 2121 0010 00000000 		.word	0
 2122 0014 00000000 		.word	0
 2123 0018 FF030000 		.word	1023
 2124 001c 00000000 		.word	0
 2125 0020 00000000 		.word	0
 2126 0024 00000000 		.word	0
 2127              		.section	.rodata.__func__.9349,"a"
 2128              		.align	2
 2129              		.set	.LANCHOR1,. + 0
 2132              	__func__.9349:
 2133 0000 63616E61 		.ascii	"canardSTM32ComputeCANTimings\000"
 2133      72645354 
 2133      4D333243 
ARM GAS  /tmp/ccnv1VBl.s 			page 94


 2133      6F6D7075 
 2133      74654341 
 2134              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2135              		.align	2
 2136              	.LC4:
 2137 0000 64726976 		.ascii	"drivers\000"
 2137      65727300 
 2138              		.section	.rodata.makeNodeInfoMessage.str1.4,"aMS",%progbits,1
 2139              		.align	2
 2140              	.LC0:
 2141 0000 63682E6F 		.ascii	"ch.octanis.oibus.mosfet-driver-module\000"
 2141      6374616E 
 2141      69732E6F 
 2141      69627573 
 2141      2E6D6F73 
 2142              		.section	.rodata.swInit.str1.4,"aMS",%progbits,1
 2143              		.align	2
 2144              	.LC1:
 2145 0000 6273315F 		.ascii	"bs1_bs2_sum > bs1\000"
 2145      6273325F 
 2145      73756D20 
 2145      3E206273 
 2145      3100
 2146 0012 0000     		.space	2
 2147              	.LC2:
 2148 0014 4C69622F 		.ascii	"Lib/libcanard/drivers/stm32/canard_stm32.h\000"
 2148      6C696263 
 2148      616E6172 
 2148      642F6472 
 2148      69766572 
 2149 003f 00       		.space	1
 2150              	.LC3:
 2151 0040 3000     		.ascii	"0\000"
 2152              		.text
 2153              	.Letext0:
 2154              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 2155              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2156              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2157              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2158              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2159              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 2160              		.file 10 "/usr/arm-none-eabi/include/sys/lock.h"
 2161              		.file 11 "/usr/arm-none-eabi/include/sys/_types.h"
 2162              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 2163              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2164              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2165              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2166              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2167              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2168              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2169              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2170              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2171              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2172              		.file 22 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2173              		.file 23 "Inc/adc.h"
 2174              		.file 24 "Inc/can.h"
 2175              		.file 25 "Inc/usart.h"
ARM GAS  /tmp/ccnv1VBl.s 			page 95


 2176              		.file 26 "Lib/libcanard/canard.h"
 2177              		.file 27 "/usr/arm-none-eabi/include/string.h"
 2178              		.file 28 "<built-in>"
 2179              		.file 29 "Inc/gpio.h"
 2180              		.file 30 "/usr/arm-none-eabi/include/assert.h"
ARM GAS  /tmp/ccnv1VBl.s 			page 96


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnv1VBl.s:18     .text.shouldAcceptTransfer:0000000000000000 $t
     /tmp/ccnv1VBl.s:25     .text.shouldAcceptTransfer:0000000000000000 shouldAcceptTransfer
     /tmp/ccnv1VBl.s:94     .text.shouldAcceptTransfer:0000000000000038 $d
     /tmp/ccnv1VBl.s:102    .text.readUniqueID:0000000000000000 $t
     /tmp/ccnv1VBl.s:108    .text.readUniqueID:0000000000000000 readUniqueID
     /tmp/ccnv1VBl.s:146    .text.makeNodeStatusMessage:0000000000000000 $t
     /tmp/ccnv1VBl.s:152    .text.makeNodeStatusMessage:0000000000000000 makeNodeStatusMessage
     /tmp/ccnv1VBl.s:222    .text.makeNodeStatusMessage:0000000000000050 $d
     /tmp/ccnv1VBl.s:227    .text.makeNodeInfoMessage:0000000000000000 $t
     /tmp/ccnv1VBl.s:233    .text.makeNodeInfoMessage:0000000000000000 makeNodeInfoMessage
     /tmp/ccnv1VBl.s:323    .text.makeNodeInfoMessage:0000000000000064 $d
     /tmp/ccnv1VBl.s:329    .text.getNodeInfoHandleCanard:0000000000000000 $t
     /tmp/ccnv1VBl.s:335    .text.getNodeInfoHandleCanard:0000000000000000 getNodeInfoHandleCanard
     /tmp/ccnv1VBl.s:401    .text.getNodeInfoHandleCanard:0000000000000048 $d
     /tmp/ccnv1VBl.s:408    .text.swInit:0000000000000000 $t
     /tmp/ccnv1VBl.s:414    .text.swInit:0000000000000000 swInit
     /tmp/ccnv1VBl.s:707    .text.swInit:0000000000000110 $d
     /tmp/ccnv1VBl.s:2003   .text.onTransferReceived:0000000000000000 onTransferReceived
     /tmp/ccnv1VBl.s:723    .text.sendCanard:0000000000000000 $t
     /tmp/ccnv1VBl.s:729    .text.sendCanard:0000000000000000 sendCanard
     /tmp/ccnv1VBl.s:786    .text.sendCanard:0000000000000024 $d
     /tmp/ccnv1VBl.s:791    .text.receiveCanard:0000000000000000 $t
     /tmp/ccnv1VBl.s:797    .text.receiveCanard:0000000000000000 receiveCanard
     /tmp/ccnv1VBl.s:849    .text.receiveCanard:000000000000002c $d
     /tmp/ccnv1VBl.s:854    .text.spinCanard:0000000000000000 $t
     /tmp/ccnv1VBl.s:860    .text.spinCanard:0000000000000000 spinCanard
     /tmp/ccnv1VBl.s:940    .text.spinCanard:0000000000000060 $d
     /tmp/ccnv1VBl.s:949    .text.encodeParamCanard:0000000000000000 $t
     /tmp/ccnv1VBl.s:955    .text.encodeParamCanard:0000000000000000 encodeParamCanard
     /tmp/ccnv1VBl.s:1192   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnv1VBl.s:1199   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnv1VBl.s:1313   .text.setDriver:0000000000000000 $t
     /tmp/ccnv1VBl.s:1320   .text.setDriver:0000000000000000 setDriver
     /tmp/ccnv1VBl.s:1369   .text.main:0000000000000000 $t
     /tmp/ccnv1VBl.s:1376   .text.main:0000000000000000 main
     /tmp/ccnv1VBl.s:1660   .text.main:0000000000000158 $d
     /tmp/ccnv1VBl.s:1674   .text.getsetHandleCanard:0000000000000000 $t
     /tmp/ccnv1VBl.s:1681   .text.getsetHandleCanard:0000000000000000 getsetHandleCanard
     /tmp/ccnv1VBl.s:1987   .text.getsetHandleCanard:0000000000000140 $d
     /tmp/ccnv1VBl.s:1997   .text.onTransferReceived:0000000000000000 $t
     /tmp/ccnv1VBl.s:2065   .text.Error_Handler:0000000000000000 $t
     /tmp/ccnv1VBl.s:2072   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccnv1VBl.s:2085   .bss.g_canard:0000000000000000 $d
     /tmp/ccnv1VBl.s:2089   .bss.g_canard:0000000000000000 g_canard
     /tmp/ccnv1VBl.s:2092   .bss.g_canard_memory_pool:0000000000000000 $d
     /tmp/ccnv1VBl.s:2096   .bss.g_canard_memory_pool:0000000000000000 g_canard_memory_pool
     /tmp/ccnv1VBl.s:2099   .bss.spin_time.9421:0000000000000000 $d
     /tmp/ccnv1VBl.s:2103   .bss.spin_time.9421:0000000000000000 spin_time.9421
     /tmp/ccnv1VBl.s:2109   .bss.transfer_id.9423:0000000000000000 transfer_id.9423
     /tmp/ccnv1VBl.s:2110   .bss.transfer_id.9423:0000000000000000 $d
     /tmp/ccnv1VBl.s:2112   .data.parameters:0000000000000000 $d
     /tmp/ccnv1VBl.s:2116   .data.parameters:0000000000000000 parameters
     /tmp/ccnv1VBl.s:2128   .rodata.__func__.9349:0000000000000000 $d
     /tmp/ccnv1VBl.s:2132   .rodata.__func__.9349:0000000000000000 __func__.9349
     /tmp/ccnv1VBl.s:2135   .rodata.main.str1.4:0000000000000000 $d
ARM GAS  /tmp/ccnv1VBl.s 			page 97


     /tmp/ccnv1VBl.s:2139   .rodata.makeNodeInfoMessage.str1.4:0000000000000000 $d
     /tmp/ccnv1VBl.s:2143   .rodata.swInit.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
canardEncodeScalar
memset
canardRequestOrRespond
HAL_RCC_GetPCLK1Freq
__assert_func
canardSTM32Init
canardInit
canardSetLocalNodeID
canardPeekTxQueue
canardSTM32Transmit
canardPopTxQueue
canardSTM32Receive
canardHandleRxFrame
HAL_GPIO_TogglePin
canardBroadcast
strlen
memcpy
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_WritePin
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_CAN_Init
MX_USART3_UART_Init
HAL_Delay
strncmp
SystemCoreClock
canardDecodeScalar
