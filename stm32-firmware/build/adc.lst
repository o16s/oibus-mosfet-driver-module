ARM GAS  /tmp/ccbWAiIj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB126:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccbWAiIj.s 			page 2


  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** /* USER CODE BEGIN 0 */
  44:Src/adc.c     **** 
  45:Src/adc.c     **** /* USER CODE END 0 */
  46:Src/adc.c     **** 
  47:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  48:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  49:Src/adc.c     **** 
  50:Src/adc.c     **** /* ADC1 init function */
  51:Src/adc.c     **** void MX_ADC1_Init(void)
  52:Src/adc.c     **** {
  29              		.loc 1 52 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  53:Src/adc.c     ****   ADC_MultiModeTypeDef multimode = {0};
  40              		.loc 1 53 3 view .LVU1
  41              		.loc 1 53 24 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0793     		str	r3, [sp, #28]
  44 0008 0893     		str	r3, [sp, #32]
  45 000a 0993     		str	r3, [sp, #36]
  54:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  46              		.loc 1 54 3 is_stmt 1 view .LVU3
  47              		.loc 1 54 26 is_stmt 0 view .LVU4
  48 000c 0193     		str	r3, [sp, #4]
  49 000e 0293     		str	r3, [sp, #8]
  50 0010 0393     		str	r3, [sp, #12]
  51 0012 0493     		str	r3, [sp, #16]
  52 0014 0593     		str	r3, [sp, #20]
  53 0016 0693     		str	r3, [sp, #24]
  55:Src/adc.c     **** 
  56:Src/adc.c     ****   /**Common config 
  57:Src/adc.c     ****   */
  58:Src/adc.c     ****   hadc1.Instance = ADC1;
  54              		.loc 1 58 3 is_stmt 1 view .LVU5
  55              		.loc 1 58 18 is_stmt 0 view .LVU6
  56 0018 1B48     		ldr	r0, .L9
  57 001a 4FF0A042 		mov	r2, #1342177280
ARM GAS  /tmp/ccbWAiIj.s 			page 3


  58 001e 0260     		str	r2, [r0]
  59:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  59              		.loc 1 59 3 is_stmt 1 view .LVU7
  60              		.loc 1 59 29 is_stmt 0 view .LVU8
  61 0020 4360     		str	r3, [r0, #4]
  60:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  62              		.loc 1 60 3 is_stmt 1 view .LVU9
  63              		.loc 1 60 25 is_stmt 0 view .LVU10
  64 0022 8360     		str	r3, [r0, #8]
  61:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  65              		.loc 1 61 3 is_stmt 1 view .LVU11
  66              		.loc 1 61 27 is_stmt 0 view .LVU12
  67 0024 0361     		str	r3, [r0, #16]
  62:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  68              		.loc 1 62 3 is_stmt 1 view .LVU13
  69              		.loc 1 62 33 is_stmt 0 view .LVU14
  70 0026 C361     		str	r3, [r0, #28]
  63:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  71              		.loc 1 63 3 is_stmt 1 view .LVU15
  72              		.loc 1 63 36 is_stmt 0 view .LVU16
  73 0028 4362     		str	r3, [r0, #36]
  64:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  74              		.loc 1 64 3 is_stmt 1 view .LVU17
  75              		.loc 1 64 35 is_stmt 0 view .LVU18
  76 002a 0363     		str	r3, [r0, #48]
  65:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  77              		.loc 1 65 3 is_stmt 1 view .LVU19
  78              		.loc 1 65 31 is_stmt 0 view .LVU20
  79 002c 0122     		movs	r2, #1
  80 002e C262     		str	r2, [r0, #44]
  66:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  81              		.loc 1 66 3 is_stmt 1 view .LVU21
  82              		.loc 1 66 24 is_stmt 0 view .LVU22
  83 0030 C360     		str	r3, [r0, #12]
  67:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  84              		.loc 1 67 3 is_stmt 1 view .LVU23
  85              		.loc 1 67 30 is_stmt 0 view .LVU24
  86 0032 0262     		str	r2, [r0, #32]
  68:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  87              		.loc 1 68 3 is_stmt 1 view .LVU25
  88              		.loc 1 68 36 is_stmt 0 view .LVU26
  89 0034 4363     		str	r3, [r0, #52]
  69:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  90              		.loc 1 69 3 is_stmt 1 view .LVU27
  91              		.loc 1 69 27 is_stmt 0 view .LVU28
  92 0036 0422     		movs	r2, #4
  93 0038 4261     		str	r2, [r0, #20]
  70:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  94              		.loc 1 70 3 is_stmt 1 view .LVU29
  95              		.loc 1 70 31 is_stmt 0 view .LVU30
  96 003a 8361     		str	r3, [r0, #24]
  71:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  97              		.loc 1 71 3 is_stmt 1 view .LVU31
  98              		.loc 1 71 22 is_stmt 0 view .LVU32
  99 003c 8363     		str	r3, [r0, #56]
  72:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 100              		.loc 1 72 3 is_stmt 1 view .LVU33
ARM GAS  /tmp/ccbWAiIj.s 			page 4


 101              		.loc 1 72 7 is_stmt 0 view .LVU34
 102 003e FFF7FEFF 		bl	HAL_ADC_Init
 103              	.LVL0:
 104              		.loc 1 72 6 view .LVU35
 105 0042 B8B9     		cbnz	r0, .L6
 106              	.L2:
  73:Src/adc.c     ****   {
  74:Src/adc.c     ****     Error_Handler();
  75:Src/adc.c     ****   }
  76:Src/adc.c     ****   /**Configure the ADC multi-mode 
  77:Src/adc.c     ****   */
  78:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 107              		.loc 1 78 3 is_stmt 1 view .LVU36
 108              		.loc 1 78 18 is_stmt 0 view .LVU37
 109 0044 0023     		movs	r3, #0
 110 0046 0793     		str	r3, [sp, #28]
  79:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 111              		.loc 1 79 3 is_stmt 1 view .LVU38
 112              		.loc 1 79 7 is_stmt 0 view .LVU39
 113 0048 07A9     		add	r1, sp, #28
 114 004a 0F48     		ldr	r0, .L9
 115 004c FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 116              	.LVL1:
 117              		.loc 1 79 6 view .LVU40
 118 0050 98B9     		cbnz	r0, .L7
 119              	.L3:
  80:Src/adc.c     ****   {
  81:Src/adc.c     ****     Error_Handler();
  82:Src/adc.c     ****   }
  83:Src/adc.c     ****   /**Configure Regular Channel 
  84:Src/adc.c     ****   */
  85:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 120              		.loc 1 85 3 is_stmt 1 view .LVU41
 121              		.loc 1 85 19 is_stmt 0 view .LVU42
 122 0052 1023     		movs	r3, #16
 123 0054 0193     		str	r3, [sp, #4]
  86:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 124              		.loc 1 86 3 is_stmt 1 view .LVU43
 125              		.loc 1 86 16 is_stmt 0 view .LVU44
 126 0056 0123     		movs	r3, #1
 127 0058 0293     		str	r3, [sp, #8]
  87:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 128              		.loc 1 87 3 is_stmt 1 view .LVU45
 129              		.loc 1 87 22 is_stmt 0 view .LVU46
 130 005a 0023     		movs	r3, #0
 131 005c 0493     		str	r3, [sp, #16]
  88:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 132              		.loc 1 88 3 is_stmt 1 view .LVU47
 133              		.loc 1 88 24 is_stmt 0 view .LVU48
 134 005e 0393     		str	r3, [sp, #12]
  89:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 135              		.loc 1 89 3 is_stmt 1 view .LVU49
 136              		.loc 1 89 24 is_stmt 0 view .LVU50
 137 0060 0593     		str	r3, [sp, #20]
  90:Src/adc.c     ****   sConfig.Offset = 0;
 138              		.loc 1 90 3 is_stmt 1 view .LVU51
 139              		.loc 1 90 18 is_stmt 0 view .LVU52
ARM GAS  /tmp/ccbWAiIj.s 			page 5


 140 0062 0693     		str	r3, [sp, #24]
  91:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 141              		.loc 1 91 3 is_stmt 1 view .LVU53
 142              		.loc 1 91 7 is_stmt 0 view .LVU54
 143 0064 01A9     		add	r1, sp, #4
 144 0066 0848     		ldr	r0, .L9
 145 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 146              	.LVL2:
 147              		.loc 1 91 6 view .LVU55
 148 006c 40B9     		cbnz	r0, .L8
 149              	.L1:
  92:Src/adc.c     ****   {
  93:Src/adc.c     ****     Error_Handler();
  94:Src/adc.c     ****   }
  95:Src/adc.c     **** 
  96:Src/adc.c     **** }
 150              		.loc 1 96 1 view .LVU56
 151 006e 0BB0     		add	sp, sp, #44
 152              	.LCFI2:
 153              		.cfi_remember_state
 154              		.cfi_def_cfa_offset 4
 155              		@ sp needed
 156 0070 5DF804FB 		ldr	pc, [sp], #4
 157              	.L6:
 158              	.LCFI3:
 159              		.cfi_restore_state
  74:Src/adc.c     ****   }
 160              		.loc 1 74 5 is_stmt 1 view .LVU57
 161 0074 FFF7FEFF 		bl	Error_Handler
 162              	.LVL3:
 163 0078 E4E7     		b	.L2
 164              	.L7:
  81:Src/adc.c     ****   }
 165              		.loc 1 81 5 view .LVU58
 166 007a FFF7FEFF 		bl	Error_Handler
 167              	.LVL4:
 168 007e E8E7     		b	.L3
 169              	.L8:
  93:Src/adc.c     ****   }
 170              		.loc 1 93 5 view .LVU59
 171 0080 FFF7FEFF 		bl	Error_Handler
 172              	.LVL5:
 173              		.loc 1 96 1 is_stmt 0 view .LVU60
 174 0084 F3E7     		b	.L1
 175              	.L10:
 176 0086 00BF     		.align	2
 177              	.L9:
 178 0088 00000000 		.word	hadc1
 179              		.cfi_endproc
 180              	.LFE126:
 182              		.section	.text.MX_ADC2_Init,"ax",%progbits
 183              		.align	1
 184              		.global	MX_ADC2_Init
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccbWAiIj.s 			page 6


 190              	MX_ADC2_Init:
 191              	.LFB127:
  97:Src/adc.c     **** /* ADC2 init function */
  98:Src/adc.c     **** void MX_ADC2_Init(void)
  99:Src/adc.c     **** {
 192              		.loc 1 99 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 24
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 00B5     		push	{lr}
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 14, -4
 200 0002 87B0     		sub	sp, sp, #28
 201              	.LCFI5:
 202              		.cfi_def_cfa_offset 32
 100:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
 203              		.loc 1 100 3 view .LVU62
 204              		.loc 1 100 26 is_stmt 0 view .LVU63
 205 0004 0023     		movs	r3, #0
 206 0006 0093     		str	r3, [sp]
 207 0008 0193     		str	r3, [sp, #4]
 208 000a 0293     		str	r3, [sp, #8]
 209 000c 0393     		str	r3, [sp, #12]
 210 000e 0493     		str	r3, [sp, #16]
 211 0010 0593     		str	r3, [sp, #20]
 101:Src/adc.c     **** 
 102:Src/adc.c     ****   /**Common config 
 103:Src/adc.c     ****   */
 104:Src/adc.c     ****   hadc2.Instance = ADC2;
 212              		.loc 1 104 3 is_stmt 1 view .LVU64
 213              		.loc 1 104 18 is_stmt 0 view .LVU65
 214 0012 1648     		ldr	r0, .L17
 215 0014 164A     		ldr	r2, .L17+4
 216 0016 0260     		str	r2, [r0]
 105:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 217              		.loc 1 105 3 is_stmt 1 view .LVU66
 218              		.loc 1 105 29 is_stmt 0 view .LVU67
 219 0018 4360     		str	r3, [r0, #4]
 106:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 220              		.loc 1 106 3 is_stmt 1 view .LVU68
 221              		.loc 1 106 25 is_stmt 0 view .LVU69
 222 001a 8360     		str	r3, [r0, #8]
 107:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 223              		.loc 1 107 3 is_stmt 1 view .LVU70
 224              		.loc 1 107 27 is_stmt 0 view .LVU71
 225 001c 0361     		str	r3, [r0, #16]
 108:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = DISABLE;
 226              		.loc 1 108 3 is_stmt 1 view .LVU72
 227              		.loc 1 108 33 is_stmt 0 view .LVU73
 228 001e C361     		str	r3, [r0, #28]
 109:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 229              		.loc 1 109 3 is_stmt 1 view .LVU74
 230              		.loc 1 109 36 is_stmt 0 view .LVU75
 231 0020 4362     		str	r3, [r0, #36]
 110:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 232              		.loc 1 110 3 is_stmt 1 view .LVU76
ARM GAS  /tmp/ccbWAiIj.s 			page 7


 233              		.loc 1 110 35 is_stmt 0 view .LVU77
 234 0022 0363     		str	r3, [r0, #48]
 111:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 235              		.loc 1 111 3 is_stmt 1 view .LVU78
 236              		.loc 1 111 31 is_stmt 0 view .LVU79
 237 0024 0122     		movs	r2, #1
 238 0026 C262     		str	r2, [r0, #44]
 112:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 239              		.loc 1 112 3 is_stmt 1 view .LVU80
 240              		.loc 1 112 24 is_stmt 0 view .LVU81
 241 0028 C360     		str	r3, [r0, #12]
 113:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 1;
 242              		.loc 1 113 3 is_stmt 1 view .LVU82
 243              		.loc 1 113 30 is_stmt 0 view .LVU83
 244 002a 0262     		str	r2, [r0, #32]
 114:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 245              		.loc 1 114 3 is_stmt 1 view .LVU84
 246              		.loc 1 114 36 is_stmt 0 view .LVU85
 247 002c 4363     		str	r3, [r0, #52]
 115:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 248              		.loc 1 115 3 is_stmt 1 view .LVU86
 249              		.loc 1 115 27 is_stmt 0 view .LVU87
 250 002e 0422     		movs	r2, #4
 251 0030 4261     		str	r2, [r0, #20]
 116:Src/adc.c     ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 252              		.loc 1 116 3 is_stmt 1 view .LVU88
 253              		.loc 1 116 31 is_stmt 0 view .LVU89
 254 0032 8361     		str	r3, [r0, #24]
 117:Src/adc.c     ****   hadc2.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 255              		.loc 1 117 3 is_stmt 1 view .LVU90
 256              		.loc 1 117 22 is_stmt 0 view .LVU91
 257 0034 8363     		str	r3, [r0, #56]
 118:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 258              		.loc 1 118 3 is_stmt 1 view .LVU92
 259              		.loc 1 118 7 is_stmt 0 view .LVU93
 260 0036 FFF7FEFF 		bl	HAL_ADC_Init
 261              	.LVL6:
 262              		.loc 1 118 6 view .LVU94
 263 003a 80B9     		cbnz	r0, .L15
 264              	.L12:
 119:Src/adc.c     ****   {
 120:Src/adc.c     ****     Error_Handler();
 121:Src/adc.c     ****   }
 122:Src/adc.c     ****   /**Configure Regular Channel 
 123:Src/adc.c     ****   */
 124:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_4;
 265              		.loc 1 124 3 is_stmt 1 view .LVU95
 266              		.loc 1 124 19 is_stmt 0 view .LVU96
 267 003c 0423     		movs	r3, #4
 268 003e 0093     		str	r3, [sp]
 125:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 269              		.loc 1 125 3 is_stmt 1 view .LVU97
 270              		.loc 1 125 16 is_stmt 0 view .LVU98
 271 0040 0123     		movs	r3, #1
 272 0042 0193     		str	r3, [sp, #4]
 126:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 273              		.loc 1 126 3 is_stmt 1 view .LVU99
ARM GAS  /tmp/ccbWAiIj.s 			page 8


 274              		.loc 1 126 22 is_stmt 0 view .LVU100
 275 0044 0023     		movs	r3, #0
 276 0046 0393     		str	r3, [sp, #12]
 127:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 277              		.loc 1 127 3 is_stmt 1 view .LVU101
 278              		.loc 1 127 24 is_stmt 0 view .LVU102
 279 0048 0293     		str	r3, [sp, #8]
 128:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 280              		.loc 1 128 3 is_stmt 1 view .LVU103
 281              		.loc 1 128 24 is_stmt 0 view .LVU104
 282 004a 0493     		str	r3, [sp, #16]
 129:Src/adc.c     ****   sConfig.Offset = 0;
 283              		.loc 1 129 3 is_stmt 1 view .LVU105
 284              		.loc 1 129 18 is_stmt 0 view .LVU106
 285 004c 0593     		str	r3, [sp, #20]
 130:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 286              		.loc 1 130 3 is_stmt 1 view .LVU107
 287              		.loc 1 130 7 is_stmt 0 view .LVU108
 288 004e 6946     		mov	r1, sp
 289 0050 0648     		ldr	r0, .L17
 290 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 291              	.LVL7:
 292              		.loc 1 130 6 view .LVU109
 293 0056 28B9     		cbnz	r0, .L16
 294              	.L11:
 131:Src/adc.c     ****   {
 132:Src/adc.c     ****     Error_Handler();
 133:Src/adc.c     ****   }
 134:Src/adc.c     **** 
 135:Src/adc.c     **** }
 295              		.loc 1 135 1 view .LVU110
 296 0058 07B0     		add	sp, sp, #28
 297              	.LCFI6:
 298              		.cfi_remember_state
 299              		.cfi_def_cfa_offset 4
 300              		@ sp needed
 301 005a 5DF804FB 		ldr	pc, [sp], #4
 302              	.L15:
 303              	.LCFI7:
 304              		.cfi_restore_state
 120:Src/adc.c     ****   }
 305              		.loc 1 120 5 is_stmt 1 view .LVU111
 306 005e FFF7FEFF 		bl	Error_Handler
 307              	.LVL8:
 308 0062 EBE7     		b	.L12
 309              	.L16:
 132:Src/adc.c     ****   }
 310              		.loc 1 132 5 view .LVU112
 311 0064 FFF7FEFF 		bl	Error_Handler
 312              	.LVL9:
 313              		.loc 1 135 1 is_stmt 0 view .LVU113
 314 0068 F6E7     		b	.L11
 315              	.L18:
 316 006a 00BF     		.align	2
 317              	.L17:
 318 006c 00000000 		.word	hadc2
 319 0070 00010050 		.word	1342177536
ARM GAS  /tmp/ccbWAiIj.s 			page 9


 320              		.cfi_endproc
 321              	.LFE127:
 323              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 324              		.align	1
 325              		.global	HAL_ADC_MspInit
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv4-sp-d16
 331              	HAL_ADC_MspInit:
 332              	.LVL10:
 333              	.LFB128:
 136:Src/adc.c     **** 
 137:Src/adc.c     **** static uint32_t HAL_RCC_ADC12_CLK_ENABLED=0;
 138:Src/adc.c     **** 
 139:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 140:Src/adc.c     **** {
 334              		.loc 1 140 1 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 40
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		.loc 1 140 1 is_stmt 0 view .LVU115
 339 0000 00B5     		push	{lr}
 340              	.LCFI8:
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 14, -4
 343 0002 8BB0     		sub	sp, sp, #44
 344              	.LCFI9:
 345              		.cfi_def_cfa_offset 48
 141:Src/adc.c     **** 
 142:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 346              		.loc 1 142 3 is_stmt 1 view .LVU116
 347              		.loc 1 142 20 is_stmt 0 view .LVU117
 348 0004 0023     		movs	r3, #0
 349 0006 0593     		str	r3, [sp, #20]
 350 0008 0693     		str	r3, [sp, #24]
 351 000a 0793     		str	r3, [sp, #28]
 352 000c 0893     		str	r3, [sp, #32]
 353 000e 0993     		str	r3, [sp, #36]
 143:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 354              		.loc 1 143 3 is_stmt 1 view .LVU118
 355              		.loc 1 143 15 is_stmt 0 view .LVU119
 356 0010 0368     		ldr	r3, [r0]
 357              		.loc 1 143 5 view .LVU120
 358 0012 B3F1A04F 		cmp	r3, #1342177280
 359 0016 05D0     		beq	.L25
 144:Src/adc.c     ****   {
 145:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 146:Src/adc.c     **** 
 147:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 148:Src/adc.c     ****     /* ADC1 clock enable */
 149:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 150:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 151:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 152:Src/adc.c     ****     }
 153:Src/adc.c     ****   
 154:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
ARM GAS  /tmp/ccbWAiIj.s 			page 10


 155:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 156:Src/adc.c     ****     PA1     ------> ADC1_IN2
 157:Src/adc.c     ****     PA2     ------> ADC1_IN3 
 158:Src/adc.c     ****     */
 159:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2;
 160:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 161:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 162:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 163:Src/adc.c     **** 
 164:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 165:Src/adc.c     **** 
 166:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 167:Src/adc.c     ****   }
 168:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 360              		.loc 1 168 8 is_stmt 1 view .LVU121
 361              		.loc 1 168 10 is_stmt 0 view .LVU122
 362 0018 274A     		ldr	r2, .L29
 363 001a 9342     		cmp	r3, r2
 364 001c 27D0     		beq	.L26
 365              	.LVL11:
 366              	.L19:
 169:Src/adc.c     ****   {
 170:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 171:Src/adc.c     **** 
 172:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 173:Src/adc.c     ****     /* ADC2 clock enable */
 174:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 175:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 176:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 177:Src/adc.c     ****     }
 178:Src/adc.c     ****   
 179:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 180:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 181:Src/adc.c     ****     PA4     ------> ADC2_IN1
 182:Src/adc.c     ****     PA5     ------> ADC2_IN2
 183:Src/adc.c     ****     PA6     ------> ADC2_IN3
 184:Src/adc.c     ****     PA7     ------> ADC2_IN4 
 185:Src/adc.c     ****     */
 186:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 187:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 188:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 189:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 190:Src/adc.c     **** 
 191:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 192:Src/adc.c     **** 
 193:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 194:Src/adc.c     ****   }
 195:Src/adc.c     **** }
 367              		.loc 1 195 1 view .LVU123
 368 001e 0BB0     		add	sp, sp, #44
 369              	.LCFI10:
 370              		.cfi_remember_state
 371              		.cfi_def_cfa_offset 4
 372              		@ sp needed
 373 0020 5DF804FB 		ldr	pc, [sp], #4
 374              	.LVL12:
 375              	.L25:
ARM GAS  /tmp/ccbWAiIj.s 			page 11


 376              	.LCFI11:
 377              		.cfi_restore_state
 149:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 378              		.loc 1 149 5 is_stmt 1 view .LVU124
 149:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 379              		.loc 1 149 30 is_stmt 0 view .LVU125
 380 0024 254A     		ldr	r2, .L29+4
 381 0026 1368     		ldr	r3, [r2]
 382 0028 0133     		adds	r3, r3, #1
 383 002a 1360     		str	r3, [r2]
 150:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 384              		.loc 1 150 5 is_stmt 1 view .LVU126
 150:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 385              		.loc 1 150 7 is_stmt 0 view .LVU127
 386 002c 012B     		cmp	r3, #1
 387 002e 13D0     		beq	.L27
 388              	.L21:
 154:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 389              		.loc 1 154 5 is_stmt 1 view .LVU128
 390              	.LBB2:
 154:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 391              		.loc 1 154 5 view .LVU129
 154:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 392              		.loc 1 154 5 view .LVU130
 393 0030 234B     		ldr	r3, .L29+8
 394 0032 5A69     		ldr	r2, [r3, #20]
 395 0034 42F40032 		orr	r2, r2, #131072
 396 0038 5A61     		str	r2, [r3, #20]
 154:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 397              		.loc 1 154 5 view .LVU131
 398 003a 5B69     		ldr	r3, [r3, #20]
 399 003c 03F40033 		and	r3, r3, #131072
 400 0040 0293     		str	r3, [sp, #8]
 154:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 401              		.loc 1 154 5 view .LVU132
 402 0042 029B     		ldr	r3, [sp, #8]
 403              	.LBE2:
 159:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 404              		.loc 1 159 5 view .LVU133
 159:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 405              		.loc 1 159 25 is_stmt 0 view .LVU134
 406 0044 0623     		movs	r3, #6
 407 0046 0593     		str	r3, [sp, #20]
 160:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 408              		.loc 1 160 5 is_stmt 1 view .LVU135
 160:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 409              		.loc 1 160 26 is_stmt 0 view .LVU136
 410 0048 0323     		movs	r3, #3
 411 004a 0693     		str	r3, [sp, #24]
 161:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 412              		.loc 1 161 5 is_stmt 1 view .LVU137
 162:Src/adc.c     **** 
 413              		.loc 1 162 5 view .LVU138
 414 004c 05A9     		add	r1, sp, #20
 415 004e 4FF09040 		mov	r0, #1207959552
 416              	.LVL13:
 162:Src/adc.c     **** 
ARM GAS  /tmp/ccbWAiIj.s 			page 12


 417              		.loc 1 162 5 is_stmt 0 view .LVU139
 418 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 419              	.LVL14:
 420 0056 E2E7     		b	.L19
 421              	.LVL15:
 422              	.L27:
 151:Src/adc.c     ****     }
 423              		.loc 1 151 7 is_stmt 1 view .LVU140
 424              	.LBB3:
 151:Src/adc.c     ****     }
 425              		.loc 1 151 7 view .LVU141
 151:Src/adc.c     ****     }
 426              		.loc 1 151 7 view .LVU142
 427 0058 194B     		ldr	r3, .L29+8
 428 005a 5A69     		ldr	r2, [r3, #20]
 429 005c 42F08052 		orr	r2, r2, #268435456
 430 0060 5A61     		str	r2, [r3, #20]
 151:Src/adc.c     ****     }
 431              		.loc 1 151 7 view .LVU143
 432 0062 5B69     		ldr	r3, [r3, #20]
 433 0064 03F08053 		and	r3, r3, #268435456
 434 0068 0193     		str	r3, [sp, #4]
 151:Src/adc.c     ****     }
 435              		.loc 1 151 7 view .LVU144
 436 006a 019B     		ldr	r3, [sp, #4]
 437 006c E0E7     		b	.L21
 438              	.L26:
 439              	.LBE3:
 174:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 440              		.loc 1 174 5 view .LVU145
 174:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 441              		.loc 1 174 30 is_stmt 0 view .LVU146
 442 006e 134A     		ldr	r2, .L29+4
 443 0070 1368     		ldr	r3, [r2]
 444 0072 0133     		adds	r3, r3, #1
 445 0074 1360     		str	r3, [r2]
 175:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 446              		.loc 1 175 5 is_stmt 1 view .LVU147
 175:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 447              		.loc 1 175 7 is_stmt 0 view .LVU148
 448 0076 012B     		cmp	r3, #1
 449 0078 13D0     		beq	.L28
 450              	.L23:
 179:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 451              		.loc 1 179 5 is_stmt 1 view .LVU149
 452              	.LBB4:
 179:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 453              		.loc 1 179 5 view .LVU150
 179:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 454              		.loc 1 179 5 view .LVU151
 455 007a 114B     		ldr	r3, .L29+8
 456 007c 5A69     		ldr	r2, [r3, #20]
 457 007e 42F40032 		orr	r2, r2, #131072
 458 0082 5A61     		str	r2, [r3, #20]
 179:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 459              		.loc 1 179 5 view .LVU152
 460 0084 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/ccbWAiIj.s 			page 13


 461 0086 03F40033 		and	r3, r3, #131072
 462 008a 0493     		str	r3, [sp, #16]
 179:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 463              		.loc 1 179 5 view .LVU153
 464 008c 049B     		ldr	r3, [sp, #16]
 465              	.LBE4:
 186:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 466              		.loc 1 186 5 view .LVU154
 186:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 467              		.loc 1 186 25 is_stmt 0 view .LVU155
 468 008e F023     		movs	r3, #240
 469 0090 0593     		str	r3, [sp, #20]
 187:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 470              		.loc 1 187 5 is_stmt 1 view .LVU156
 187:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 471              		.loc 1 187 26 is_stmt 0 view .LVU157
 472 0092 0323     		movs	r3, #3
 473 0094 0693     		str	r3, [sp, #24]
 188:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 474              		.loc 1 188 5 is_stmt 1 view .LVU158
 189:Src/adc.c     **** 
 475              		.loc 1 189 5 view .LVU159
 476 0096 05A9     		add	r1, sp, #20
 477 0098 4FF09040 		mov	r0, #1207959552
 478              	.LVL16:
 189:Src/adc.c     **** 
 479              		.loc 1 189 5 is_stmt 0 view .LVU160
 480 009c FFF7FEFF 		bl	HAL_GPIO_Init
 481              	.LVL17:
 482              		.loc 1 195 1 view .LVU161
 483 00a0 BDE7     		b	.L19
 484              	.LVL18:
 485              	.L28:
 176:Src/adc.c     ****     }
 486              		.loc 1 176 7 is_stmt 1 view .LVU162
 487              	.LBB5:
 176:Src/adc.c     ****     }
 488              		.loc 1 176 7 view .LVU163
 176:Src/adc.c     ****     }
 489              		.loc 1 176 7 view .LVU164
 490 00a2 074B     		ldr	r3, .L29+8
 491 00a4 5A69     		ldr	r2, [r3, #20]
 492 00a6 42F08052 		orr	r2, r2, #268435456
 493 00aa 5A61     		str	r2, [r3, #20]
 176:Src/adc.c     ****     }
 494              		.loc 1 176 7 view .LVU165
 495 00ac 5B69     		ldr	r3, [r3, #20]
 496 00ae 03F08053 		and	r3, r3, #268435456
 497 00b2 0393     		str	r3, [sp, #12]
 176:Src/adc.c     ****     }
 498              		.loc 1 176 7 view .LVU166
 499 00b4 039B     		ldr	r3, [sp, #12]
 500 00b6 E0E7     		b	.L23
 501              	.L30:
 502              		.align	2
 503              	.L29:
 504 00b8 00010050 		.word	1342177536
ARM GAS  /tmp/ccbWAiIj.s 			page 14


 505 00bc 00000000 		.word	.LANCHOR0
 506 00c0 00100240 		.word	1073876992
 507              	.LBE5:
 508              		.cfi_endproc
 509              	.LFE128:
 511              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 512              		.align	1
 513              		.global	HAL_ADC_MspDeInit
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv4-sp-d16
 519              	HAL_ADC_MspDeInit:
 520              	.LVL19:
 521              	.LFB129:
 196:Src/adc.c     **** 
 197:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 198:Src/adc.c     **** {
 522              		.loc 1 198 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		.loc 1 198 1 is_stmt 0 view .LVU168
 527 0000 08B5     		push	{r3, lr}
 528              	.LCFI12:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 3, -8
 531              		.cfi_offset 14, -4
 199:Src/adc.c     **** 
 200:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 532              		.loc 1 200 3 is_stmt 1 view .LVU169
 533              		.loc 1 200 15 is_stmt 0 view .LVU170
 534 0002 0368     		ldr	r3, [r0]
 535              		.loc 1 200 5 view .LVU171
 536 0004 B3F1A04F 		cmp	r3, #1342177280
 537 0008 03D0     		beq	.L37
 201:Src/adc.c     ****   {
 202:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 203:Src/adc.c     **** 
 204:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 205:Src/adc.c     ****     /* Peripheral clock disable */
 206:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED--;
 207:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 208:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 209:Src/adc.c     ****     }
 210:Src/adc.c     ****   
 211:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 212:Src/adc.c     ****     PA1     ------> ADC1_IN2
 213:Src/adc.c     ****     PA2     ------> ADC1_IN3 
 214:Src/adc.c     ****     */
 215:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1|GPIO_PIN_2);
 216:Src/adc.c     **** 
 217:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 218:Src/adc.c     **** 
 219:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 220:Src/adc.c     ****   }
 221:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
ARM GAS  /tmp/ccbWAiIj.s 			page 15


 538              		.loc 1 221 8 is_stmt 1 view .LVU172
 539              		.loc 1 221 10 is_stmt 0 view .LVU173
 540 000a 124A     		ldr	r2, .L39
 541 000c 9342     		cmp	r3, r2
 542 000e 10D0     		beq	.L38
 543              	.LVL20:
 544              	.L31:
 222:Src/adc.c     ****   {
 223:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 224:Src/adc.c     **** 
 225:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 226:Src/adc.c     ****     /* Peripheral clock disable */
 227:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED--;
 228:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 229:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 230:Src/adc.c     ****     }
 231:Src/adc.c     ****   
 232:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 233:Src/adc.c     ****     PA4     ------> ADC2_IN1
 234:Src/adc.c     ****     PA5     ------> ADC2_IN2
 235:Src/adc.c     ****     PA6     ------> ADC2_IN3
 236:Src/adc.c     ****     PA7     ------> ADC2_IN4 
 237:Src/adc.c     ****     */
 238:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 239:Src/adc.c     **** 
 240:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 241:Src/adc.c     **** 
 242:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 243:Src/adc.c     ****   }
 244:Src/adc.c     **** } 
 545              		.loc 1 244 1 view .LVU174
 546 0010 08BD     		pop	{r3, pc}
 547              	.LVL21:
 548              	.L37:
 206:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 549              		.loc 1 206 5 is_stmt 1 view .LVU175
 206:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 550              		.loc 1 206 30 is_stmt 0 view .LVU176
 551 0012 114A     		ldr	r2, .L39+4
 552 0014 1368     		ldr	r3, [r2]
 553 0016 013B     		subs	r3, r3, #1
 554 0018 1360     		str	r3, [r2]
 207:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 555              		.loc 1 207 5 is_stmt 1 view .LVU177
 207:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 556              		.loc 1 207 7 is_stmt 0 view .LVU178
 557 001a 23B9     		cbnz	r3, .L33
 208:Src/adc.c     ****     }
 558              		.loc 1 208 7 is_stmt 1 view .LVU179
 559 001c 0F4A     		ldr	r2, .L39+8
 560 001e 5369     		ldr	r3, [r2, #20]
 561 0020 23F08053 		bic	r3, r3, #268435456
 562 0024 5361     		str	r3, [r2, #20]
 563              	.L33:
 215:Src/adc.c     **** 
 564              		.loc 1 215 5 view .LVU180
 565 0026 0621     		movs	r1, #6
ARM GAS  /tmp/ccbWAiIj.s 			page 16


 566 0028 4FF09040 		mov	r0, #1207959552
 567              	.LVL22:
 215:Src/adc.c     **** 
 568              		.loc 1 215 5 is_stmt 0 view .LVU181
 569 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 570              	.LVL23:
 571 0030 EEE7     		b	.L31
 572              	.LVL24:
 573              	.L38:
 227:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 574              		.loc 1 227 5 is_stmt 1 view .LVU182
 227:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 575              		.loc 1 227 30 is_stmt 0 view .LVU183
 576 0032 094A     		ldr	r2, .L39+4
 577 0034 1368     		ldr	r3, [r2]
 578 0036 013B     		subs	r3, r3, #1
 579 0038 1360     		str	r3, [r2]
 228:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 580              		.loc 1 228 5 is_stmt 1 view .LVU184
 228:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 581              		.loc 1 228 7 is_stmt 0 view .LVU185
 582 003a 23B9     		cbnz	r3, .L35
 229:Src/adc.c     ****     }
 583              		.loc 1 229 7 is_stmt 1 view .LVU186
 584 003c 074A     		ldr	r2, .L39+8
 585 003e 5369     		ldr	r3, [r2, #20]
 586 0040 23F08053 		bic	r3, r3, #268435456
 587 0044 5361     		str	r3, [r2, #20]
 588              	.L35:
 238:Src/adc.c     **** 
 589              		.loc 1 238 5 view .LVU187
 590 0046 F021     		movs	r1, #240
 591 0048 4FF09040 		mov	r0, #1207959552
 592              	.LVL25:
 238:Src/adc.c     **** 
 593              		.loc 1 238 5 is_stmt 0 view .LVU188
 594 004c FFF7FEFF 		bl	HAL_GPIO_DeInit
 595              	.LVL26:
 596              		.loc 1 244 1 view .LVU189
 597 0050 DEE7     		b	.L31
 598              	.L40:
 599 0052 00BF     		.align	2
 600              	.L39:
 601 0054 00010050 		.word	1342177536
 602 0058 00000000 		.word	.LANCHOR0
 603 005c 00100240 		.word	1073876992
 604              		.cfi_endproc
 605              	.LFE129:
 607              		.comm	hadc2,84,4
 608              		.comm	hadc1,84,4
 609              		.section	.bss.HAL_RCC_ADC12_CLK_ENABLED,"aw",%nobits
 610              		.align	2
 611              		.set	.LANCHOR0,. + 0
 614              	HAL_RCC_ADC12_CLK_ENABLED:
 615 0000 00000000 		.space	4
 616              		.text
 617              	.Letext0:
ARM GAS  /tmp/ccbWAiIj.s 			page 17


 618              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 619              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 620              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 621              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 622              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 623              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 624              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 625              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 626              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 627              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 628              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 629              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 630              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 631              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 632              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 633              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 634              		.file 18 "Inc/adc.h"
 635              		.file 19 "Inc/main.h"
ARM GAS  /tmp/ccbWAiIj.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccbWAiIj.s:18     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccbWAiIj.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccbWAiIj.s:178    .text.MX_ADC1_Init:0000000000000088 $d
                            *COM*:0000000000000054 hadc1
     /tmp/ccbWAiIj.s:183    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccbWAiIj.s:190    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccbWAiIj.s:318    .text.MX_ADC2_Init:000000000000006c $d
                            *COM*:0000000000000054 hadc2
     /tmp/ccbWAiIj.s:324    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccbWAiIj.s:331    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccbWAiIj.s:504    .text.HAL_ADC_MspInit:00000000000000b8 $d
     /tmp/ccbWAiIj.s:512    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccbWAiIj.s:519    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccbWAiIj.s:601    .text.HAL_ADC_MspDeInit:0000000000000054 $d
     /tmp/ccbWAiIj.s:610    .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 $d
     /tmp/ccbWAiIj.s:614    .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 HAL_RCC_ADC12_CLK_ENABLED

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
