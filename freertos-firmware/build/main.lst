ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB132:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2019 STMicroelectronics International N.V.
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 2


  32:Src/main.c    ****   *    this license.
  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* USER CODE END Header */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  52:Src/main.c    **** #include "main.h"
  53:Src/main.c    **** #include "cmsis_os.h"
  54:Src/main.c    **** #include "adc.h"
  55:Src/main.c    **** #include "can.h"
  56:Src/main.c    **** #include "usart.h"
  57:Src/main.c    **** #include "gpio.h"
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN Includes */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END Includes */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN PTD */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PTD */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  70:Src/main.c    **** /* USER CODE BEGIN PD */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PD */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  75:Src/main.c    **** /* USER CODE BEGIN PM */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PM */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE BEGIN PV */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END PV */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  86:Src/main.c    **** void SystemClock_Config(void);
  87:Src/main.c    **** void MX_FREERTOS_Init(void);
  88:Src/main.c    **** /* USER CODE BEGIN PFP */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** /* USER CODE END PFP */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  93:Src/main.c    **** /* USER CODE BEGIN 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /* USER CODE END 0 */
  96:Src/main.c    **** 
  97:Src/main.c    **** /**
  98:Src/main.c    ****   * @brief  The application entry point.
  99:Src/main.c    ****   * @retval int
 100:Src/main.c    ****   */
 101:Src/main.c    **** int main(void)
 102:Src/main.c    **** {
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END 1 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 110:Src/main.c    ****   HAL_Init();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN Init */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END Init */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Configure the system clock */
 117:Src/main.c    ****   SystemClock_Config();
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE END SysInit */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Initialize all configured peripherals */
 124:Src/main.c    ****   MX_GPIO_Init();
 125:Src/main.c    ****   MX_ADC1_Init();
 126:Src/main.c    ****   MX_ADC2_Init();
 127:Src/main.c    ****   MX_CAN_Init();
 128:Src/main.c    ****   MX_USART3_UART_Init();
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE BEGIN 2 */
 131:Src/main.c    ****   
 132:Src/main.c    **** 
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE END 2 */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* Call init function for freertos objects (in freertos.c) */
 137:Src/main.c    ****   MX_FREERTOS_Init();
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Start scheduler */
 140:Src/main.c    ****   osKernelStart();
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* Infinite loop */
 145:Src/main.c    ****   /* USER CODE BEGIN WHILE */
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 4


 146:Src/main.c    ****   while (1)
 147:Src/main.c    ****   {
 148:Src/main.c    ****     /* USER CODE END WHILE */
 149:Src/main.c    **** 
 150:Src/main.c    ****     /* USER CODE BEGIN 3 */
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /* USER CODE END 3 */
 153:Src/main.c    **** }
 154:Src/main.c    **** 
 155:Src/main.c    **** /**
 156:Src/main.c    ****   * @brief System Clock Configuration
 157:Src/main.c    ****   * @retval None
 158:Src/main.c    ****   */
 159:Src/main.c    **** void SystemClock_Config(void)
 160:Src/main.c    **** {
  28              		.loc 1 160 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 120
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 9FB0     		sub	sp, sp, #124
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 136
 161:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 161 0
  42 0004 0024     		movs	r4, #0
  43 0006 1794     		str	r4, [sp, #92]
  44 0008 1994     		str	r4, [sp, #100]
  45 000a 1A94     		str	r4, [sp, #104]
 162:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 162 0
  47 000c 0F94     		str	r4, [sp, #60]
  48 000e 1094     		str	r4, [sp, #64]
  49 0010 1194     		str	r4, [sp, #68]
  50 0012 1294     		str	r4, [sp, #72]
  51 0014 1394     		str	r4, [sp, #76]
 163:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  52              		.loc 1 163 0
  53 0016 3C22     		movs	r2, #60
  54 0018 2146     		mov	r1, r4
  55 001a 6846     		mov	r0, sp
  56 001c FFF7FEFF 		bl	memset
  57              	.LVL0:
 164:Src/main.c    **** 
 165:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 166:Src/main.c    ****   */
 167:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  58              		.loc 1 167 0
  59 0020 0125     		movs	r5, #1
  60 0022 1495     		str	r5, [sp, #80]
 168:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  61              		.loc 1 168 0
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 5


  62 0024 4FF48033 		mov	r3, #65536
  63 0028 1593     		str	r3, [sp, #84]
 169:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
  64              		.loc 1 169 0
  65 002a 1695     		str	r5, [sp, #88]
 170:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  66              		.loc 1 170 0
  67 002c 1895     		str	r5, [sp, #96]
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  68              		.loc 1 171 0
  69 002e 0222     		movs	r2, #2
  70 0030 1B92     		str	r2, [sp, #108]
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  71              		.loc 1 172 0
  72 0032 1C93     		str	r3, [sp, #112]
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  73              		.loc 1 173 0
  74 0034 4FF4E013 		mov	r3, #1835008
  75 0038 1D93     		str	r3, [sp, #116]
 174:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  76              		.loc 1 174 0
  77 003a 14A8     		add	r0, sp, #80
  78 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
  79              	.LVL1:
 175:Src/main.c    ****   {
 176:Src/main.c    ****     Error_Handler();
 177:Src/main.c    ****   }
 178:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 179:Src/main.c    ****   */
 180:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  80              		.loc 1 180 0
  81 0040 0F23     		movs	r3, #15
  82 0042 0F93     		str	r3, [sp, #60]
 181:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 182:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
  83              		.loc 1 182 0
  84 0044 1095     		str	r5, [sp, #64]
 183:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  85              		.loc 1 183 0
  86 0046 1194     		str	r4, [sp, #68]
 184:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  87              		.loc 1 184 0
  88 0048 4FF48063 		mov	r3, #1024
  89 004c 1293     		str	r3, [sp, #72]
 185:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  90              		.loc 1 185 0
  91 004e 1394     		str	r4, [sp, #76]
 186:Src/main.c    **** 
 187:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
  92              		.loc 1 187 0
  93 0050 2146     		mov	r1, r4
  94 0052 0FA8     		add	r0, sp, #60
  95 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  96              	.LVL2:
 188:Src/main.c    ****   {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 6


 191:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_ADC12;
  97              		.loc 1 191 0
  98 0058 8423     		movs	r3, #132
  99 005a 0093     		str	r3, [sp]
 192:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 100              		.loc 1 192 0
 101 005c 0494     		str	r4, [sp, #16]
 193:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 102              		.loc 1 193 0
 103 005e 4FF48073 		mov	r3, #256
 104 0062 0993     		str	r3, [sp, #36]
 194:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 105              		.loc 1 194 0
 106 0064 6846     		mov	r0, sp
 107 0066 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 108              	.LVL3:
 195:Src/main.c    ****   {
 196:Src/main.c    ****     Error_Handler();
 197:Src/main.c    ****   }
 198:Src/main.c    **** }
 109              		.loc 1 198 0
 110 006a 1FB0     		add	sp, sp, #124
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 12
 113              		@ sp needed
 114 006c 30BD     		pop	{r4, r5, pc}
 115              		.cfi_endproc
 116              	.LFE132:
 118              		.section	.text.main,"ax",%progbits
 119              		.align	1
 120              		.global	main
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	main:
 127              	.LFB131:
 102:Src/main.c    ****   /* USER CODE BEGIN 1 */
 128              		.loc 1 102 0
 129              		.cfi_startproc
 130              		@ Volatile: function does not return.
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133 0000 08B5     		push	{r3, lr}
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 3, -8
 137              		.cfi_offset 14, -4
 110:Src/main.c    **** 
 138              		.loc 1 110 0
 139 0002 FFF7FEFF 		bl	HAL_Init
 140              	.LVL4:
 117:Src/main.c    **** 
 141              		.loc 1 117 0
 142 0006 FFF7FEFF 		bl	SystemClock_Config
 143              	.LVL5:
 124:Src/main.c    ****   MX_ADC1_Init();
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 7


 144              		.loc 1 124 0
 145 000a FFF7FEFF 		bl	MX_GPIO_Init
 146              	.LVL6:
 125:Src/main.c    ****   MX_ADC2_Init();
 147              		.loc 1 125 0
 148 000e FFF7FEFF 		bl	MX_ADC1_Init
 149              	.LVL7:
 126:Src/main.c    ****   MX_CAN_Init();
 150              		.loc 1 126 0
 151 0012 FFF7FEFF 		bl	MX_ADC2_Init
 152              	.LVL8:
 127:Src/main.c    ****   MX_USART3_UART_Init();
 153              		.loc 1 127 0
 154 0016 FFF7FEFF 		bl	MX_CAN_Init
 155              	.LVL9:
 128:Src/main.c    **** 
 156              		.loc 1 128 0
 157 001a FFF7FEFF 		bl	MX_USART3_UART_Init
 158              	.LVL10:
 137:Src/main.c    **** 
 159              		.loc 1 137 0
 160 001e FFF7FEFF 		bl	MX_FREERTOS_Init
 161              	.LVL11:
 140:Src/main.c    **** 
 162              		.loc 1 140 0
 163 0022 FFF7FEFF 		bl	osKernelStart
 164              	.LVL12:
 165              	.L4:
 166 0026 FEE7     		b	.L4
 167              		.cfi_endproc
 168              	.LFE131:
 170              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 171              		.align	1
 172              		.global	HAL_TIM_PeriodElapsedCallback
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	HAL_TIM_PeriodElapsedCallback:
 179              	.LFB133:
 199:Src/main.c    **** 
 200:Src/main.c    **** /* USER CODE BEGIN 4 */
 201:Src/main.c    **** 
 202:Src/main.c    **** /* USER CODE END 4 */
 203:Src/main.c    **** 
 204:Src/main.c    **** /**
 205:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 206:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 207:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 208:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 209:Src/main.c    ****   * @param  htim : TIM handle
 210:Src/main.c    ****   * @retval None
 211:Src/main.c    ****   */
 212:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 213:Src/main.c    **** {
 180              		.loc 1 213 0
 181              		.cfi_startproc
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 8


 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL13:
 185 0000 08B5     		push	{r3, lr}
 186              	.LCFI4:
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 3, -8
 189              		.cfi_offset 14, -4
 214:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* USER CODE END Callback 0 */
 217:Src/main.c    ****   if (htim->Instance == TIM1) {
 190              		.loc 1 217 0
 191 0002 0268     		ldr	r2, [r0]
 192 0004 034B     		ldr	r3, .L10
 193 0006 9A42     		cmp	r2, r3
 194 0008 00D0     		beq	.L9
 195              	.LVL14:
 196              	.L6:
 218:Src/main.c    ****     HAL_IncTick();
 219:Src/main.c    ****   }
 220:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE END Callback 1 */
 223:Src/main.c    **** }
 197              		.loc 1 223 0
 198 000a 08BD     		pop	{r3, pc}
 199              	.LVL15:
 200              	.L9:
 218:Src/main.c    ****     HAL_IncTick();
 201              		.loc 1 218 0
 202 000c FFF7FEFF 		bl	HAL_IncTick
 203              	.LVL16:
 204              		.loc 1 223 0
 205 0010 FBE7     		b	.L6
 206              	.L11:
 207 0012 00BF     		.align	2
 208              	.L10:
 209 0014 002C0140 		.word	1073818624
 210              		.cfi_endproc
 211              	.LFE133:
 213              		.section	.text.Error_Handler,"ax",%progbits
 214              		.align	1
 215              		.global	Error_Handler
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv4-sp-d16
 221              	Error_Handler:
 222              	.LFB134:
 224:Src/main.c    **** 
 225:Src/main.c    **** /**
 226:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 227:Src/main.c    ****   * @retval None
 228:Src/main.c    ****   */
 229:Src/main.c    **** void Error_Handler(void)
 230:Src/main.c    **** {
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 9


 223              		.loc 1 230 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 231:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 232:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 233:Src/main.c    **** 
 234:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 235:Src/main.c    **** }
 228              		.loc 1 235 0
 229 0000 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE134:
 233              		.text
 234              	.Letext0:
 235              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/machine/_d
 236              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_stdin
 237              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 238              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 239              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 240              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 241              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/lock.h
 242              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_types
 243              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/lib/gcc/arm-none-eabi/7.3.1/inc
 244              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/reent
 245              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 246              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 247              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 248              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 249              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 250              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 251              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 252              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 253              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 254              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 255              		.file 22 "Inc/adc.h"
 256              		.file 23 "Inc/can.h"
 257              		.file 24 "Inc/usart.h"
 258              		.file 25 "Inc/gpio.h"
 259              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 260              		.file 27 "<built-in>"
ARM GAS  /var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:18     .text.SystemClock_Config:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:119    .text.main:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:126    .text.main:0000000000000000 main
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:171    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:178    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:209    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:214    .text.Error_Handler:0000000000000000 $t
/var/folders/pr/jy5_dyq97qq9ykqb3p58dhg00000gn/T//ccpGO5S0.s:221    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_CAN_Init
MX_USART3_UART_Init
MX_FREERTOS_Init
osKernelStart
HAL_IncTick
